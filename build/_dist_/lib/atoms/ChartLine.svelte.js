import './ChartLine.svelte.css';
/* src/lib/atoms/ChartLine.svelte generated by Svelte v3.38.2 */
import {
	SvelteComponent,
	append,
	attr,
	destroy_each,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_style,
	space
} from "../../../_snowpack/pkg/svelte/internal.js";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i].start;
	child_ctx[2] = list[i].size;
	return child_ctx;
}

// (9:2) {#each chart as { start, size }}
function create_each_block(ctx) {
	let tr;
	let td;
	let t;

	return {
		c() {
			tr = element("tr");
			td = element("td");
			t = space();
			set_style(td, "--start", /*start*/ ctx[1]);
			set_style(td, "--size", /*size*/ ctx[2]);
		},
		m(target, anchor) {
			insert(target, tr, anchor);
			append(tr, td);
			append(tr, t);
		},
		p(ctx, dirty) {
			if (dirty & /*chart*/ 1) {
				set_style(td, "--start", /*start*/ ctx[1]);
			}

			if (dirty & /*chart*/ 1) {
				set_style(td, "--size", /*size*/ ctx[2]);
			}
		},
		d(detaching) {
			if (detaching) detach(tr);
		}
	};
}

function create_fragment(ctx) {
	let table;
	let tbody;
	let each_value = /*chart*/ ctx[0];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			table = element("table");
			tbody = element("tbody");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			attr(table, "class", "charts-css line svelte-1xzgxgp");
			attr(table, "id", "my-chart");
		},
		m(target, anchor) {
			insert(target, table, anchor);
			append(table, tbody);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(tbody, null);
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*chart*/ 1) {
				each_value = /*chart*/ ctx[0];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(tbody, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(table);
			destroy_each(each_blocks, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { chart = [{ start: 0, size: 0.4 }, { start: 0.4, size: 1 }] } = $$props;

	$$self.$$set = $$props => {
		if ("chart" in $$props) $$invalidate(0, chart = $$props.chart);
	};

	return [chart];
}

class ChartLine extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { chart: 0 });
	}
}

export default ChartLine;