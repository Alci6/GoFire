{
  "version": 3,
  "sources": ["../../build/_snowpack/env.js", "../../build/_snowpack/pkg/common/index-1048d05e.js", "../../build/_dist_/scripts.js", "../../build/_dist_/lib/atoms/Goal.svelte.js", "../../build/_dist_/lib/atoms/Card.svelte.js", "../../build/_snowpack/pkg/svelte/store.js", "../../build/_snowpack/pkg/uuid.js", "../../build/_dist_/stores/data.js", "../../build/_dist_/lib/components/Balance.svelte.js", "../../build/_dist_/lib/atoms/Button.svelte.js", "../../build/_dist_/lib/atoms/Modal.svelte.js", "../../build/_dist_/lib/atoms/Input.svelte.js", "../../build/_dist_/lib/components/ModalSavings.svelte.js", "../../build/_dist_/lib/atoms/ChartLine.svelte.js", "../../build/_dist_/lib/components/Row.svelte.js", "../../build/_dist_/lib/components/Revenue.svelte.js", "../../build/_dist_/lib/organisms/Grid.svelte.js", "../../build/_dist_/lib/pages/Home.svelte.js", "../../build/_dist_/lib/pages/User.svelte.js", "../../build/_dist_/lib/components/Menu.svelte.js", "../../build/_dist_/lib/pages/Settings.svelte.js", "../../build/_snowpack/pkg/common/index.esm2017-19c3e5a1.js", "../../build/_snowpack/pkg/firebase/app.js", "../../build/_snowpack/pkg/firebase/auth.js", "../../build/_snowpack/pkg/firebase/analytics.js", "../../build/_dist_/firebase.js", "../../build/_dist_/lib/atoms/Avatar.svelte.js", "../../build/_dist_/lib/components/Navbar.svelte.js", "../../build/_dist_/App.svelte.js", "../../build/_dist_/index.js"],
  "sourcesContent": ["export const MODE = \"production\";\nexport const NODE_ENV = \"production\";\nexport const SSR = false;", "function noop() {\n}\nfunction assign(tar, src) {\n  for (const k in src)\n    tar[k] = src[k];\n  return tar;\n}\nfunction run(fn) {\n  return fn();\n}\nfunction blank_object() {\n  return Object.create(null);\n}\nfunction run_all(fns) {\n  fns.forEach(run);\n}\nfunction is_function(thing) {\n  return typeof thing === \"function\";\n}\nfunction safe_not_equal(a, b) {\n  return a != a ? b == b : a !== b || (a && typeof a === \"object\" || typeof a === \"function\");\n}\nfunction is_empty(obj) {\n  return Object.keys(obj).length === 0;\n}\nfunction subscribe(store, ...callbacks) {\n  if (store == null) {\n    return noop;\n  }\n  const unsub = store.subscribe(...callbacks);\n  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction component_subscribe(component, store, callback) {\n  component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n  if (definition) {\n    const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n    return definition[0](slot_ctx);\n  }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n  return definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n  if (definition[2] && fn) {\n    const lets = definition[2](fn(dirty));\n    if ($$scope.dirty === void 0) {\n      return lets;\n    }\n    if (typeof lets === \"object\") {\n      const merged = [];\n      const len = Math.max($$scope.dirty.length, lets.length);\n      for (let i = 0; i < len; i += 1) {\n        merged[i] = $$scope.dirty[i] | lets[i];\n      }\n      return merged;\n    }\n    return $$scope.dirty | lets;\n  }\n  return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n  const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n  if (slot_changes) {\n    const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n    slot.p(slot_context, slot_changes);\n  }\n}\nfunction null_to_empty(value) {\n  return value == null ? \"\" : value;\n}\nfunction append(target, node) {\n  target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n  target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n  node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n  for (let i = 0; i < iterations.length; i += 1) {\n    if (iterations[i])\n      iterations[i].d(detaching);\n  }\n}\nfunction element(name) {\n  return document.createElement(name);\n}\nfunction text(data) {\n  return document.createTextNode(data);\n}\nfunction space() {\n  return text(\" \");\n}\nfunction empty() {\n  return text(\"\");\n}\nfunction listen(node, event, handler, options) {\n  node.addEventListener(event, handler, options);\n  return () => node.removeEventListener(event, handler, options);\n}\nfunction attr(node, attribute, value) {\n  if (value == null)\n    node.removeAttribute(attribute);\n  else if (node.getAttribute(attribute) !== value)\n    node.setAttribute(attribute, value);\n}\nfunction to_number(value) {\n  return value === \"\" ? null : +value;\n}\nfunction children(element2) {\n  return Array.from(element2.childNodes);\n}\nfunction set_data(text2, data) {\n  data = \"\" + data;\n  if (text2.wholeText !== data)\n    text2.data = data;\n}\nfunction set_input_value(input, value) {\n  input.value = value == null ? \"\" : value;\n}\nfunction set_style(node, key, value, important) {\n  node.style.setProperty(key, value, important ? \"important\" : \"\");\n}\nfunction toggle_class(element2, name, toggle) {\n  element2.classList[toggle ? \"add\" : \"remove\"](name);\n}\nlet current_component;\nfunction set_current_component(component) {\n  current_component = component;\n}\nfunction bubble(component, event) {\n  const callbacks = component.$$.callbacks[event.type];\n  if (callbacks) {\n    callbacks.slice().forEach((fn) => fn(event));\n  }\n}\nconst dirty_components = [];\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n  if (!update_scheduled) {\n    update_scheduled = true;\n    resolved_promise.then(flush);\n  }\n}\nfunction add_render_callback(fn) {\n  render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n  flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n  if (flushing)\n    return;\n  flushing = true;\n  do {\n    for (let i = 0; i < dirty_components.length; i += 1) {\n      const component = dirty_components[i];\n      set_current_component(component);\n      update(component.$$);\n    }\n    set_current_component(null);\n    dirty_components.length = 0;\n    while (binding_callbacks.length)\n      binding_callbacks.pop()();\n    for (let i = 0; i < render_callbacks.length; i += 1) {\n      const callback = render_callbacks[i];\n      if (!seen_callbacks.has(callback)) {\n        seen_callbacks.add(callback);\n        callback();\n      }\n    }\n    render_callbacks.length = 0;\n  } while (dirty_components.length);\n  while (flush_callbacks.length) {\n    flush_callbacks.pop()();\n  }\n  update_scheduled = false;\n  flushing = false;\n  seen_callbacks.clear();\n}\nfunction update($$) {\n  if ($$.fragment !== null) {\n    $$.update();\n    run_all($$.before_update);\n    const dirty = $$.dirty;\n    $$.dirty = [-1];\n    $$.fragment && $$.fragment.p($$.ctx, dirty);\n    $$.after_update.forEach(add_render_callback);\n  }\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n  outros = {\n    r: 0,\n    c: [],\n    p: outros\n  };\n}\nfunction check_outros() {\n  if (!outros.r) {\n    run_all(outros.c);\n  }\n  outros = outros.p;\n}\nfunction transition_in(block, local) {\n  if (block && block.i) {\n    outroing.delete(block);\n    block.i(local);\n  }\n}\nfunction transition_out(block, local, detach2, callback) {\n  if (block && block.o) {\n    if (outroing.has(block))\n      return;\n    outroing.add(block);\n    outros.c.push(() => {\n      outroing.delete(block);\n      if (callback) {\n        if (detach2)\n          block.d(1);\n        callback();\n      }\n    });\n    block.o(local);\n  }\n}\nfunction outro_and_destroy_block(block, lookup) {\n  transition_out(block, 1, 1, () => {\n    lookup.delete(block.key);\n  });\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n  let o = old_blocks.length;\n  let n = list.length;\n  let i = o;\n  const old_indexes = {};\n  while (i--)\n    old_indexes[old_blocks[i].key] = i;\n  const new_blocks = [];\n  const new_lookup = new Map();\n  const deltas = new Map();\n  i = n;\n  while (i--) {\n    const child_ctx = get_context(ctx, list, i);\n    const key = get_key(child_ctx);\n    let block = lookup.get(key);\n    if (!block) {\n      block = create_each_block(key, child_ctx);\n      block.c();\n    } else if (dynamic) {\n      block.p(child_ctx, dirty);\n    }\n    new_lookup.set(key, new_blocks[i] = block);\n    if (key in old_indexes)\n      deltas.set(key, Math.abs(i - old_indexes[key]));\n  }\n  const will_move = new Set();\n  const did_move = new Set();\n  function insert2(block) {\n    transition_in(block, 1);\n    block.m(node, next);\n    lookup.set(block.key, block);\n    next = block.first;\n    n--;\n  }\n  while (o && n) {\n    const new_block = new_blocks[n - 1];\n    const old_block = old_blocks[o - 1];\n    const new_key = new_block.key;\n    const old_key = old_block.key;\n    if (new_block === old_block) {\n      next = new_block.first;\n      o--;\n      n--;\n    } else if (!new_lookup.has(old_key)) {\n      destroy(old_block, lookup);\n      o--;\n    } else if (!lookup.has(new_key) || will_move.has(new_key)) {\n      insert2(new_block);\n    } else if (did_move.has(old_key)) {\n      o--;\n    } else if (deltas.get(new_key) > deltas.get(old_key)) {\n      did_move.add(new_key);\n      insert2(new_block);\n    } else {\n      will_move.add(old_key);\n      o--;\n    }\n  }\n  while (o--) {\n    const old_block = old_blocks[o];\n    if (!new_lookup.has(old_block.key))\n      destroy(old_block, lookup);\n  }\n  while (n)\n    insert2(new_blocks[n - 1]);\n  return new_blocks;\n}\nfunction bind(component, name, callback) {\n  const index = component.$$.props[name];\n  if (index !== void 0) {\n    component.$$.bound[index] = callback;\n    callback(component.$$.ctx[index]);\n  }\n}\nfunction create_component(block) {\n  block && block.c();\n}\nfunction mount_component(component, target, anchor, customElement) {\n  const {fragment, on_mount, on_destroy: on_destroy2, after_update} = component.$$;\n  fragment && fragment.m(target, anchor);\n  if (!customElement) {\n    add_render_callback(() => {\n      const new_on_destroy = on_mount.map(run).filter(is_function);\n      if (on_destroy2) {\n        on_destroy2.push(...new_on_destroy);\n      } else {\n        run_all(new_on_destroy);\n      }\n      component.$$.on_mount = [];\n    });\n  }\n  after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n  const $$ = component.$$;\n  if ($$.fragment !== null) {\n    run_all($$.on_destroy);\n    $$.fragment && $$.fragment.d(detaching);\n    $$.on_destroy = $$.fragment = null;\n    $$.ctx = [];\n  }\n}\nfunction make_dirty(component, i) {\n  if (component.$$.dirty[0] === -1) {\n    dirty_components.push(component);\n    schedule_update();\n    component.$$.dirty.fill(0);\n  }\n  component.$$.dirty[i / 31 | 0] |= 1 << i % 31;\n}\nfunction init(component, options, instance, create_fragment, not_equal2, props, dirty = [-1]) {\n  const parent_component = current_component;\n  set_current_component(component);\n  const $$ = component.$$ = {\n    fragment: null,\n    ctx: null,\n    props,\n    update: noop,\n    not_equal: not_equal2,\n    bound: blank_object(),\n    on_mount: [],\n    on_destroy: [],\n    on_disconnect: [],\n    before_update: [],\n    after_update: [],\n    context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n    callbacks: blank_object(),\n    dirty,\n    skip_bound: false\n  };\n  let ready = false;\n  $$.ctx = instance ? instance(component, options.props || {}, (i, ret, ...rest) => {\n    const value = rest.length ? rest[0] : ret;\n    if ($$.ctx && not_equal2($$.ctx[i], $$.ctx[i] = value)) {\n      if (!$$.skip_bound && $$.bound[i])\n        $$.bound[i](value);\n      if (ready)\n        make_dirty(component, i);\n    }\n    return ret;\n  }) : [];\n  $$.update();\n  ready = true;\n  run_all($$.before_update);\n  $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n  if (options.target) {\n    if (options.hydrate) {\n      const nodes = children(options.target);\n      $$.fragment && $$.fragment.l(nodes);\n      nodes.forEach(detach);\n    } else {\n      $$.fragment && $$.fragment.c();\n    }\n    if (options.intro)\n      transition_in(component.$$.fragment);\n    mount_component(component, options.target, options.anchor, options.customElement);\n    flush();\n  }\n  set_current_component(parent_component);\n}\nclass SvelteComponent {\n  $destroy() {\n    destroy_component(this, 1);\n    this.$destroy = noop;\n  }\n  $on(type, callback) {\n    const callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n    callbacks.push(callback);\n    return () => {\n      const index = callbacks.indexOf(callback);\n      if (index !== -1)\n        callbacks.splice(index, 1);\n    };\n  }\n  $set($$props) {\n    if (this.$$set && !is_empty($$props)) {\n      this.$$.skip_bound = true;\n      this.$$set($$props);\n      this.$$.skip_bound = false;\n    }\n  }\n}\n\nexport { text as A, set_input_value as B, to_number as C, component_subscribe as D, empty as E, outro_and_destroy_block as F, update_keyed_each as G, add_flush_callback as H, bind as I, binding_callbacks as J, SvelteComponent as S, create_component as a, detach as b, check_outros as c, destroy_component as d, insert as e, space as f, group_outros as g, transition_out as h, init as i, attr as j, element as k, append as l, mount_component as m, noop as n, bubble as o, listen as p, null_to_empty as q, run_all as r, safe_not_equal as s, transition_in as t, toggle_class as u, create_slot as v, update_slot as w, destroy_each as x, set_style as y, set_data as z };\n", "export const format = (num) => {\n\treturn new Intl.NumberFormat(\"es\", {\n\t\tnotation: \"compact\",\n\t\tstyle: \"currency\",\n\t\tcurrency: \"EUR\",\n\t}).format(num);\n};\n\nexport const formatBasic = (num) => {\n\treturn new Intl.NumberFormat(\"es\", {\n\t\tstyle: \"currency\",\n\t\tcurrency: \"EUR\",\n\t}).format(num);\n};\n\nexport const today = new Date().toISOString().slice(0, 10);\n", "import './Goal.svelte.css';\n/* src/lib/atoms/Goal.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tnoop,\n\tsafe_not_equal,\n\tset_data,\n\tspace,\n\ttext\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nimport { format } from \"../../scripts.js\";\n\nfunction create_else_block(ctx) {\n\tlet p;\n\tlet t1;\n\tlet h6;\n\tlet t2_value = format(/*goal*/ ctx[0]) + \"\";\n\tlet t2;\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tp.textContent = \"Objetivo logrado\";\n\t\t\tt1 = space();\n\t\t\th6 = element(\"h6\");\n\t\t\tt2 = text(t2_value);\n\t\t\tattr(p, \"class\", \"euros text-xs text-center\");\n\t\t\tattr(h6, \"class\", \"euros text-xs text-center svelte-bssdtf\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tinsert(target, h6, anchor);\n\t\t\tappend(h6, t2);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*goal*/ 1 && t2_value !== (t2_value = format(/*goal*/ ctx[0]) + \"\")) set_data(t2, t2_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(p);\n\t\t\tif (detaching) detach(t1);\n\t\t\tif (detaching) detach(h6);\n\t\t}\n\t};\n}\n\n// (11:1) {#if checkGoal()}\nfunction create_if_block(ctx) {\n\tlet p;\n\tlet t0;\n\tlet t1_value = format(/*road*/ ctx[1]) + \"\";\n\tlet t1;\n\tlet t2;\n\tlet h6;\n\tlet t3;\n\tlet t4_value = format(/*goal*/ ctx[0]) + \"\";\n\tlet t4;\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tt0 = text(\"a \");\n\t\t\tt1 = text(t1_value);\n\t\t\tt2 = space();\n\t\t\th6 = element(\"h6\");\n\t\t\tt3 = text(\"de \");\n\t\t\tt4 = text(t4_value);\n\t\t\tattr(p, \"class\", \"euros text-sm text-center\");\n\t\t\tattr(h6, \"class\", \"euros text-xs text-center svelte-bssdtf\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\t\t\tappend(p, t0);\n\t\t\tappend(p, t1);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tinsert(target, h6, anchor);\n\t\t\tappend(h6, t3);\n\t\t\tappend(h6, t4);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*road*/ 2 && t1_value !== (t1_value = format(/*road*/ ctx[1]) + \"\")) set_data(t1, t1_value);\n\t\t\tif (dirty & /*goal*/ 1 && t4_value !== (t4_value = format(/*goal*/ ctx[0]) + \"\")) set_data(t4, t4_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(p);\n\t\t\tif (detaching) detach(t2);\n\t\t\tif (detaching) detach(h6);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet div;\n\tlet img;\n\tlet img_src_value;\n\tlet t;\n\tlet show_if;\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*checkGoal*/ ctx[2]()) return create_if_block;\n\t\treturn create_else_block;\n\t}\n\n\tlet current_block_type = select_block_type(ctx, -1);\n\tlet if_block = current_block_type(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\timg = element(\"img\");\n\t\t\tt = space();\n\t\t\tif_block.c();\n\t\t\tattr(img, \"class\", \"m-auto\");\n\t\t\tif (img.src !== (img_src_value = \"icons/goal.svg\")) attr(img, \"src\", img_src_value);\n\t\t\tattr(img, \"alt\", \"goal\");\n\t\t\tattr(div, \"class\", \"goal  float-right bg-red-500 p-5  svelte-bssdtf\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, img);\n\t\t\tappend(div, t);\n\t\t\tif_block.m(div, null);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif_block.p(ctx, dirty);\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif_block.d();\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { goal = 0 } = $$props;\n\tlet { road = 0 } = $$props;\n\tlet { balance = 0 } = $$props;\n\tlet checkGoal = () => goal > balance;\n\n\t$$self.$$set = $$props => {\n\t\tif (\"goal\" in $$props) $$invalidate(0, goal = $$props.goal);\n\t\tif (\"road\" in $$props) $$invalidate(1, road = $$props.road);\n\t\tif (\"balance\" in $$props) $$invalidate(3, balance = $$props.balance);\n\t};\n\n\treturn [goal, road, checkGoal, balance];\n}\n\nclass Goal extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { goal: 0, road: 1, balance: 3 });\n\t}\n}\n\nexport default Goal;", "/* src/lib/atoms/Card.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tattr,\n\tcreate_slot,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tsafe_not_equal,\n\ttransition_in,\n\ttransition_out,\n\tupdate_slot\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nfunction create_fragment(ctx) {\n\tlet div;\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[1].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tattr(div, \"class\", \"card__background h-auto sm:w-96 w-11/12 mb-12 p-8 shadow-2xl relative\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(div, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {\n\t\t\t\t\tupdate_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[0], dirty, null, null);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif (\"$$scope\" in $$props) $$invalidate(0, $$scope = $$props.$$scope);\n\t};\n\n\treturn [$$scope, slots];\n}\n\nclass Card extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {});\n\t}\n}\n\nexport default Card;", "import { n as noop, s as safe_not_equal } from '../common/index-1048d05e.js';\n\nconst subscriber_queue = [];\nfunction writable(value, start = noop) {\n  let stop;\n  const subscribers = [];\n  function set(new_value) {\n    if (safe_not_equal(value, new_value)) {\n      value = new_value;\n      if (stop) {\n        const run_queue = !subscriber_queue.length;\n        for (let i = 0; i < subscribers.length; i += 1) {\n          const s = subscribers[i];\n          s[1]();\n          subscriber_queue.push(s, value);\n        }\n        if (run_queue) {\n          for (let i = 0; i < subscriber_queue.length; i += 2) {\n            subscriber_queue[i][0](subscriber_queue[i + 1]);\n          }\n          subscriber_queue.length = 0;\n        }\n      }\n    }\n  }\n  function update(fn) {\n    set(fn(value));\n  }\n  function subscribe2(run, invalidate = noop) {\n    const subscriber = [run, invalidate];\n    subscribers.push(subscriber);\n    if (subscribers.length === 1) {\n      stop = start(set) || noop;\n    }\n    run(value);\n    return () => {\n      const index = subscribers.indexOf(subscriber);\n      if (index !== -1) {\n        subscribers.splice(index, 1);\n      }\n      if (subscribers.length === 0) {\n        stop();\n        stop = null;\n      }\n    };\n  }\n  return {set, update, subscribe: subscribe2};\n}\n\nexport { writable };\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\nvar REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport { v4 };\n", "import { writable } from \"../../_snowpack/pkg/svelte/store.js\";\n\nimport { v4 as uuidv4 } from \"../../_snowpack/pkg/uuid.js\";\n\nconst user = writable({ name: \"Crack\", img: \"icons/user.svg\" });\n\nlet template = {\n\ttitle: \"Título\",\n\tnumber: 0,\n\trevenue: 0,\n\tpercent: 0,\n\thightlight: false,\n\tsaving: [],\n};\n\nconst createDetails = () => {\n\tconst { subscribe, update, set } = writable([\n\t\t{\n\t\t\tid: \"78907323-3151-4439-b9b1-6653b4cd84c1\",\n\t\t\ttitle: \"Criptos\",\n\t\t\tnumber: 2_000,\n\t\t\tpercent: 0,\n\t\t\thightlight: false,\n\t\t\tsaving: [],\n\t\t},\n\t\t{\n\t\t\tid: \"78907698-3151-4439-b9b1-6653b4cd84c1\",\n\t\t\ttitle: \"ETF + Plan de Pensiones\",\n\t\t\tnumber: 3_000,\n\t\t\tpercent: 0,\n\t\t\thightlight: false,\n\t\t\tsaving: [],\n\t\t},\n\t]);\n\n\tconst getArray = () => {\n\t\tlet array = [];\n\t\tsubscribe((n) => (array = n));\n\t\treturn array;\n\t};\n\n\tconst add = () => update((n) => [...n, { ...template, id: uuidv4() }]);\n\tconst remove = (id) => update((n) => n.filter((ele) => ele.id !== id));\n\tconst change = (id, key, value) => {\n\t\tlet array = getArray();\n\t\tarray.map((ele) => (ele.id === id ? (ele[key] = value) : \"\"));\n\t\tset(array);\n\t};\n\n\tconst revenue = () => {\n\t\tlet array = getArray();\n\t\tlet arrayBalance = [];\n\t\tarray.map((ele) =>\n\t\t\tele.saving.map((m) => (arrayBalance = [...arrayBalance, m.amount]))\n\t\t);\n\t\tlet result = arrayBalance.reduce((acc, crt) => acc + crt, 0);\n\t\treturn result;\n\t};\n\n\tconst balance = () => {\n\t\tlet array = getArray();\n\t\tlet result = array.reduce((acc, crt) => acc + crt.number, 0);\n\t\treturn result;\n\t};\n\n\tconst saving = (id, today, amount) => {\n\t\tlet array = getArray();\n\t\tarray.map((ele) =>\n\t\t\tele.id === id ? (ele.saving = [...ele.saving, { today, amount }]) : \"\"\n\t\t);\n\t\tset(array);\n\t};\n\n\treturn {\n\t\tsubscribe,\n\t\tupdate,\n\t\tadd,\n\t\tset,\n\t\tremove,\n\t\tchange,\n\t\tbalance,\n\t\tsaving,\n\t\trevenue,\n\t};\n};\n\nconst goal = writable(100_000);\nconst details = createDetails();\n\nexport { details, goal, user };\n", "/* src/lib/components/Balance.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tcomponent_subscribe,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tset_data,\n\tspace,\n\ttext,\n\ttransition_in,\n\ttransition_out\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nimport { format } from \"../../scripts.js\";\nimport Goal from \"../atoms/Goal.svelte.js\";\nimport Card from \"../atoms/Card.svelte.js\";\nimport { user } from \"../../stores/data.js\";\n\nfunction create_default_slot(ctx) {\n\tlet h1;\n\tlet t0_value = `Hola ${/*$user*/ ctx[2].name}` + \"\";\n\tlet t0;\n\tlet t1;\n\tlet h30;\n\tlet t3;\n\tlet h31;\n\tlet t5;\n\tlet p;\n\tlet t6_value = format(/*balance*/ ctx[0]) + \"\";\n\tlet t6;\n\tlet t7;\n\tlet goal_1;\n\tlet current;\n\n\tgoal_1 = new Goal({\n\t\t\tprops: {\n\t\t\t\tbalance: /*balance*/ ctx[0],\n\t\t\t\tgoal: /*goal*/ ctx[1],\n\t\t\t\troad: /*road*/ ctx[3]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\th1 = element(\"h1\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\th30 = element(\"h3\");\n\t\t\th30.textContent = \"Bienvenido de nuevo\";\n\t\t\tt3 = space();\n\t\t\th31 = element(\"h3\");\n\t\t\th31.textContent = \"Balance\";\n\t\t\tt5 = space();\n\t\t\tp = element(\"p\");\n\t\t\tt6 = text(t6_value);\n\t\t\tt7 = space();\n\t\t\tcreate_component(goal_1.$$.fragment);\n\t\t\tattr(h31, \"class\", \"mt-8\");\n\t\t\tattr(p, \"class\", \"euros\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, h1, anchor);\n\t\t\tappend(h1, t0);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tinsert(target, h30, anchor);\n\t\t\tinsert(target, t3, anchor);\n\t\t\tinsert(target, h31, anchor);\n\t\t\tinsert(target, t5, anchor);\n\t\t\tinsert(target, p, anchor);\n\t\t\tappend(p, t6);\n\t\t\tinsert(target, t7, anchor);\n\t\t\tmount_component(goal_1, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif ((!current || dirty & /*$user*/ 4) && t0_value !== (t0_value = `Hola ${/*$user*/ ctx[2].name}` + \"\")) set_data(t0, t0_value);\n\t\t\tif ((!current || dirty & /*balance*/ 1) && t6_value !== (t6_value = format(/*balance*/ ctx[0]) + \"\")) set_data(t6, t6_value);\n\t\t\tconst goal_1_changes = {};\n\t\t\tif (dirty & /*balance*/ 1) goal_1_changes.balance = /*balance*/ ctx[0];\n\t\t\tif (dirty & /*goal*/ 2) goal_1_changes.goal = /*goal*/ ctx[1];\n\t\t\tgoal_1.$set(goal_1_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(goal_1.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(goal_1.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(h1);\n\t\t\tif (detaching) detach(t1);\n\t\t\tif (detaching) detach(h30);\n\t\t\tif (detaching) detach(t3);\n\t\t\tif (detaching) detach(h31);\n\t\t\tif (detaching) detach(t5);\n\t\t\tif (detaching) detach(p);\n\t\t\tif (detaching) detach(t7);\n\t\t\tdestroy_component(goal_1, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet card;\n\tlet current;\n\n\tcard = new Card({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(card.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(card, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst card_changes = {};\n\n\t\t\tif (dirty & /*$$scope, balance, goal, $user*/ 23) {\n\t\t\t\tcard_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tcard.$set(card_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(card.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(card.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(card, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet $user;\n\tcomponent_subscribe($$self, user, $$value => $$invalidate(2, $user = $$value));\n\tlet { balance = 100 } = $$props;\n\tlet { goal = 100000 } = $$props;\n\tlet road = goal - balance;\n\n\t$$self.$$set = $$props => {\n\t\tif (\"balance\" in $$props) $$invalidate(0, balance = $$props.balance);\n\t\tif (\"goal\" in $$props) $$invalidate(1, goal = $$props.goal);\n\t};\n\n\treturn [balance, goal, $user, road];\n}\n\nclass Balance extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { balance: 0, goal: 1 });\n\t}\n}\n\nexport default Balance;", "import './Button.svelte.css';\n/* src/lib/atoms/Button.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tbubble,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tlisten,\n\tnoop,\n\tnull_to_empty,\n\trun_all,\n\tsafe_not_equal,\n\ttoggle_class\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nfunction create_fragment(ctx) {\n\tlet div;\n\tlet button;\n\tlet img;\n\tlet img_src_value;\n\tlet div_class_value;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tbutton = element(\"button\");\n\t\t\timg = element(\"img\");\n\t\t\tif (img.src !== (img_src_value = `icons/${/*icon*/ ctx[1]}.svg`)) attr(img, \"src\", img_src_value);\n\t\t\tattr(img, \"alt\", /*icon*/ ctx[1]);\n\t\t\tattr(img, \"class\", \"svelte-qgfubh\");\n\t\t\ttoggle_class(img, \"selected__icon\", /*current*/ ctx[0] === /*icon*/ ctx[1]);\n\t\t\tattr(div, \"class\", div_class_value = \"\" + (null_to_empty(/*style*/ ctx[2]) + \" svelte-qgfubh\"));\n\t\t\ttoggle_class(div, \"selected\", /*current*/ ctx[0] === /*icon*/ ctx[1]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, button);\n\t\t\tappend(button, img);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(button, \"click\", /*onClick*/ ctx[3]),\n\t\t\t\t\tlisten(div, \"click\", /*click_handler*/ ctx[5])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*current, icon*/ 3) {\n\t\t\t\ttoggle_class(img, \"selected__icon\", /*current*/ ctx[0] === /*icon*/ ctx[1]);\n\t\t\t}\n\n\t\t\tif (dirty & /*current, icon*/ 3) {\n\t\t\t\ttoggle_class(div, \"selected\", /*current*/ ctx[0] === /*icon*/ ctx[1]);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { props = {\n\t\ticon: \"menu\",\n\t\tstyle: \"primary\",\n\t\tonClick: () => console.log(\"click\")\n\t} } = $$props;\n\n\tlet { current = \"profile\" } = $$props;\n\tlet { icon, style, onClick } = props;\n\n\tfunction click_handler(event) {\n\t\tbubble($$self, event);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif (\"props\" in $$props) $$invalidate(4, props = $$props.props);\n\t\tif (\"current\" in $$props) $$invalidate(0, current = $$props.current);\n\t};\n\n\treturn [current, icon, style, onClick, props, click_handler];\n}\n\nclass Button extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { props: 4, current: 0 });\n\t}\n}\n\nexport default Button;", "import './Modal.svelte.css';\n/* src/lib/atoms/Modal.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tattr,\n\tcreate_component,\n\tcreate_slot,\n\tdestroy_component,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tmount_component,\n\tnull_to_empty,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out,\n\tupdate_slot\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nimport Card from \"./Card.svelte.js\";\nimport Button from \"./Button.svelte.js\";\n\nfunction create_default_slot(ctx) {\n\tlet div;\n\tlet button;\n\tlet t;\n\tlet current;\n\tbutton = new Button({ props: { props: /*btnClose*/ ctx[1] } });\n\tconst default_slot_template = /*#slots*/ ctx[2].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[3], null);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(button.$$.fragment);\n\t\t\tt = space();\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tattr(div, \"class\", \"btn--close svelte-1dpv79t\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(button, div, null);\n\t\t\tinsert(target, t, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(target, anchor);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 8)) {\n\t\t\t\t\tupdate_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[3], dirty, null, null);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(button.$$.fragment, local);\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(button.$$.fragment, local);\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(button);\n\t\t\tif (detaching) detach(t);\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet div;\n\tlet card;\n\tlet div_class_value;\n\tlet current;\n\n\tcard = new Card({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(card.$$.fragment);\n\t\t\tattr(div, \"class\", div_class_value = \"\" + (null_to_empty(/*hideModal*/ ctx[0] ? \"hideModal\" : \"modal\") + \" svelte-1dpv79t\"));\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(card, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst card_changes = {};\n\n\t\t\tif (dirty & /*$$scope*/ 8) {\n\t\t\t\tcard_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tcard.$set(card_changes);\n\n\t\t\tif (!current || dirty & /*hideModal*/ 1 && div_class_value !== (div_class_value = \"\" + (null_to_empty(/*hideModal*/ ctx[0] ? \"hideModal\" : \"modal\") + \" svelte-1dpv79t\"))) {\n\t\t\t\tattr(div, \"class\", div_class_value);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(card.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(card.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(card);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tlet { hideModal = true } = $$props;\n\tconst toogleModal = () => $$invalidate(0, hideModal = !hideModal);\n\n\tconst btnClose = {\n\t\ticon: \"delete\",\n\t\tstyle: \"tertiary\",\n\t\tonClick: toogleModal\n\t};\n\n\t$$self.$$set = $$props => {\n\t\tif (\"hideModal\" in $$props) $$invalidate(0, hideModal = $$props.hideModal);\n\t\tif (\"$$scope\" in $$props) $$invalidate(3, $$scope = $$props.$$scope);\n\t};\n\n\treturn [hideModal, btnClose, slots, $$scope];\n}\n\nclass Modal extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { hideModal: 0 });\n\t}\n}\n\nexport default Modal;", "import './Input.svelte.css';\n/* src/lib/atoms/Input.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tlisten,\n\tnoop,\n\tsafe_not_equal,\n\tset_data,\n\tset_input_value,\n\tspace,\n\ttext,\n\tto_number\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nfunction create_if_block_2(ctx) {\n\tlet input;\n\tlet input_class_value;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tinput = element(\"input\");\n\t\t\tattr(input, \"type\", \"text\");\n\t\t\tattr(input, \"class\", input_class_value = \"input__\" + /*style*/ ctx[1] + \" inp-icon\" + \" svelte-17e1blc\");\n\t\t\tattr(input, \"placeholder\", /*placeholder*/ ctx[2]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, input, anchor);\n\t\t\tset_input_value(input, /*value*/ ctx[0]);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(input, \"input\", /*input_input_handler_2*/ ctx[8]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*style*/ 2 && input_class_value !== (input_class_value = \"input__\" + /*style*/ ctx[1] + \" inp-icon\" + \" svelte-17e1blc\")) {\n\t\t\t\tattr(input, \"class\", input_class_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*placeholder*/ 4) {\n\t\t\t\tattr(input, \"placeholder\", /*placeholder*/ ctx[2]);\n\t\t\t}\n\n\t\t\tif (dirty & /*value*/ 1 && input.value !== /*value*/ ctx[0]) {\n\t\t\t\tset_input_value(input, /*value*/ ctx[0]);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(input);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\n// (21:27) \nfunction create_if_block_1(ctx) {\n\tlet input;\n\tlet input_class_value;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tinput = element(\"input\");\n\t\t\tattr(input, \"type\", \"date\");\n\t\t\tattr(input, \"class\", input_class_value = \"input__\" + /*style*/ ctx[1] + \" svelte-17e1blc\");\n\t\t\tattr(input, \"placeholder\", /*placeholder*/ ctx[2]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, input, anchor);\n\t\t\tset_input_value(input, /*value*/ ctx[0]);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(input, \"input\", /*input_input_handler_1*/ ctx[7]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*style*/ 2 && input_class_value !== (input_class_value = \"input__\" + /*style*/ ctx[1] + \" svelte-17e1blc\")) {\n\t\t\t\tattr(input, \"class\", input_class_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*placeholder*/ 4) {\n\t\t\t\tattr(input, \"placeholder\", /*placeholder*/ ctx[2]);\n\t\t\t}\n\n\t\t\tif (dirty & /*value*/ 1) {\n\t\t\t\tset_input_value(input, /*value*/ ctx[0]);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(input);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\n// (14:1) {#if type === \"number\"}\nfunction create_if_block(ctx) {\n\tlet input;\n\tlet input_class_value;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tinput = element(\"input\");\n\t\t\tattr(input, \"type\", \"number\");\n\t\t\tattr(input, \"class\", input_class_value = \"input__\" + /*style*/ ctx[1] + \" inp-icon\" + \" svelte-17e1blc\");\n\t\t\tattr(input, \"placeholder\", /*placeholder*/ ctx[2]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, input, anchor);\n\t\t\tset_input_value(input, /*value*/ ctx[0]);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(input, \"input\", /*input_input_handler*/ ctx[6]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*style*/ 2 && input_class_value !== (input_class_value = \"input__\" + /*style*/ ctx[1] + \" inp-icon\" + \" svelte-17e1blc\")) {\n\t\t\t\tattr(input, \"class\", input_class_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*placeholder*/ 4) {\n\t\t\t\tattr(input, \"placeholder\", /*placeholder*/ ctx[2]);\n\t\t\t}\n\n\t\t\tif (dirty & /*value*/ 1 && to_number(input.value) !== /*value*/ ctx[0]) {\n\t\t\t\tset_input_value(input, /*value*/ ctx[0]);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(input);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet div;\n\tlet h3;\n\tlet t0;\n\tlet t1;\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*type*/ ctx[4] === \"number\") return create_if_block;\n\t\tif (/*type*/ ctx[4] === \"date\") return create_if_block_1;\n\t\tif (/*type*/ ctx[4] === \"text\") return create_if_block_2;\n\t}\n\n\tlet current_block_type = select_block_type(ctx, -1);\n\tlet if_block = current_block_type && current_block_type(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\th3 = element(\"h3\");\n\t\t\tt0 = text(/*label*/ ctx[3]);\n\t\t\tt1 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(h3, \"class\", \"mt-8 mb-1\");\n\t\t\tattr(div, \"class\", \"svelte-17e1blc\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, h3);\n\t\t\tappend(h3, t0);\n\t\t\tappend(div, t1);\n\t\t\tif (if_block) if_block.m(div, null);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*label*/ 8) set_data(t0, /*label*/ ctx[3]);\n\n\t\t\tif (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {\n\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tif (if_block) if_block.d(1);\n\t\t\t\tif_block = current_block_type && current_block_type(ctx);\n\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(div, null);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\n\t\t\tif (if_block) {\n\t\t\t\tif_block.d();\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { icon = \"menu\" } = $$props;\n\tlet { style = \"primary\" } = $$props;\n\tlet { placeholder = \"0€\" } = $$props;\n\tlet { value = \"\" } = $$props;\n\tlet { label = \"\" } = $$props;\n\tlet { type = \"number\" } = $$props;\n\n\tfunction input_input_handler() {\n\t\tvalue = to_number(this.value);\n\t\t$$invalidate(0, value);\n\t}\n\n\tfunction input_input_handler_1() {\n\t\tvalue = this.value;\n\t\t$$invalidate(0, value);\n\t}\n\n\tfunction input_input_handler_2() {\n\t\tvalue = this.value;\n\t\t$$invalidate(0, value);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif (\"icon\" in $$props) $$invalidate(5, icon = $$props.icon);\n\t\tif (\"style\" in $$props) $$invalidate(1, style = $$props.style);\n\t\tif (\"placeholder\" in $$props) $$invalidate(2, placeholder = $$props.placeholder);\n\t\tif (\"value\" in $$props) $$invalidate(0, value = $$props.value);\n\t\tif (\"label\" in $$props) $$invalidate(3, label = $$props.label);\n\t\tif (\"type\" in $$props) $$invalidate(4, type = $$props.type);\n\t};\n\n\treturn [\n\t\tvalue,\n\t\tstyle,\n\t\tplaceholder,\n\t\tlabel,\n\t\ttype,\n\t\ticon,\n\t\tinput_input_handler,\n\t\tinput_input_handler_1,\n\t\tinput_input_handler_2\n\t];\n}\n\nclass Input extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {\n\t\t\ticon: 5,\n\t\t\tstyle: 1,\n\t\t\tplaceholder: 2,\n\t\t\tvalue: 0,\n\t\t\tlabel: 3,\n\t\t\ttype: 4\n\t\t});\n\t}\n}\n\nexport default Input;", "import './ModalSavings.svelte.css';\n/* src/lib/components/ModalSavings.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tadd_flush_callback,\n\tappend,\n\tattr,\n\tbind,\n\tbinding_callbacks,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tset_data,\n\tspace,\n\ttext,\n\ttransition_in,\n\ttransition_out\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nimport Modal from \"../atoms/Modal.svelte.js\";\nimport { today } from \"../../scripts.js\";\nimport Input from \"../atoms/Input.svelte.js\";\nimport Button from \"../atoms/Button.svelte.js\";\n\nfunction create_default_slot(ctx) {\n\tlet h1;\n\tlet t0;\n\tlet t1;\n\tlet input0;\n\tlet updating_value;\n\tlet t2;\n\tlet input1;\n\tlet updating_value_1;\n\tlet t3;\n\tlet div;\n\tlet button;\n\tlet current;\n\n\tfunction input0_value_binding(value) {\n\t\t/*input0_value_binding*/ ctx[7](value);\n\t}\n\n\tlet input0_props = {\n\t\tlabel: \"añade la cantidad\",\n\t\ttype: \"number\"\n\t};\n\n\tif (/*amount*/ ctx[2] !== void 0) {\n\t\tinput0_props.value = /*amount*/ ctx[2];\n\t}\n\n\tinput0 = new Input({ props: input0_props });\n\tbinding_callbacks.push(() => bind(input0, \"value\", input0_value_binding));\n\n\tfunction input1_value_binding(value) {\n\t\t/*input1_value_binding*/ ctx[8](value);\n\t}\n\n\tlet input1_props = {\n\t\tlabel: \"¿Cuándo añadiste los fondos?\",\n\t\ttype: \"date\"\n\t};\n\n\tif (/*date*/ ctx[3] !== void 0) {\n\t\tinput1_props.value = /*date*/ ctx[3];\n\t}\n\n\tinput1 = new Input({ props: input1_props });\n\tbinding_callbacks.push(() => bind(input1, \"value\", input1_value_binding));\n\tbutton = new Button({ props: { props: /*btnSave*/ ctx[4] } });\n\n\treturn {\n\t\tc() {\n\t\t\th1 = element(\"h1\");\n\t\t\tt0 = text(/*title*/ ctx[1]);\n\t\t\tt1 = space();\n\t\t\tcreate_component(input0.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tcreate_component(input1.$$.fragment);\n\t\t\tt3 = space();\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(button.$$.fragment);\n\t\t\tattr(h1, \"class\", \"noselect text-2xl\");\n\t\t\tattr(div, \"class\", \"btn--save mt-9 svelte-g49tz7\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, h1, anchor);\n\t\t\tappend(h1, t0);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tmount_component(input0, target, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tmount_component(input1, target, anchor);\n\t\t\tinsert(target, t3, anchor);\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(button, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (!current || dirty & /*title*/ 2) set_data(t0, /*title*/ ctx[1]);\n\t\t\tconst input0_changes = {};\n\n\t\t\tif (!updating_value && dirty & /*amount*/ 4) {\n\t\t\t\tupdating_value = true;\n\t\t\t\tinput0_changes.value = /*amount*/ ctx[2];\n\t\t\t\tadd_flush_callback(() => updating_value = false);\n\t\t\t}\n\n\t\t\tinput0.$set(input0_changes);\n\t\t\tconst input1_changes = {};\n\n\t\t\tif (!updating_value_1 && dirty & /*date*/ 8) {\n\t\t\t\tupdating_value_1 = true;\n\t\t\t\tinput1_changes.value = /*date*/ ctx[3];\n\t\t\t\tadd_flush_callback(() => updating_value_1 = false);\n\t\t\t}\n\n\t\t\tinput1.$set(input1_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(input0.$$.fragment, local);\n\t\t\ttransition_in(input1.$$.fragment, local);\n\t\t\ttransition_in(button.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(input0.$$.fragment, local);\n\t\t\ttransition_out(input1.$$.fragment, local);\n\t\t\ttransition_out(button.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(h1);\n\t\t\tif (detaching) detach(t1);\n\t\t\tdestroy_component(input0, detaching);\n\t\t\tif (detaching) detach(t2);\n\t\t\tdestroy_component(input1, detaching);\n\t\t\tif (detaching) detach(t3);\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(button);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet modal;\n\tlet current;\n\n\tmodal = new Modal({\n\t\t\tprops: {\n\t\t\t\thideModal: /*hideModal*/ ctx[0],\n\t\t\t\t$$slots: { default: [create_default_slot] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(modal.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(modal, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst modal_changes = {};\n\t\t\tif (dirty & /*hideModal*/ 1) modal_changes.hideModal = /*hideModal*/ ctx[0];\n\n\t\t\tif (dirty & /*$$scope, date, amount, title*/ 1038) {\n\t\t\t\tmodal_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tmodal.$set(modal_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(modal.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(modal.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(modal, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { hideModal = true } = $$props;\n\tlet { onClick } = $$props;\n\tlet { title = \"Title\" } = $$props;\n\tlet { id = \"0\" } = $$props;\n\tlet amount = 0;\n\tconst toogleModal = () => $$invalidate(0, hideModal = !hideModal);\n\n\tconst btnSave = {\n\t\ticon: \"saving\",\n\t\tstyle: \"modal\",\n\t\tonClick: () => {\n\t\t\ttoogleModal();\n\t\t\tonClick(id, today, amount);\n\t\t}\n\t};\n\n\tlet date = today;\n\n\tfunction input0_value_binding(value) {\n\t\tamount = value;\n\t\t$$invalidate(2, amount);\n\t}\n\n\tfunction input1_value_binding(value) {\n\t\tdate = value;\n\t\t$$invalidate(3, date);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif (\"hideModal\" in $$props) $$invalidate(0, hideModal = $$props.hideModal);\n\t\tif (\"onClick\" in $$props) $$invalidate(5, onClick = $$props.onClick);\n\t\tif (\"title\" in $$props) $$invalidate(1, title = $$props.title);\n\t\tif (\"id\" in $$props) $$invalidate(6, id = $$props.id);\n\t};\n\n\treturn [\n\t\thideModal,\n\t\ttitle,\n\t\tamount,\n\t\tdate,\n\t\tbtnSave,\n\t\tonClick,\n\t\tid,\n\t\tinput0_value_binding,\n\t\tinput1_value_binding\n\t];\n}\n\nclass ModalSavings extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {\n\t\t\thideModal: 0,\n\t\t\tonClick: 5,\n\t\t\ttitle: 1,\n\t\t\tid: 6\n\t\t});\n\t}\n}\n\nexport default ModalSavings;", "import './ChartLine.svelte.css';\n/* src/lib/atoms/ChartLine.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tdestroy_each,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tnoop,\n\tsafe_not_equal,\n\tset_style,\n\tspace\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[1] = list[i].start;\n\tchild_ctx[2] = list[i].size;\n\treturn child_ctx;\n}\n\n// (9:2) {#each chart as { start, size }}\nfunction create_each_block(ctx) {\n\tlet tr;\n\tlet td;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\ttr = element(\"tr\");\n\t\t\ttd = element(\"td\");\n\t\t\tt = space();\n\t\t\tset_style(td, \"--start\", /*start*/ ctx[1]);\n\t\t\tset_style(td, \"--size\", /*size*/ ctx[2]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, tr, anchor);\n\t\t\tappend(tr, td);\n\t\t\tappend(tr, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*chart*/ 1) {\n\t\t\t\tset_style(td, \"--start\", /*start*/ ctx[1]);\n\t\t\t}\n\n\t\t\tif (dirty & /*chart*/ 1) {\n\t\t\t\tset_style(td, \"--size\", /*size*/ ctx[2]);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(tr);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet table;\n\tlet tbody;\n\tlet each_value = /*chart*/ ctx[0];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\ttable = element(\"table\");\n\t\t\ttbody = element(\"tbody\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(table, \"class\", \"charts-css line svelte-1xzgxgp\");\n\t\t\tattr(table, \"id\", \"my-chart\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, table, anchor);\n\t\t\tappend(table, tbody);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(tbody, null);\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*chart*/ 1) {\n\t\t\t\teach_value = /*chart*/ ctx[0];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(tbody, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(table);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { chart = [{ start: 0, size: 0.4 }, { start: 0.4, size: 1 }] } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif (\"chart\" in $$props) $$invalidate(0, chart = $$props.chart);\n\t};\n\n\treturn [chart];\n}\n\nclass ChartLine extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { chart: 0 });\n\t}\n}\n\nexport default ChartLine;", "import './Row.svelte.css';\n/* src/lib/components/Row.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tcheck_outros,\n\tcreate_component,\n\tdestroy_component,\n\tdestroy_each,\n\tdetach,\n\telement,\n\tgroup_outros,\n\tinit,\n\tinsert,\n\tlisten,\n\tmount_component,\n\tnoop,\n\trun_all,\n\tsafe_not_equal,\n\tset_data,\n\tset_input_value,\n\tspace,\n\ttext,\n\tto_number,\n\ttoggle_class,\n\ttransition_in,\n\ttransition_out\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nimport { format } from \"../../scripts.js\";\nimport ModalSavings from \"./ModalSavings.svelte.js\";\nimport ChartLine from \"../atoms/ChartLine.svelte.js\";\nimport Button from \"../atoms/Button.svelte.js\";\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[22] = list[i];\n\treturn child_ctx;\n}\n\n// (67:1) {:else}\nfunction create_else_block(ctx) {\n\tlet h6;\n\tlet t0;\n\tlet t1;\n\tlet div;\n\tlet p0;\n\tlet t2_value = format(/*number*/ ctx[2]) + \"\";\n\tlet t2;\n\tlet t3;\n\tlet chartline;\n\tlet t4;\n\tlet p1;\n\tlet current;\n\tchartline = new ChartLine({});\n\n\treturn {\n\t\tc() {\n\t\t\th6 = element(\"h6\");\n\t\t\tt0 = text(/*title*/ ctx[3]);\n\t\t\tt1 = space();\n\t\t\tdiv = element(\"div\");\n\t\t\tp0 = element(\"p\");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = space();\n\t\t\tcreate_component(chartline.$$.fragment);\n\t\t\tt4 = space();\n\t\t\tp1 = element(\"p\");\n\t\t\tp1.textContent = `${/*percent*/ ctx[8]}`;\n\t\t\tattr(h6, \"class\", \"mb-1\");\n\t\t\tattr(p0, \"class\", \"euros\");\n\t\t\tattr(p1, \"class\", \"percent svelte-49wrw\");\n\t\t\tattr(div, \"class\", \"data svelte-49wrw\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, h6, anchor);\n\t\t\tappend(h6, t0);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, p0);\n\t\t\tappend(p0, t2);\n\t\t\tappend(div, t3);\n\t\t\tmount_component(chartline, div, null);\n\t\t\tappend(div, t4);\n\t\t\tappend(div, p1);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (!current || dirty & /*title*/ 8) set_data(t0, /*title*/ ctx[3]);\n\t\t\tif ((!current || dirty & /*number*/ 4) && t2_value !== (t2_value = format(/*number*/ ctx[2]) + \"\")) set_data(t2, t2_value);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(chartline.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(chartline.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(h6);\n\t\t\tif (detaching) detach(t1);\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(chartline);\n\t\t}\n\t};\n}\n\n// (41:1) {#if edit}\nfunction create_if_block_1(ctx) {\n\tlet input0;\n\tlet t0;\n\tlet div0;\n\tlet input1;\n\tlet t1;\n\tlet chartline;\n\tlet t2;\n\tlet p;\n\tlet t4;\n\tlet div1;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tchartline = new ChartLine({});\n\tlet each_value = /*btns*/ ctx[12];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tinput0 = element(\"input\");\n\t\t\tt0 = space();\n\t\t\tdiv0 = element(\"div\");\n\t\t\tinput1 = element(\"input\");\n\t\t\tt1 = space();\n\t\t\tcreate_component(chartline.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tp = element(\"p\");\n\t\t\tp.textContent = `${/*percent*/ ctx[8]}`;\n\t\t\tt4 = space();\n\t\t\tdiv1 = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(input0, \"name\", \"title\");\n\t\t\tattr(input0, \"class\", \"title w-64 svelte-49wrw\");\n\t\t\tattr(input0, \"type\", \"text\");\n\t\t\tattr(input1, \"name\", \"number\");\n\t\t\tattr(input1, \"type\", \"number\");\n\t\t\tattr(input1, \"class\", \"svelte-49wrw\");\n\t\t\tattr(p, \"class\", \"percent svelte-49wrw\");\n\t\t\tattr(div0, \"class\", \"data svelte-49wrw\");\n\t\t\tattr(div1, \"class\", \" flex flex-row float-right\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, input0, anchor);\n\t\t\tset_input_value(input0, /*title*/ ctx[3]);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, div0, anchor);\n\t\t\tappend(div0, input1);\n\t\t\tset_input_value(input1, /*number*/ ctx[2]);\n\t\t\tappend(div0, t1);\n\t\t\tmount_component(chartline, div0, null);\n\t\t\tappend(div0, t2);\n\t\t\tappend(div0, p);\n\t\t\tinsert(target, t4, anchor);\n\t\t\tinsert(target, div1, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(div1, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(input0, \"change\", /*changeName*/ ctx[10]),\n\t\t\t\t\tlisten(input0, \"input\", /*input0_input_handler*/ ctx[15]),\n\t\t\t\t\tlisten(input1, \"change\", /*changeNumber*/ ctx[11]),\n\t\t\t\t\tlisten(input1, \"input\", /*input1_input_handler*/ ctx[16])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*title*/ 8 && input0.value !== /*title*/ ctx[3]) {\n\t\t\t\tset_input_value(input0, /*title*/ ctx[3]);\n\t\t\t}\n\n\t\t\tif (dirty & /*number*/ 4 && to_number(input1.value) !== /*number*/ ctx[2]) {\n\t\t\t\tset_input_value(input1, /*number*/ ctx[2]);\n\t\t\t}\n\n\t\t\tif (dirty & /*btns*/ 4096) {\n\t\t\t\teach_value = /*btns*/ ctx[12];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(div1, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(chartline.$$.fragment, local);\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(chartline.$$.fragment, local);\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(input0);\n\t\t\tif (detaching) detach(t0);\n\t\t\tif (detaching) detach(div0);\n\t\t\tdestroy_component(chartline);\n\t\t\tif (detaching) detach(t4);\n\t\t\tif (detaching) detach(div1);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\n// (61:3) {#each btns as btn}\nfunction create_each_block(ctx) {\n\tlet div;\n\tlet button;\n\tlet t;\n\tlet current;\n\tbutton = new Button({ props: { props: /*btn*/ ctx[22] } });\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(button.$$.fragment);\n\t\t\tt = space();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(button, div, null);\n\t\t\tappend(div, t);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(button.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(button.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(button);\n\t\t}\n\t};\n}\n\n// (75:1) {#if saving.length > 0 && !edit}\nfunction create_if_block(ctx) {\n\tlet h3;\n\tlet t0;\n\tlet t1_value = format(/*revenue*/ ctx[6]) + \"\";\n\tlet t1;\n\n\treturn {\n\t\tc() {\n\t\t\th3 = element(\"h3\");\n\t\t\tt0 = text(\"Rentabilidad: \");\n\t\t\tt1 = text(t1_value);\n\t\t\tattr(h3, \"class\", \"mt-1 revenue text-sm\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, h3, anchor);\n\t\t\tappend(h3, t0);\n\t\t\tappend(h3, t1);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*revenue*/ 64 && t1_value !== (t1_value = format(/*revenue*/ ctx[6]) + \"\")) set_data(t1, t1_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(h3);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet modalsavings;\n\tlet t0;\n\tlet div;\n\tlet current_block_type_index;\n\tlet if_block0;\n\tlet t1;\n\tlet current;\n\n\tmodalsavings = new ModalSavings({\n\t\t\tprops: {\n\t\t\t\thideModal: /*hideModal*/ ctx[5],\n\t\t\t\ttitle: /*title*/ ctx[3],\n\t\t\t\tid: /*id*/ ctx[7],\n\t\t\t\tonClick: /*details*/ ctx[1].saving\n\t\t\t}\n\t\t});\n\n\tconst if_block_creators = [create_if_block_1, create_else_block];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*edit*/ ctx[0]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx, -1);\n\tif_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\tlet if_block1 = /*saving*/ ctx[9].length > 0 && !/*edit*/ ctx[0] && create_if_block(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(modalsavings.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tdiv = element(\"div\");\n\t\t\tif_block0.c();\n\t\t\tt1 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tattr(div, \"class\", \"w-64 m-3 relative svelte-49wrw\");\n\t\t\ttoggle_class(div, \"hightlight\", /*hightlight*/ ctx[4]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(modalsavings, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, div, anchor);\n\t\t\tif_blocks[current_block_type_index].m(div, null);\n\t\t\tappend(div, t1);\n\t\t\tif (if_block1) if_block1.m(div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst modalsavings_changes = {};\n\t\t\tif (dirty & /*hideModal*/ 32) modalsavings_changes.hideModal = /*hideModal*/ ctx[5];\n\t\t\tif (dirty & /*title*/ 8) modalsavings_changes.title = /*title*/ ctx[3];\n\t\t\tif (dirty & /*details*/ 2) modalsavings_changes.onClick = /*details*/ ctx[1].saving;\n\t\t\tmodalsavings.$set(modalsavings_changes);\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx, dirty);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block0 = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block0) {\n\t\t\t\t\tif_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\tif_block0.m(div, t1);\n\t\t\t}\n\n\t\t\tif (/*saving*/ ctx[9].length > 0 && !/*edit*/ ctx[0]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\tif_block1.m(div, null);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tif_block1.d(1);\n\t\t\t\tif_block1 = null;\n\t\t\t}\n\n\t\t\tif (dirty & /*hightlight*/ 16) {\n\t\t\t\ttoggle_class(div, \"hightlight\", /*hightlight*/ ctx[4]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(modalsavings.$$.fragment, local);\n\t\t\ttransition_in(if_block0);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(modalsavings.$$.fragment, local);\n\t\t\ttransition_out(if_block0);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(modalsavings, detaching);\n\t\t\tif (detaching) detach(t0);\n\t\t\tif (detaching) detach(div);\n\t\t\tif_blocks[current_block_type_index].d();\n\t\t\tif (if_block1) if_block1.d();\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet getSaving;\n\tlet revenue;\n\tlet { edit = false } = $$props;\n\tlet { details = [] } = $$props;\n\n\tlet { props = {\n\t\tid: \"9c72c81f-480d-4575-bdff-45e50afc7a33\",\n\t\ttitle: \"Total Title\",\n\t\tnumber: 0,\n\t\tpercent: 0,\n\t\thightlight: false,\n\t\tsaving: []\n\t} } = $$props;\n\n\tlet { id, title, number, percent, hightlight, saving } = props;\n\tlet hideModal = true;\n\tconst toogleModal = () => $$invalidate(5, hideModal = !hideModal);\n\n\tconst actions = {\n\t\tremove: () => details.remove(id),\n\t\tchangeName: () => details.change(id, \"title\", title),\n\t\tchangeNumber: () => details.change(id, \"number\", number),\n\t\tchangeHigh: () => details.change(id, \"hightlight\", hightlight),\n\t\ttoogleHigh: () => {\n\t\t\t$$invalidate(4, hightlight = !hightlight);\n\t\t\tchangeHigh();\n\t\t}\n\t};\n\n\tconst { changeName, changeNumber, changeHigh, remove, toogleHigh } = actions;\n\n\tconst btns = [\n\t\t{\n\t\t\ticon: \"delete\",\n\t\t\tstyle: \"tertiary\",\n\t\t\tonClick: remove\n\t\t},\n\t\t{\n\t\t\ticon: \"highlight\",\n\t\t\tstyle: \"tertiary\",\n\t\t\tonClick: toogleHigh\n\t\t},\n\t\t{\n\t\t\ticon: \"saving\",\n\t\t\tstyle: \"tertiary\",\n\t\t\tonClick: toogleModal\n\t\t}\n\t];\n\n\tfunction input0_input_handler() {\n\t\ttitle = this.value;\n\t\t$$invalidate(3, title);\n\t}\n\n\tfunction input1_input_handler() {\n\t\tnumber = to_number(this.value);\n\t\t$$invalidate(2, number);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif (\"edit\" in $$props) $$invalidate(0, edit = $$props.edit);\n\t\tif (\"details\" in $$props) $$invalidate(1, details = $$props.details);\n\t\tif (\"props\" in $$props) $$invalidate(13, props = $$props.props);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*number, getSaving*/ 16388) {\n\t\t\t$: $$invalidate(6, revenue = number - getSaving);\n\t\t}\n\t};\n\n\t$: $$invalidate(14, getSaving = saving.reduce((acc, crt) => acc + crt.amount, 0));\n\n\treturn [\n\t\tedit,\n\t\tdetails,\n\t\tnumber,\n\t\ttitle,\n\t\thightlight,\n\t\thideModal,\n\t\trevenue,\n\t\tid,\n\t\tpercent,\n\t\tsaving,\n\t\tchangeName,\n\t\tchangeNumber,\n\t\tbtns,\n\t\tprops,\n\t\tgetSaving,\n\t\tinput0_input_handler,\n\t\tinput1_input_handler\n\t];\n}\n\nclass Row extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { edit: 0, details: 1, props: 13 });\n\t}\n}\n\nexport default Row;", "import './Revenue.svelte.css';\n/* src/lib/components/Revenue.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tset_data,\n\tspace,\n\ttext,\n\ttoggle_class,\n\ttransition_in,\n\ttransition_out\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nimport { format } from \"../../scripts.js\";\nimport ModalSavings from \"./ModalSavings.svelte.js\";\nimport ChartLine from \"../atoms/ChartLine.svelte.js\";\nimport Button from \"../atoms/Button.svelte.js\";\n\nfunction create_fragment(ctx) {\n\tlet div1;\n\tlet h6;\n\tlet t1;\n\tlet div0;\n\tlet p0;\n\tlet t2_value = format(/*revenue*/ ctx[0]) + \"\";\n\tlet t2;\n\tlet t3;\n\tlet chartline;\n\tlet t4;\n\tlet p1;\n\tlet current;\n\tchartline = new ChartLine({});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv1 = element(\"div\");\n\t\t\th6 = element(\"h6\");\n\t\t\th6.textContent = `${/*title*/ ctx[1]}`;\n\t\t\tt1 = space();\n\t\t\tdiv0 = element(\"div\");\n\t\t\tp0 = element(\"p\");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = space();\n\t\t\tcreate_component(chartline.$$.fragment);\n\t\t\tt4 = space();\n\t\t\tp1 = element(\"p\");\n\t\t\tp1.textContent = `${/*percent*/ ctx[2]}`;\n\t\t\tattr(h6, \"class\", \"mb-1\");\n\t\t\tattr(p0, \"class\", \"euros\");\n\t\t\tattr(p1, \"class\", \"percent svelte-x91ufk\");\n\t\t\tattr(div0, \"class\", \"data svelte-x91ufk\");\n\t\t\tattr(div1, \"class\", \"w-64 m-3 relative m-6 svelte-x91ufk\");\n\t\t\ttoggle_class(div1, \"hightlight\", /*hightlight*/ ctx[3]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div1, anchor);\n\t\t\tappend(div1, h6);\n\t\t\tappend(div1, t1);\n\t\t\tappend(div1, div0);\n\t\t\tappend(div0, p0);\n\t\t\tappend(p0, t2);\n\t\t\tappend(div0, t3);\n\t\t\tmount_component(chartline, div0, null);\n\t\t\tappend(div0, t4);\n\t\t\tappend(div0, p1);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif ((!current || dirty & /*revenue*/ 1) && t2_value !== (t2_value = format(/*revenue*/ ctx[0]) + \"\")) set_data(t2, t2_value);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(chartline.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(chartline.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div1);\n\t\t\tdestroy_component(chartline);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { revenue = 0 } = $$props;\n\n\tlet { props = {\n\t\ttitle: \"Beneficios\",\n\t\tnumber: 10,\n\t\tpercent: 0,\n\t\thightlight: true\n\t} } = $$props;\n\n\tlet { title, number, percent, hightlight } = props;\n\n\t$$self.$$set = $$props => {\n\t\tif (\"revenue\" in $$props) $$invalidate(0, revenue = $$props.revenue);\n\t\tif (\"props\" in $$props) $$invalidate(4, props = $$props.props);\n\t};\n\n\treturn [revenue, title, percent, hightlight, props];\n}\n\nclass Revenue extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { revenue: 0, props: 4 });\n\t}\n}\n\nexport default Revenue;", "/* src/lib/organisms/Grid.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tcheck_outros,\n\tcomponent_subscribe,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\tempty,\n\tgroup_outros,\n\tinit,\n\tinsert,\n\tmount_component,\n\toutro_and_destroy_block,\n\tsafe_not_equal,\n\ttransition_in,\n\ttransition_out,\n\tupdate_keyed_each\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nimport Row from \"../components/Row.svelte.js\";\nimport Revenue from \"../components/Revenue.svelte.js\";\nimport { details } from \"../../stores/data.js\";\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[2] = list[i];\n\treturn child_ctx;\n}\n\n// (7:0) {#each $details as props (props.id)}\nfunction create_each_block(key_1, ctx) {\n\tlet first;\n\tlet row;\n\tlet current;\n\n\trow = new Row({\n\t\t\tprops: {\n\t\t\t\tedit: /*edit*/ ctx[0],\n\t\t\t\tprops: /*props*/ ctx[2],\n\t\t\t\tdetails\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tfirst = empty();\n\t\t\tcreate_component(row.$$.fragment);\n\t\t\tthis.first = first;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, first, anchor);\n\t\t\tmount_component(row, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst row_changes = {};\n\t\t\tif (dirty & /*edit*/ 1) row_changes.edit = /*edit*/ ctx[0];\n\t\t\tif (dirty & /*$details*/ 2) row_changes.props = /*props*/ ctx[2];\n\t\t\trow.$set(row_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(row.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(row.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(first);\n\t\t\tdestroy_component(row, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet each_blocks = [];\n\tlet each_1_lookup = new Map();\n\tlet each_1_anchor;\n\tlet current;\n\tlet each_value = /*$details*/ ctx[1];\n\tconst get_key = ctx => /*props*/ ctx[2].id;\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\tlet child_ctx = get_each_context(ctx, each_value, i);\n\t\tlet key = get_key(child_ctx);\n\t\teach_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*edit, $details, details*/ 3) {\n\t\t\t\teach_value = /*$details*/ ctx[1];\n\t\t\t\tgroup_outros();\n\t\t\t\teach_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, each_1_anchor.parentNode, outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].d(detaching);\n\t\t\t}\n\n\t\t\tif (detaching) detach(each_1_anchor);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet $details;\n\tcomponent_subscribe($$self, details, $$value => $$invalidate(1, $details = $$value));\n\tlet { edit = false } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif (\"edit\" in $$props) $$invalidate(0, edit = $$props.edit);\n\t};\n\n\treturn [edit, $details];\n}\n\nclass Grid extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { edit: 0 });\n\t}\n}\n\nexport default Grid;", "/* src/lib/pages/Home.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tcomponent_subscribe,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nimport Balance from \"../components/Balance.svelte.js\";\nimport Grid from \"../organisms/Grid.svelte.js\";\nimport Revenue from \"../components/Revenue.svelte.js\";\nimport { goal, details } from \"../../stores/data.js\";\n\nfunction create_fragment(ctx) {\n\tlet balance_1;\n\tlet t0;\n\tlet revenue_1;\n\tlet t1;\n\tlet grid;\n\tlet current;\n\n\tbalance_1 = new Balance({\n\t\t\tprops: {\n\t\t\t\tgoal: /*$goal*/ ctx[1],\n\t\t\t\tbalance: /*balance*/ ctx[0]\n\t\t\t}\n\t\t});\n\n\trevenue_1 = new Revenue({ props: { revenue: /*revenue*/ ctx[2] } });\n\tgrid = new Grid({});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(balance_1.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(revenue_1.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(grid.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(balance_1, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tmount_component(revenue_1, target, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tmount_component(grid, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst balance_1_changes = {};\n\t\t\tif (dirty & /*$goal*/ 2) balance_1_changes.goal = /*$goal*/ ctx[1];\n\t\t\tif (dirty & /*balance*/ 1) balance_1_changes.balance = /*balance*/ ctx[0];\n\t\t\tbalance_1.$set(balance_1_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(balance_1.$$.fragment, local);\n\t\t\ttransition_in(revenue_1.$$.fragment, local);\n\t\t\ttransition_in(grid.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(balance_1.$$.fragment, local);\n\t\t\ttransition_out(revenue_1.$$.fragment, local);\n\t\t\ttransition_out(grid.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(balance_1, detaching);\n\t\t\tif (detaching) detach(t0);\n\t\t\tdestroy_component(revenue_1, detaching);\n\t\t\tif (detaching) detach(t1);\n\t\t\tdestroy_component(grid, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet balance;\n\tlet $goal;\n\tcomponent_subscribe($$self, goal, $$value => $$invalidate(1, $goal = $$value));\n\tlet revenue = details.balance() - details.revenue();\n\t$: $$invalidate(0, balance = details.balance());\n\treturn [balance, $goal, revenue];\n}\n\nclass Home extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {});\n\t}\n}\n\nexport default Home;", "/* src/lib/pages/User.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tnoop,\n\tsafe_not_equal\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nfunction create_fragment(ctx) {\n\tlet h1;\n\n\treturn {\n\t\tc() {\n\t\t\th1 = element(\"h1\");\n\t\t\th1.textContent = \"Profile Page\";\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, h1, anchor);\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(h1);\n\t\t}\n\t};\n}\n\nclass User extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, null, create_fragment, safe_not_equal, {});\n\t}\n}\n\nexport default User;", "import './Menu.svelte.css';\n/* src/lib/components/Menu.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tattr,\n\tcheck_outros,\n\tcreate_component,\n\tdestroy_component,\n\tdestroy_each,\n\tdetach,\n\telement,\n\tgroup_outros,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\ttransition_in,\n\ttransition_out\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nimport Button from \"../atoms/Button.svelte.js\";\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[4] = list[i];\n\treturn child_ctx;\n}\n\n// (13:1) {#each buttons as props}\nfunction create_each_block(ctx) {\n\tlet button;\n\tlet current;\n\n\tfunction click_handler() {\n\t\treturn /*click_handler*/ ctx[3](/*props*/ ctx[4]);\n\t}\n\n\tbutton = new Button({\n\t\t\tprops: {\n\t\t\t\tprops: /*props*/ ctx[4],\n\t\t\t\tcurrent: /*current*/ ctx[0]\n\t\t\t}\n\t\t});\n\n\tbutton.$on(\"click\", click_handler);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(button.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(button, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst button_changes = {};\n\t\t\tif (dirty & /*current*/ 1) button_changes.current = /*current*/ ctx[0];\n\t\t\tbutton.$set(button_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(button.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(button.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(button, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet div;\n\tlet current;\n\tlet each_value = /*buttons*/ ctx[2];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(div, \"class\", \"container fixed svelte-1xfd7dv\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(div, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*buttons, current, selectedBtn*/ 7) {\n\t\t\t\teach_value = /*buttons*/ ctx[2];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(div, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tconst buttons = [\n\t\t{\n\t\t\ticon: \"home\",\n\t\t\tstyle: \"secondary\",\n\t\t\tselected: false\n\t\t},\n\t\t{\n\t\t\ticon: \"lightning\",\n\t\t\tstyle: \"secondary\",\n\t\t\tselected: false\n\t\t},\n\t\t{\n\t\t\ticon: \"profile\",\n\t\t\tstyle: \"secondary\",\n\t\t\tselected: false\n\t\t},\n\t\t{\n\t\t\ticon: \"bell\",\n\t\t\tstyle: \"secondary\",\n\t\t\tselected: false\n\t\t}\n\t];\n\n\tlet { current = \"Home\" } = $$props;\n\n\tlet { selectedBtn = () => {\n\t\t\n\t} } = $$props;\n\n\tconst click_handler = props => selectedBtn(props.icon);\n\n\t$$self.$$set = $$props => {\n\t\tif (\"current\" in $$props) $$invalidate(0, current = $$props.current);\n\t\tif (\"selectedBtn\" in $$props) $$invalidate(1, selectedBtn = $$props.selectedBtn);\n\t};\n\n\treturn [current, selectedBtn, buttons, click_handler];\n}\n\nclass Menu extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { current: 0, selectedBtn: 1 });\n\t}\n}\n\nexport default Menu;", "/* src/lib/pages/Settings.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tadd_flush_callback,\n\tbind,\n\tbinding_callbacks,\n\tcomponent_subscribe,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nimport Button from \"../atoms/Button.svelte.js\";\nimport Card from \"../atoms/Card.svelte.js\";\nimport Input from \"../atoms/Input.svelte.js\";\nimport Grid from \"../organisms/Grid.svelte.js\";\nimport { goal, details } from \"../../stores/data.js\";\n\nfunction create_default_slot(ctx) {\n\tlet h1;\n\tlet t1;\n\tlet h3;\n\tlet t3;\n\tlet input;\n\tlet updating_value;\n\tlet current;\n\n\tfunction input_value_binding(value) {\n\t\t/*input_value_binding*/ ctx[1](value);\n\t}\n\n\tlet input_props = { label: \"Objetivo\", type: \"number\" };\n\n\tif (/*$goal*/ ctx[0] !== void 0) {\n\t\tinput_props.value = /*$goal*/ ctx[0];\n\t}\n\n\tinput = new Input({ props: input_props });\n\tbinding_callbacks.push(() => bind(input, \"value\", input_value_binding));\n\n\treturn {\n\t\tc() {\n\t\t\th1 = element(\"h1\");\n\t\t\th1.textContent = \"Opciones\";\n\t\t\tt1 = space();\n\t\t\th3 = element(\"h3\");\n\t\t\th3.textContent = \"Configura tus fuentes de ingresos\";\n\t\t\tt3 = space();\n\t\t\tcreate_component(input.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, h1, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tinsert(target, h3, anchor);\n\t\t\tinsert(target, t3, anchor);\n\t\t\tmount_component(input, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst input_changes = {};\n\n\t\t\tif (!updating_value && dirty & /*$goal*/ 1) {\n\t\t\t\tupdating_value = true;\n\t\t\t\tinput_changes.value = /*$goal*/ ctx[0];\n\t\t\t\tadd_flush_callback(() => updating_value = false);\n\t\t\t}\n\n\t\t\tinput.$set(input_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(input.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(input.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(h1);\n\t\t\tif (detaching) detach(t1);\n\t\t\tif (detaching) detach(h3);\n\t\t\tif (detaching) detach(t3);\n\t\t\tdestroy_component(input, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet card;\n\tlet t0;\n\tlet div;\n\tlet button;\n\tlet t1;\n\tlet grid;\n\tlet current;\n\n\tcard = new Card({\n\t\t\tprops: {\n\t\t\t\t$$slots: { default: [create_default_slot] },\n\t\t\t\t$$scope: { ctx }\n\t\t\t}\n\t\t});\n\n\tbutton = new Button({\n\t\t\tprops: {\n\t\t\t\tprops: { icon: \"add\", style: \"secondary\" }\n\t\t\t}\n\t\t});\n\n\tbutton.$on(\"click\", details.add);\n\tgrid = new Grid({ props: { edit: true } });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(card.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(button.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(grid.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(card, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(button, div, null);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tmount_component(grid, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst card_changes = {};\n\n\t\t\tif (dirty & /*$$scope, $goal*/ 5) {\n\t\t\t\tcard_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tcard.$set(card_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(card.$$.fragment, local);\n\t\t\ttransition_in(button.$$.fragment, local);\n\t\t\ttransition_in(grid.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(card.$$.fragment, local);\n\t\t\ttransition_out(button.$$.fragment, local);\n\t\t\ttransition_out(grid.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(card, detaching);\n\t\t\tif (detaching) detach(t0);\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(button);\n\t\t\tif (detaching) detach(t1);\n\t\t\tdestroy_component(grid, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet $goal;\n\tcomponent_subscribe($$self, goal, $$value => $$invalidate(0, $goal = $$value));\n\n\tfunction input_value_binding(value) {\n\t\t$goal = value;\n\t\tgoal.set($goal);\n\t}\n\n\treturn [$goal, input_value_binding];\n}\n\nclass Settings extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {});\n\t}\n}\n\nexport default Settings;", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, webSafe) {\r\n        this.init_();\r\n        var charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.reject = function () { };\r\n        this.resolve = function () { };\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\nfunction isBrowserExtension() {\r\n    var runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    var ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    return 'indexedDB' in self && indexedDB != null;\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var preExist_1 = true;\r\n            var DB_CHECK_NAME_1 = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            var request_1 = self.indexedDB.open(DB_CHECK_NAME_1);\r\n            request_1.onsuccess = function () {\r\n                request_1.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist_1) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME_1);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request_1.onupgradeneeded = function () {\r\n                preExist_1 = false;\r\n            };\r\n            request_1.onerror = function () {\r\n                var _a;\r\n                reject(((_a = request_1.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (!navigator || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nvar FirebaseError = /** @class */ (function (_super) {\r\n    __extends(FirebaseError, _super);\r\n    function FirebaseError(code, message, customData) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        _this.customData = customData;\r\n        _this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(_this, ErrorFactory.prototype.create);\r\n        }\r\n        return _this;\r\n    }\r\n    return FirebaseError;\r\n}(Error));\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    ErrorFactory.prototype.create = function (code) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        var customData = data[0] || {};\r\n        var fullCode = this.service + \"/\" + code;\r\n        var template = this.errors[code];\r\n        var message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        var fullMessage = this.serviceName + \": \" + message + \" (\" + fullCode + \").\";\r\n        var error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    };\r\n    return ErrorFactory;\r\n}());\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, function (_, key) {\r\n        var value = data[key];\r\n        return value != null ? String(value) : \"<\" + key + \"?>\";\r\n    });\r\n}\r\nvar PATTERN = /\\{\\$([^}]+)}/g;\nfunction isEmpty(obj) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    var params = [];\r\n    var _loop_1 = function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    };\r\n    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {\r\n        var _b = _a[_i], key = _b[0], value = _b[1];\r\n        _loop_1(key, value);\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var _a = token.split('='), key = _a[0], value = _a[1];\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    var queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    var fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nvar DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nvar DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nvar MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nvar RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis, backoffFactor) {\r\n    if (intervalMillis === void 0) { intervalMillis = DEFAULT_INTERVAL_MILLIS; }\r\n    if (backoffFactor === void 0) { backoffFactor = DEFAULT_BACKOFF_FACTOR; }\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    var currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    var randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar Component = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    function Component(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    Component.prototype.setInstantiationMode = function (mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    };\r\n    Component.prototype.setMultipleInstances = function (multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    };\r\n    Component.prototype.setServiceProps = function (props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    };\r\n    Component.prototype.setInstanceCreatedCallback = function (callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    };\r\n    return Component;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nvar Provider = /** @class */ (function () {\r\n    function Provider(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.onInitCallbacks = new Set();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    Provider.prototype.get = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            var deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    var instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    };\r\n    Provider.prototype.getImmediate = function (options) {\r\n        var _a = __assign({ identifier: DEFAULT_ENTRY_NAME, optional: false }, options), identifier = _a.identifier, optional = _a.optional;\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(\"Service \" + this.name + \" is not available\");\r\n            }\r\n        }\r\n    };\r\n    Provider.prototype.getComponent = function () {\r\n        return this.component;\r\n    };\r\n    Provider.prototype.setComponent = function (component) {\r\n        var e_1, _a;\r\n        if (component.name !== this.name) {\r\n            throw Error(\"Mismatching Component \" + component.name + \" for Provider \" + this.name + \".\");\r\n        }\r\n        if (this.component) {\r\n            throw Error(\"Component for \" + this.name + \" has already been provided\");\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        try {\r\n            // Create service instances for the pending promises and resolve them\r\n            // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n            // and all promises with resolve with it regardless of the identifier.\r\n            for (var _b = __values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];\r\n                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n                try {\r\n                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                    var instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    instanceDeferred.resolve(instance);\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception, it should not cause\r\n                    // a fatal error. We just leave the promise unresolved.\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    Provider.prototype.clearInstance = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    };\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    Provider.prototype.delete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var services;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        services = Array.from(this.instances.values());\r\n                        return [4 /*yield*/, Promise.all(__spreadArray(__spreadArray([], __read(services\r\n                                .filter(function (service) { return 'INTERNAL' in service; }) // legacy services\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                .map(function (service) { return service.INTERNAL.delete(); }))), __read(services\r\n                                .filter(function (service) { return '_delete' in service; }) // modularized services\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                .map(function (service) { return service._delete(); }))))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Provider.prototype.isComponentSet = function () {\r\n        return this.component != null;\r\n    };\r\n    Provider.prototype.isInitialized = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        return this.instances.has(identifier);\r\n    };\r\n    Provider.prototype.initialize = function (opts) {\r\n        var e_2, _a;\r\n        if (opts === void 0) { opts = {}; }\r\n        var _b = opts.instanceIdentifier, instanceIdentifier = _b === void 0 ? DEFAULT_ENTRY_NAME : _b, _c = opts.options, options = _c === void 0 ? {} : _c;\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(this.name + \"(\" + normalizedIdentifier + \") has already been initialized\");\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(\"Component \" + this.name + \" has not been registered yet\");\r\n        }\r\n        var instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options: options\r\n        });\r\n        try {\r\n            // resolve any pending promise waiting for the service instance\r\n            for (var _d = __values(this.instancesDeferred.entries()), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                var _f = __read(_e.value, 2), instanceIdentifier_1 = _f[0], instanceDeferred = _f[1];\r\n                var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier_1);\r\n                if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                    instanceDeferred.resolve(instance);\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        this.invokeOnInitCallbacks(instance, normalizedIdentifier);\r\n        return instance;\r\n    };\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @returns a function to unregister the callback\r\n     */\r\n    Provider.prototype.onInit = function (callback) {\r\n        var _this = this;\r\n        this.onInitCallbacks.add(callback);\r\n        return function () {\r\n            _this.onInitCallbacks.delete(callback);\r\n        };\r\n    };\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    Provider.prototype.invokeOnInitCallbacks = function (instance, identifier) {\r\n        var e_3, _a;\r\n        try {\r\n            for (var _b = __values(this.onInitCallbacks), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var callback = _c.value;\r\n                try {\r\n                    callback(instance, identifier);\r\n                }\r\n                catch (_d) {\r\n                    // ignore errors in the onInit callback\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    Provider.prototype.getOrInitializeService = function (_a) {\r\n        var instanceIdentifier = _a.instanceIdentifier, _b = _a.options, options = _b === void 0 ? {} : _b;\r\n        var instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options: options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_c) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    };\r\n    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    };\r\n    Provider.prototype.shouldAutoInitialize = function () {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* EXPLICIT */);\r\n    };\r\n    return Provider;\r\n}());\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar ComponentContainer = /** @class */ (function () {\r\n    function ComponentContainer(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    ComponentContainer.prototype.addComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(\"Component \" + component.name + \" has already been registered with \" + this.name);\r\n        }\r\n        provider.setComponent(component);\r\n    };\r\n    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    };\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    ComponentContainer.prototype.getProvider = function (name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        var provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    };\r\n    ComponentContainer.prototype.getProviders = function () {\r\n        return Array.from(this.providers.values());\r\n    };\r\n    return ComponentContainer;\r\n}());\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nvar levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nvar ConsoleMethod = (_a = {},\r\n    _a[LogLevel.DEBUG] = 'log',\r\n    _a[LogLevel.VERBOSE] = 'log',\r\n    _a[LogLevel.INFO] = 'info',\r\n    _a[LogLevel.WARN] = 'warn',\r\n    _a[LogLevel.ERROR] = 'error',\r\n    _a);\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    var now = new Date().toISOString();\r\n    var method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n    }\r\n    else {\r\n        throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError(\"Invalid value \\\"\" + val + \"\\\" assigned to `logLevel`\");\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Workaround for setter/getter having to be the same type.\r\n    Logger.prototype.setLogLevel = function (val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    };\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"userLogHandler\", {\r\n        get: function () {\r\n            return this._userLogHandler;\r\n        },\r\n        set: function (val) {\r\n            this._userLogHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\nconst name = \"@firebase/app-exp\";\nconst version = \"0.0.900-exp.d92a36260\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$1 = \"@firebase/app-compat\";\n\nconst name$2 = \"@firebase/analytics-compat\";\n\nconst name$3 = \"@firebase/analytics-exp\";\n\nconst name$4 = \"@firebase/auth-exp\";\n\nconst name$5 = \"@firebase/auth-compat\";\n\nconst name$6 = \"@firebase/database\";\n\nconst name$7 = \"@firebase/database-compat\";\n\nconst name$8 = \"@firebase/functions-exp\";\n\nconst name$9 = \"@firebase/functions-compat\";\n\nconst name$a = \"@firebase/installations-exp\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$c = \"@firebase/messaging-exp\";\n\nconst name$d = \"@firebase/messaging-compat\";\n\nconst name$e = \"@firebase/performance-exp\";\n\nconst name$f = \"@firebase/performance-compat\";\n\nconst name$g = \"@firebase/remote-config-exp\";\n\nconst name$h = \"@firebase/remote-config-compat\";\n\nconst name$i = \"@firebase/storage\";\n\nconst name$j = \"@firebase/storage-compat\";\n\nconst name$k = \"@firebase/firestore\";\n\nconst name$l = \"@firebase/firestore-compat\";\n\nconst name$m = \"firebase-exp\";\nconst version$1 = \"9.0.0-beta.2\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME$1 = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name]: 'fire-core',\r\n    [name$1]: 'fire-core-compat',\r\n    [name$3]: 'fire-analytics',\r\n    [name$2]: 'fire-analytics-compat',\r\n    [name$4]: 'fire-auth',\r\n    [name$5]: 'fire-auth-compat',\r\n    [name$6]: 'fire-rtdb',\r\n    [name$7]: 'fire-rtdb-compat',\r\n    [name$8]: 'fire-fn',\r\n    [name$9]: 'fire-fn-compat',\r\n    [name$a]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$c]: 'fire-fcm',\r\n    [name$d]: 'fire-fcm-compat',\r\n    [name$e]: 'fire-perf',\r\n    [name$f]: 'fire-perf-compat',\r\n    [name$g]: 'fire-rc',\r\n    [name$h]: 'fire-rc-compat',\r\n    [name$i]: 'fire-gcs',\r\n    [name$j]: 'fire-gcs-compat',\r\n    [name$k]: 'fire-fst',\r\n    [name$l]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name$m]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    return app.container.getProvider(name);\r\n}\r\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"bad-app-name\" /* BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists\",\r\n    [\"app-deleted\" /* APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app-exp', () => this, \"PUBLIC\" /* PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version$1;\r\nfunction initializeApp(options, rawConfig = {}) {\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME$1, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    if (_apps.has(name)) {\r\n        throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a FirebaseApp instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME$1) {\r\n    const app = _apps.get(name);\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* VERSION */));\r\n}\r\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name, version, variant);\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents();\n\nexport { Component as C, ErrorFactory as E, FirebaseError as F, Logger as L, SDK_VERSION as S, _registerComponent as _, _getProvider as a, getModularInstance as b, areCookiesEnabled as c, isIndexedDBAvailable as d, calculateBackoffMillis as e, initializeApp as f, getApp as g, base64Decode as h, isBrowserExtension as i, __rest as j, querystringDecode as k, extractQuerystring as l, LogLevel as m, isMobileCordova as n, isReactNative as o, isIE as p, querystring as q, registerVersion as r, getUA as s, createSubscribe as t, isEmpty as u, validateIndexedDBOpenable as v };\n", "import { r as registerVersion } from '../common/index.esm2017-19c3e5a1.js';\nexport { f as initializeApp } from '../common/index.esm2017-19c3e5a1.js';\n\nvar name = \"firebase-exp\";\nvar version = \"9.0.0-beta.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n", "import { a as _getProvider, b as getModularInstance, h as base64Decode, j as __rest, q as querystring, k as querystringDecode, l as extractQuerystring, g as getApp, m as LogLevel, S as SDK_VERSION, n as isMobileCordova, o as isReactNative, F as FirebaseError, _ as _registerComponent, C as Component, r as registerVersion, p as isIE, E as ErrorFactory, L as Logger, i as isBrowserExtension, s as getUA, t as createSubscribe, u as isEmpty } from '../common/index.esm2017-19c3e5a1.js';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _debugErrorMap() {\r\n    return {\r\n        [\"admin-restricted-operation\" /* ADMIN_ONLY_OPERATION */]: 'This operation is restricted to administrators only.',\r\n        [\"argument-error\" /* ARGUMENT_ERROR */]: '',\r\n        [\"app-not-authorized\" /* APP_NOT_AUTHORIZED */]: \"This app, identified by the domain where it's hosted, is not \" +\r\n            'authorized to use Firebase Authentication with the provided API key. ' +\r\n            'Review your key configuration in the Google API console.',\r\n        [\"app-not-installed\" /* APP_NOT_INSTALLED */]: 'The requested mobile application corresponding to the identifier (' +\r\n            'Android package name or iOS bundle ID) provided is not installed on ' +\r\n            'this device.',\r\n        [\"captcha-check-failed\" /* CAPTCHA_CHECK_FAILED */]: 'The reCAPTCHA response token provided is either invalid, expired, ' +\r\n            'already used or the domain associated with it does not match the list ' +\r\n            'of whitelisted domains.',\r\n        [\"code-expired\" /* CODE_EXPIRED */]: 'The SMS code has expired. Please re-send the verification code to try ' +\r\n            'again.',\r\n        [\"cordova-not-ready\" /* CORDOVA_NOT_READY */]: 'Cordova framework is not ready.',\r\n        [\"cors-unsupported\" /* CORS_UNSUPPORTED */]: 'This browser is not supported.',\r\n        [\"credential-already-in-use\" /* CREDENTIAL_ALREADY_IN_USE */]: 'This credential is already associated with a different user account.',\r\n        [\"custom-token-mismatch\" /* CREDENTIAL_MISMATCH */]: 'The custom token corresponds to a different audience.',\r\n        [\"requires-recent-login\" /* CREDENTIAL_TOO_OLD_LOGIN_AGAIN */]: 'This operation is sensitive and requires recent authentication. Log in ' +\r\n            'again before retrying this request.',\r\n        [\"dependent-sdk-initialized-before-auth\" /* DEPENDENT_SDK_INIT_BEFORE_AUTH */]: 'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\r\n            'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\r\n            'starting any other Firebase SDK.',\r\n        [\"dynamic-link-not-activated\" /* DYNAMIC_LINK_NOT_ACTIVATED */]: 'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\r\n            'conditions.',\r\n        [\"email-change-needs-verification\" /* EMAIL_CHANGE_NEEDS_VERIFICATION */]: 'Multi-factor users must always have a verified email.',\r\n        [\"email-already-in-use\" /* EMAIL_EXISTS */]: 'The email address is already in use by another account.',\r\n        [\"emulator-config-failed\" /* EMULATOR_CONFIG_FAILED */]: 'Auth instance has already been used to make a network call. Auth can ' +\r\n            'no longer be configured to use the emulator. Try calling ' +\r\n            '\"useAuthEmulator()\" sooner.',\r\n        [\"expired-action-code\" /* EXPIRED_OOB_CODE */]: 'The action code has expired.',\r\n        [\"cancelled-popup-request\" /* EXPIRED_POPUP_REQUEST */]: 'This operation has been cancelled due to another conflicting popup being opened.',\r\n        [\"internal-error\" /* INTERNAL_ERROR */]: 'An internal AuthError has occurred.',\r\n        [\"invalid-app-credential\" /* INVALID_APP_CREDENTIAL */]: 'The phone verification request contains an invalid application verifier.' +\r\n            ' The reCAPTCHA token response is either invalid or expired.',\r\n        [\"invalid-app-id\" /* INVALID_APP_ID */]: 'The mobile app identifier is not registed for the current project.',\r\n        [\"invalid-user-token\" /* INVALID_AUTH */]: \"This user's credential isn't valid for this project. This can happen \" +\r\n            \"if the user's token has been tampered with, or if the user isn't for \" +\r\n            'the project associated with this API key.',\r\n        [\"invalid-auth-event\" /* INVALID_AUTH_EVENT */]: 'An internal AuthError has occurred.',\r\n        [\"invalid-verification-code\" /* INVALID_CODE */]: 'The SMS verification code used to create the phone auth credential is ' +\r\n            'invalid. Please resend the verification code sms and be sure use the ' +\r\n            'verification code provided by the user.',\r\n        [\"invalid-continue-uri\" /* INVALID_CONTINUE_URI */]: 'The continue URL provided in the request is invalid.',\r\n        [\"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */]: 'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\r\n            'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\r\n            'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\r\n            'cordova-plugin-customurlscheme.',\r\n        [\"invalid-custom-token\" /* INVALID_CUSTOM_TOKEN */]: 'The custom token format is incorrect. Please check the documentation.',\r\n        [\"invalid-dynamic-link-domain\" /* INVALID_DYNAMIC_LINK_DOMAIN */]: 'The provided dynamic link domain is not configured or authorized for the current project.',\r\n        [\"invalid-email\" /* INVALID_EMAIL */]: 'The email address is badly formatted.',\r\n        [\"invalid-emulator-scheme\" /* INVALID_EMULATOR_SCHEME */]: 'Emulator URL must start with a valid scheme (http:// or https://).',\r\n        [\"invalid-api-key\" /* INVALID_API_KEY */]: 'Your API key is invalid, please check you have copied it correctly.',\r\n        [\"invalid-cert-hash\" /* INVALID_CERT_HASH */]: 'The SHA-1 certificate hash provided is invalid.',\r\n        [\"invalid-credential\" /* INVALID_IDP_RESPONSE */]: 'The supplied auth credential is malformed or has expired.',\r\n        [\"invalid-message-payload\" /* INVALID_MESSAGE_PAYLOAD */]: 'The email template corresponding to this action contains invalid characters in its message. ' +\r\n            'Please fix by going to the Auth email templates section in the Firebase Console.',\r\n        [\"invalid-multi-factor-session\" /* INVALID_MFA_SESSION */]: 'The request does not contain a valid proof of first factor successful sign-in.',\r\n        [\"invalid-oauth-provider\" /* INVALID_OAUTH_PROVIDER */]: 'EmailAuthProvider is not supported for this operation. This operation ' +\r\n            'only supports OAuth providers.',\r\n        [\"invalid-oauth-client-id\" /* INVALID_OAUTH_CLIENT_ID */]: 'The OAuth client ID provided is either invalid or does not match the ' +\r\n            'specified API key.',\r\n        [\"unauthorized-domain\" /* INVALID_ORIGIN */]: 'This domain is not authorized for OAuth operations for your Firebase ' +\r\n            'project. Edit the list of authorized domains from the Firebase console.',\r\n        [\"invalid-action-code\" /* INVALID_OOB_CODE */]: 'The action code is invalid. This can happen if the code is malformed, ' +\r\n            'expired, or has already been used.',\r\n        [\"wrong-password\" /* INVALID_PASSWORD */]: 'The password is invalid or the user does not have a password.',\r\n        [\"invalid-persistence-type\" /* INVALID_PERSISTENCE */]: 'The specified persistence type is invalid. It can only be local, session or none.',\r\n        [\"invalid-phone-number\" /* INVALID_PHONE_NUMBER */]: 'The format of the phone number provided is incorrect. Please enter the ' +\r\n            'phone number in a format that can be parsed into E.164 format. E.164 ' +\r\n            'phone numbers are written in the format [+][country code][subscriber ' +\r\n            'number including area code].',\r\n        [\"invalid-provider-id\" /* INVALID_PROVIDER_ID */]: 'The specified provider ID is invalid.',\r\n        [\"invalid-recipient-email\" /* INVALID_RECIPIENT_EMAIL */]: 'The email corresponding to this action failed to send as the provided ' +\r\n            'recipient email address is invalid.',\r\n        [\"invalid-sender\" /* INVALID_SENDER */]: 'The email template corresponding to this action contains an invalid sender email or name. ' +\r\n            'Please fix by going to the Auth email templates section in the Firebase Console.',\r\n        [\"invalid-verification-id\" /* INVALID_SESSION_INFO */]: 'The verification ID used to create the phone auth credential is invalid.',\r\n        [\"invalid-tenant-id\" /* INVALID_TENANT_ID */]: \"The Auth instance's tenant ID is invalid.\",\r\n        [\"missing-android-pkg-name\" /* MISSING_ANDROID_PACKAGE_NAME */]: 'An Android Package Name must be provided if the Android App is required to be installed.',\r\n        [\"auth-domain-config-required\" /* MISSING_AUTH_DOMAIN */]: 'Be sure to include authDomain when calling firebase.initializeApp(), ' +\r\n            'by following the instructions in the Firebase console.',\r\n        [\"missing-app-credential\" /* MISSING_APP_CREDENTIAL */]: 'The phone verification request is missing an application verifier ' +\r\n            'assertion. A reCAPTCHA response token needs to be provided.',\r\n        [\"missing-verification-code\" /* MISSING_CODE */]: 'The phone auth credential was created with an empty SMS verification code.',\r\n        [\"missing-continue-uri\" /* MISSING_CONTINUE_URI */]: 'A continue URL must be provided in the request.',\r\n        [\"missing-iframe-start\" /* MISSING_IFRAME_START */]: 'An internal AuthError has occurred.',\r\n        [\"missing-ios-bundle-id\" /* MISSING_IOS_BUNDLE_ID */]: 'An iOS Bundle ID must be provided if an App Store ID is provided.',\r\n        [\"missing-or-invalid-nonce\" /* MISSING_OR_INVALID_NONCE */]: 'The request does not contain a valid nonce. This can occur if the ' +\r\n            'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\r\n            'in the ID token payload.',\r\n        [\"missing-multi-factor-info\" /* MISSING_MFA_INFO */]: 'No second factor identifier is provided.',\r\n        [\"missing-multi-factor-session\" /* MISSING_MFA_SESSION */]: 'The request is missing proof of first factor successful sign-in.',\r\n        [\"missing-phone-number\" /* MISSING_PHONE_NUMBER */]: 'To send verification codes, provide a phone number for the recipient.',\r\n        [\"missing-verification-id\" /* MISSING_SESSION_INFO */]: 'The phone auth credential was created with an empty verification ID.',\r\n        [\"app-deleted\" /* MODULE_DESTROYED */]: 'This instance of FirebaseApp has been deleted.',\r\n        [\"multi-factor-info-not-found\" /* MFA_INFO_NOT_FOUND */]: 'The user does not have a second factor matching the identifier provided.',\r\n        [\"multi-factor-auth-required\" /* MFA_REQUIRED */]: 'Proof of ownership of a second factor is required to complete sign-in.',\r\n        [\"account-exists-with-different-credential\" /* NEED_CONFIRMATION */]: 'An account already exists with the same email address but different ' +\r\n            'sign-in credentials. Sign in using a provider associated with this ' +\r\n            'email address.',\r\n        [\"network-request-failed\" /* NETWORK_REQUEST_FAILED */]: 'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\r\n        [\"no-auth-event\" /* NO_AUTH_EVENT */]: 'An internal AuthError has occurred.',\r\n        [\"no-such-provider\" /* NO_SUCH_PROVIDER */]: 'User was not linked to an account with the given provider.',\r\n        [\"null-user\" /* NULL_USER */]: 'A null user object was provided as the argument for an operation which ' +\r\n            'requires a non-null user object.',\r\n        [\"operation-not-allowed\" /* OPERATION_NOT_ALLOWED */]: 'The given sign-in provider is disabled for this Firebase project. ' +\r\n            'Enable it in the Firebase console, under the sign-in method tab of the ' +\r\n            'Auth section.',\r\n        [\"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */]: 'This operation is not supported in the environment this application is ' +\r\n            'running on. \"location.protocol\" must be http, https or chrome-extension' +\r\n            ' and web storage must be enabled.',\r\n        [\"popup-blocked\" /* POPUP_BLOCKED */]: 'Unable to establish a connection with the popup. It may have been blocked by the browser.',\r\n        [\"popup-closed-by-user\" /* POPUP_CLOSED_BY_USER */]: 'The popup has been closed by the user before finalizing the operation.',\r\n        [\"provider-already-linked\" /* PROVIDER_ALREADY_LINKED */]: 'User can only be linked to one identity for the given provider.',\r\n        [\"quota-exceeded\" /* QUOTA_EXCEEDED */]: \"The project's quota for this operation has been exceeded.\",\r\n        [\"redirect-cancelled-by-user\" /* REDIRECT_CANCELLED_BY_USER */]: 'The redirect operation has been cancelled by the user before finalizing.',\r\n        [\"redirect-operation-pending\" /* REDIRECT_OPERATION_PENDING */]: 'A redirect sign-in operation is already pending.',\r\n        [\"rejected-credential\" /* REJECTED_CREDENTIAL */]: 'The request contains malformed or mismatching credentials.',\r\n        [\"second-factor-already-in-use\" /* SECOND_FACTOR_ALREADY_ENROLLED */]: 'The second factor is already enrolled on this account.',\r\n        [\"maximum-second-factor-count-exceeded\" /* SECOND_FACTOR_LIMIT_EXCEEDED */]: 'The maximum allowed number of second factors on a user has been exceeded.',\r\n        [\"tenant-id-mismatch\" /* TENANT_ID_MISMATCH */]: \"The provided tenant ID does not match the Auth instance's tenant ID\",\r\n        [\"timeout\" /* TIMEOUT */]: 'The operation has timed out.',\r\n        [\"user-token-expired\" /* TOKEN_EXPIRED */]: \"The user's credential is no longer valid. The user must sign in again.\",\r\n        [\"too-many-requests\" /* TOO_MANY_ATTEMPTS_TRY_LATER */]: 'We have blocked all requests from this device due to unusual activity. ' +\r\n            'Try again later.',\r\n        [\"unauthorized-continue-uri\" /* UNAUTHORIZED_DOMAIN */]: 'The domain of the continue URL is not whitelisted.  Please whitelist ' +\r\n            'the domain in the Firebase console.',\r\n        [\"unsupported-first-factor\" /* UNSUPPORTED_FIRST_FACTOR */]: 'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\r\n        [\"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */]: 'The current environment does not support the specified persistence type.',\r\n        [\"unsupported-tenant-operation\" /* UNSUPPORTED_TENANT_OPERATION */]: 'This operation is not supported in a multi-tenant context.',\r\n        [\"unverified-email\" /* UNVERIFIED_EMAIL */]: 'The operation requires a verified email.',\r\n        [\"user-cancelled\" /* USER_CANCELLED */]: 'The user did not grant your application the permissions it requested.',\r\n        [\"user-not-found\" /* USER_DELETED */]: 'There is no user record corresponding to this identifier. The user may ' +\r\n            'have been deleted.',\r\n        [\"user-disabled\" /* USER_DISABLED */]: 'The user account has been disabled by an administrator.',\r\n        [\"user-mismatch\" /* USER_MISMATCH */]: 'The supplied credentials do not correspond to the previously signed in user.',\r\n        [\"user-signed-out\" /* USER_SIGNED_OUT */]: '',\r\n        [\"weak-password\" /* WEAK_PASSWORD */]: 'The password must be 6 characters long or more.',\r\n        [\"web-storage-unsupported\" /* WEB_STORAGE_UNSUPPORTED */]: 'This browser is not supported or 3rd party cookies and data may be disabled.',\r\n        [\"already-initialized\" /* ALREADY_INITIALIZED */]: 'Auth can only be initialized once per app.'\r\n    };\r\n}\r\nfunction _prodErrorMap() {\r\n    // We will include this one message in the prod error map since by the very\r\n    // nature of this error, developers will never be able to see the message\r\n    // using the debugErrorMap (which is installed during auth initialization).\r\n    return {\r\n        [\"dependent-sdk-initialized-before-auth\" /* DEPENDENT_SDK_INIT_BEFORE_AUTH */]: 'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\r\n            'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\r\n            'starting any other Firebase SDK.'\r\n    };\r\n}\r\n/**\r\n * A verbose error map with detailed descriptions for most error codes.\r\n *\r\n * See discussion at {@link AuthErrorMap}\r\n *\r\n * @public\r\n */\r\nconst debugErrorMap = _debugErrorMap;\r\n/**\r\n * A minimal error map with all verbose error messages stripped.\r\n *\r\n * See discussion at {@link AuthErrorMap}\r\n *\r\n * @public\r\n */\r\nconst prodErrorMap = _prodErrorMap;\r\nconst _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory('auth', 'Firebase', _prodErrorMap());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logClient = new Logger('@firebase/auth-exp');\r\nfunction _logError(msg, ...args) {\r\n    if (logClient.logLevel <= LogLevel.ERROR) {\r\n        logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _fail(authOrCode, ...rest) {\r\n    throw createErrorInternal(authOrCode, ...rest);\r\n}\r\nfunction _createError(authOrCode, ...rest) {\r\n    return createErrorInternal(authOrCode, ...rest);\r\n}\r\nfunction createErrorInternal(authOrCode, ...rest) {\r\n    if (typeof authOrCode !== 'string') {\r\n        const code = rest[0];\r\n        const fullParams = [...rest.slice(1)];\r\n        if (fullParams[0]) {\r\n            fullParams[0].appName = authOrCode.name;\r\n        }\r\n        return authOrCode._errorFactory.create(code, ...fullParams);\r\n    }\r\n    return _DEFAULT_AUTH_ERROR_FACTORY.create(authOrCode, ...rest);\r\n}\r\nfunction _assert(assertion, authOrCode, ...rest) {\r\n    if (!assertion) {\r\n        throw createErrorInternal(authOrCode, ...rest);\r\n    }\r\n}\r\n/**\r\n * Unconditionally fails, throwing an internal error with the given message.\r\n *\r\n * @param failure type of failure encountered\r\n * @throws Error\r\n */\r\nfunction debugFail(failure) {\r\n    // Log the failure in addition to throw an exception, just in case the\r\n    // exception is swallowed.\r\n    const message = `INTERNAL ASSERTION FAILED: ` + failure;\r\n    _logError(message);\r\n    // NOTE: We don't use FirebaseError here because these are internal failures\r\n    // that cannot be handled by the user. (Also it would create a circular\r\n    // dependency between the error and assert modules which doesn't work.)\r\n    throw new Error(message);\r\n}\r\n/**\r\n * Fails if the given assertion condition is false, throwing an Error with the\r\n * given message if it did.\r\n *\r\n * @param assertion\r\n * @param message\r\n */\r\nfunction debugAssert(assertion, message) {\r\n    if (!assertion) {\r\n        debugFail(message);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst instanceCache = new Map();\r\nfunction _getInstance(cls) {\r\n    debugAssert(cls instanceof Function, 'Expected a class definition');\r\n    let instance = instanceCache.get(cls);\r\n    if (instance) {\r\n        debugAssert(instance instanceof cls, 'Instance stored in cache mismatched with class');\r\n        return instance;\r\n    }\r\n    instance = new cls();\r\n    instanceCache.set(cls, instance);\r\n    return instance;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Initializes an Auth instance with fine-grained control over\r\n * {@link Dependencies}.\r\n *\r\n * @remarks\r\n *\r\n * This function allows more control over the Auth instance than\r\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\r\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\r\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\r\n * need control over which persistence layer is used, or to minimize bundle\r\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\r\n *\r\n * For example, if your app only uses anonymous accounts and you only want\r\n * accounts saved for the current session, initialize Auth with:\r\n *\r\n * ```js\r\n * const auth = initializeAuth(app, {\r\n *   persistence: browserSessionPersistence,\r\n *   popupRedirectResolver: undefined,\r\n * });\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction initializeAuth(app, deps) {\r\n    const provider = _getProvider(app, 'auth-exp');\r\n    if (provider.isInitialized()) {\r\n        const auth = provider.getImmediate();\r\n        _fail(auth, \"already-initialized\" /* ALREADY_INITIALIZED */);\r\n    }\r\n    const auth = provider.initialize({ options: deps });\r\n    return auth;\r\n}\r\nfunction _initializeAuthInstance(auth, deps) {\r\n    const persistence = (deps === null || deps === void 0 ? void 0 : deps.persistence) || [];\r\n    const hierarchy = (Array.isArray(persistence)\r\n        ? persistence\r\n        : [persistence]).map(_getInstance);\r\n    if (deps === null || deps === void 0 ? void 0 : deps.errorMap) {\r\n        auth._updateErrorMap(deps.errorMap);\r\n    }\r\n    // This promise is intended to float; auth initialization happens in the\r\n    // background, meanwhile the auth object may be used by the app.\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    auth._initializeWithPersistence(hierarchy, deps === null || deps === void 0 ? void 0 : deps.popupRedirectResolver);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _getCurrentUrl() {\r\n    var _a;\r\n    return (typeof self !== 'undefined' && ((_a = self.location) === null || _a === void 0 ? void 0 : _a.href)) || '';\r\n}\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return (typeof self !== 'undefined' && ((_a = self.location) === null || _a === void 0 ? void 0 : _a.protocol)) || null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Determine whether the browser is working online\r\n */\r\nfunction _isOnline() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        navigator &&\r\n        'onLine' in navigator &&\r\n        typeof navigator.onLine === 'boolean' &&\r\n        // Apply only for traditional web apps and Chrome extensions.\r\n        // This is especially true for Cordova apps which have unreliable\r\n        // navigator.onLine behavior unless cordova-plugin-network-information is\r\n        // installed which overwrites the native navigator.onLine value and\r\n        // defines navigator.connection.\r\n        (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)) {\r\n        return navigator.onLine;\r\n    }\r\n    // If we can't determine the state, assume it is online.\r\n    return true;\r\n}\r\nfunction _getUserLanguage() {\r\n    if (typeof navigator === 'undefined') {\r\n        return null;\r\n    }\r\n    const navigatorLanguage = navigator;\r\n    return (\r\n    // Most reliable, but only supported in Chrome/Firefox.\r\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\r\n        // Supported in most browsers, but returns the language of the browser\r\n        // UI, not the language set in browser settings.\r\n        navigatorLanguage.language ||\r\n        // Couldn't determine language.\r\n        null);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A structure to help pick between a range of long and short delay durations\r\n * depending on the current environment. In general, the long delay is used for\r\n * mobile environments whereas short delays are used for desktop environments.\r\n */\r\nclass Delay {\r\n    constructor(shortDelay, longDelay) {\r\n        this.shortDelay = shortDelay;\r\n        this.longDelay = longDelay;\r\n        // Internal error when improperly initialized.\r\n        debugAssert(longDelay > shortDelay, 'Short delay should be less than long delay!');\r\n        this.isMobile = isMobileCordova() || isReactNative();\r\n    }\r\n    get() {\r\n        if (!_isOnline()) {\r\n            // Pick the shorter timeout.\r\n            return Math.min(5000 /* OFFLINE */, this.shortDelay);\r\n        }\r\n        // If running in a mobile environment, return the long delay, otherwise\r\n        // return the short delay.\r\n        // This could be improved in the future to dynamically change based on other\r\n        // variables instead of just reading the current environment.\r\n        return this.isMobile ? this.longDelay : this.shortDelay;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _emulatorUrl(config, path) {\r\n    debugAssert(config.emulator, 'Emulator should always be set here');\r\n    const { url } = config.emulator;\r\n    if (!path) {\r\n        return url;\r\n    }\r\n    return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FetchProvider {\r\n    static initialize(fetchImpl, headersImpl, responseImpl) {\r\n        this.fetchImpl = fetchImpl;\r\n        if (headersImpl) {\r\n            this.headersImpl = headersImpl;\r\n        }\r\n        if (responseImpl) {\r\n            this.responseImpl = responseImpl;\r\n        }\r\n    }\r\n    static fetch() {\r\n        if (this.fetchImpl) {\r\n            return this.fetchImpl;\r\n        }\r\n        if (typeof self !== 'undefined' && 'fetch' in self) {\r\n            return self.fetch;\r\n        }\r\n        debugFail('Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\r\n    }\r\n    static headers() {\r\n        if (this.headersImpl) {\r\n            return this.headersImpl;\r\n        }\r\n        if (typeof self !== 'undefined' && 'Headers' in self) {\r\n            return self.Headers;\r\n        }\r\n        debugFail('Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\r\n    }\r\n    static response() {\r\n        if (this.responseImpl) {\r\n            return this.responseImpl;\r\n        }\r\n        if (typeof self !== 'undefined' && 'Response' in self) {\r\n            return self.Response;\r\n        }\r\n        debugFail('Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Map from errors returned by the server to errors to developer visible errors\r\n */\r\nconst SERVER_ERROR_MAP = {\r\n    // Custom token errors.\r\n    [\"CREDENTIAL_MISMATCH\" /* CREDENTIAL_MISMATCH */]: \"custom-token-mismatch\" /* CREDENTIAL_MISMATCH */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_CUSTOM_TOKEN\" /* MISSING_CUSTOM_TOKEN */]: \"internal-error\" /* INTERNAL_ERROR */,\r\n    // Create Auth URI errors.\r\n    [\"INVALID_IDENTIFIER\" /* INVALID_IDENTIFIER */]: \"invalid-email\" /* INVALID_EMAIL */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_CONTINUE_URI\" /* MISSING_CONTINUE_URI */]: \"internal-error\" /* INTERNAL_ERROR */,\r\n    // Sign in with email and password errors (some apply to sign up too).\r\n    [\"INVALID_PASSWORD\" /* INVALID_PASSWORD */]: \"wrong-password\" /* INVALID_PASSWORD */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_PASSWORD\" /* MISSING_PASSWORD */]: \"internal-error\" /* INTERNAL_ERROR */,\r\n    // Sign up with email and password errors.\r\n    [\"EMAIL_EXISTS\" /* EMAIL_EXISTS */]: \"email-already-in-use\" /* EMAIL_EXISTS */,\r\n    [\"PASSWORD_LOGIN_DISABLED\" /* PASSWORD_LOGIN_DISABLED */]: \"operation-not-allowed\" /* OPERATION_NOT_ALLOWED */,\r\n    // Verify assertion for sign in with credential errors:\r\n    [\"INVALID_IDP_RESPONSE\" /* INVALID_IDP_RESPONSE */]: \"invalid-credential\" /* INVALID_IDP_RESPONSE */,\r\n    [\"INVALID_PENDING_TOKEN\" /* INVALID_PENDING_TOKEN */]: \"invalid-credential\" /* INVALID_IDP_RESPONSE */,\r\n    [\"FEDERATED_USER_ID_ALREADY_LINKED\" /* FEDERATED_USER_ID_ALREADY_LINKED */]: \"credential-already-in-use\" /* CREDENTIAL_ALREADY_IN_USE */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_REQ_TYPE\" /* MISSING_REQ_TYPE */]: \"internal-error\" /* INTERNAL_ERROR */,\r\n    // Send Password reset email errors:\r\n    [\"EMAIL_NOT_FOUND\" /* EMAIL_NOT_FOUND */]: \"user-not-found\" /* USER_DELETED */,\r\n    [\"RESET_PASSWORD_EXCEED_LIMIT\" /* RESET_PASSWORD_EXCEED_LIMIT */]: \"too-many-requests\" /* TOO_MANY_ATTEMPTS_TRY_LATER */,\r\n    [\"EXPIRED_OOB_CODE\" /* EXPIRED_OOB_CODE */]: \"expired-action-code\" /* EXPIRED_OOB_CODE */,\r\n    [\"INVALID_OOB_CODE\" /* INVALID_OOB_CODE */]: \"invalid-action-code\" /* INVALID_OOB_CODE */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_OOB_CODE\" /* MISSING_OOB_CODE */]: \"internal-error\" /* INTERNAL_ERROR */,\r\n    // Operations that require ID token in request:\r\n    [\"CREDENTIAL_TOO_OLD_LOGIN_AGAIN\" /* CREDENTIAL_TOO_OLD_LOGIN_AGAIN */]: \"requires-recent-login\" /* CREDENTIAL_TOO_OLD_LOGIN_AGAIN */,\r\n    [\"INVALID_ID_TOKEN\" /* INVALID_ID_TOKEN */]: \"invalid-user-token\" /* INVALID_AUTH */,\r\n    [\"TOKEN_EXPIRED\" /* TOKEN_EXPIRED */]: \"user-token-expired\" /* TOKEN_EXPIRED */,\r\n    [\"USER_NOT_FOUND\" /* USER_NOT_FOUND */]: \"user-token-expired\" /* TOKEN_EXPIRED */,\r\n    // Other errors.\r\n    [\"TOO_MANY_ATTEMPTS_TRY_LATER\" /* TOO_MANY_ATTEMPTS_TRY_LATER */]: \"too-many-requests\" /* TOO_MANY_ATTEMPTS_TRY_LATER */,\r\n    // Phone Auth related errors.\r\n    [\"INVALID_CODE\" /* INVALID_CODE */]: \"invalid-verification-code\" /* INVALID_CODE */,\r\n    [\"INVALID_SESSION_INFO\" /* INVALID_SESSION_INFO */]: \"invalid-verification-id\" /* INVALID_SESSION_INFO */,\r\n    [\"INVALID_TEMPORARY_PROOF\" /* INVALID_TEMPORARY_PROOF */]: \"invalid-credential\" /* INVALID_IDP_RESPONSE */,\r\n    [\"MISSING_SESSION_INFO\" /* MISSING_SESSION_INFO */]: \"missing-verification-id\" /* MISSING_SESSION_INFO */,\r\n    [\"SESSION_EXPIRED\" /* SESSION_EXPIRED */]: \"code-expired\" /* CODE_EXPIRED */,\r\n    // Other action code errors when additional settings passed.\r\n    // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\r\n    // This is OK as this error will be caught by client side validation.\r\n    [\"MISSING_ANDROID_PACKAGE_NAME\" /* MISSING_ANDROID_PACKAGE_NAME */]: \"missing-android-pkg-name\" /* MISSING_ANDROID_PACKAGE_NAME */,\r\n    [\"UNAUTHORIZED_DOMAIN\" /* UNAUTHORIZED_DOMAIN */]: \"unauthorized-continue-uri\" /* UNAUTHORIZED_DOMAIN */,\r\n    // getProjectConfig errors when clientId is passed.\r\n    [\"INVALID_OAUTH_CLIENT_ID\" /* INVALID_OAUTH_CLIENT_ID */]: \"invalid-oauth-client-id\" /* INVALID_OAUTH_CLIENT_ID */,\r\n    // User actions (sign-up or deletion) disabled errors.\r\n    [\"ADMIN_ONLY_OPERATION\" /* ADMIN_ONLY_OPERATION */]: \"admin-restricted-operation\" /* ADMIN_ONLY_OPERATION */,\r\n    // Multi factor related errors.\r\n    [\"INVALID_MFA_PENDING_CREDENTIAL\" /* INVALID_MFA_PENDING_CREDENTIAL */]: \"invalid-multi-factor-session\" /* INVALID_MFA_SESSION */,\r\n    [\"MFA_ENROLLMENT_NOT_FOUND\" /* MFA_ENROLLMENT_NOT_FOUND */]: \"multi-factor-info-not-found\" /* MFA_INFO_NOT_FOUND */,\r\n    [\"MISSING_MFA_ENROLLMENT_ID\" /* MISSING_MFA_ENROLLMENT_ID */]: \"missing-multi-factor-info\" /* MISSING_MFA_INFO */,\r\n    [\"MISSING_MFA_PENDING_CREDENTIAL\" /* MISSING_MFA_PENDING_CREDENTIAL */]: \"missing-multi-factor-session\" /* MISSING_MFA_SESSION */,\r\n    [\"SECOND_FACTOR_EXISTS\" /* SECOND_FACTOR_EXISTS */]: \"second-factor-already-in-use\" /* SECOND_FACTOR_ALREADY_ENROLLED */,\r\n    [\"SECOND_FACTOR_LIMIT_EXCEEDED\" /* SECOND_FACTOR_LIMIT_EXCEEDED */]: \"maximum-second-factor-count-exceeded\" /* SECOND_FACTOR_LIMIT_EXCEEDED */\r\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_API_TIMEOUT_MS = new Delay(30000, 60000);\r\nfunction _addTidIfNecessary(auth, request) {\r\n    if (auth.tenantId && !request.tenantId) {\r\n        return Object.assign(Object.assign({}, request), { tenantId: auth.tenantId });\r\n    }\r\n    return request;\r\n}\r\nasync function _performApiRequest(auth, method, path, request, customErrorMap = {}) {\r\n    return _performFetchWithErrorHandling(auth, customErrorMap, () => {\r\n        let body = {};\r\n        let params = {};\r\n        if (request) {\r\n            if (method === \"GET\" /* GET */) {\r\n                params = request;\r\n            }\r\n            else {\r\n                body = {\r\n                    body: JSON.stringify(request)\r\n                };\r\n            }\r\n        }\r\n        const query = querystring(Object.assign({ key: auth.config.apiKey }, params)).slice(1);\r\n        const headers = new (FetchProvider.headers())();\r\n        headers.set(\"Content-Type\" /* CONTENT_TYPE */, 'application/json');\r\n        headers.set(\"X-Client-Version\" /* X_CLIENT_VERSION */, auth._getSdkClientVersion());\r\n        if (auth.languageCode) {\r\n            headers.set(\"X-Firebase-Locale\" /* X_FIREBASE_LOCALE */, auth.languageCode);\r\n        }\r\n        return FetchProvider.fetch()(_getFinalTarget(auth, auth.config.apiHost, path, query), Object.assign({ method,\r\n            headers, referrerPolicy: 'no-referrer' }, body));\r\n    });\r\n}\r\nasync function _performFetchWithErrorHandling(auth, customErrorMap, fetchFn) {\r\n    auth._canInitEmulator = false;\r\n    const errorMap = Object.assign(Object.assign({}, SERVER_ERROR_MAP), customErrorMap);\r\n    try {\r\n        const networkTimeout = new NetworkTimeout(auth);\r\n        const response = await Promise.race([\r\n            fetchFn(),\r\n            networkTimeout.promise\r\n        ]);\r\n        // If we've reached this point, the fetch succeeded and the networkTimeout\r\n        // didn't throw; clear the network timeout delay so that Node won't hang\r\n        networkTimeout.clearNetworkTimeout();\r\n        const json = await response.json();\r\n        if ('needConfirmation' in json) {\r\n            throw _makeTaggedError(auth, \"account-exists-with-different-credential\" /* NEED_CONFIRMATION */, json);\r\n        }\r\n        if (response.ok && !('errorMessage' in json)) {\r\n            return json;\r\n        }\r\n        else {\r\n            const errorMessage = response.ok ? json.errorMessage : json.error.message;\r\n            const serverErrorCode = errorMessage.split(' : ')[0];\r\n            if (serverErrorCode === \"FEDERATED_USER_ID_ALREADY_LINKED\" /* FEDERATED_USER_ID_ALREADY_LINKED */) {\r\n                throw _makeTaggedError(auth, \"credential-already-in-use\" /* CREDENTIAL_ALREADY_IN_USE */, json);\r\n            }\r\n            else if (serverErrorCode === \"EMAIL_EXISTS\" /* EMAIL_EXISTS */) {\r\n                throw _makeTaggedError(auth, \"email-already-in-use\" /* EMAIL_EXISTS */, json);\r\n            }\r\n            const authError = errorMap[serverErrorCode] ||\r\n                serverErrorCode\r\n                    .toLowerCase()\r\n                    .replace(/[_\\s]+/g, '-');\r\n            _fail(auth, authError);\r\n        }\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            throw e;\r\n        }\r\n        _fail(auth, \"network-request-failed\" /* NETWORK_REQUEST_FAILED */);\r\n    }\r\n}\r\nasync function _performSignInRequest(auth, method, path, request, customErrorMap = {}) {\r\n    const serverResponse = (await _performApiRequest(auth, method, path, request, customErrorMap));\r\n    if ('mfaPendingCredential' in serverResponse) {\r\n        _fail(auth, \"multi-factor-auth-required\" /* MFA_REQUIRED */, {\r\n            serverResponse\r\n        });\r\n    }\r\n    return serverResponse;\r\n}\r\nfunction _getFinalTarget(auth, host, path, query) {\r\n    const base = `${host}${path}?${query}`;\r\n    if (!auth.config.emulator) {\r\n        return `${auth.config.apiScheme}://${base}`;\r\n    }\r\n    return _emulatorUrl(auth.config, base);\r\n}\r\nclass NetworkTimeout {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        // Node timers and browser timers are fundamentally incompatible, but we\r\n        // don't care about the value here\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.timer = null;\r\n        this.promise = new Promise((_, reject) => {\r\n            this.timer = setTimeout(() => {\r\n                return reject(_createError(this.auth, \"timeout\" /* TIMEOUT */));\r\n            }, DEFAULT_API_TIMEOUT_MS.get());\r\n        });\r\n    }\r\n    clearNetworkTimeout() {\r\n        clearTimeout(this.timer);\r\n    }\r\n}\r\nfunction _makeTaggedError(auth, code, response) {\r\n    const errorParams = {\r\n        appName: auth.name\r\n    };\r\n    if (response.email) {\r\n        errorParams.email = response.email;\r\n    }\r\n    if (response.phoneNumber) {\r\n        errorParams.phoneNumber = response.phoneNumber;\r\n    }\r\n    const error = _createError(auth, code, errorParams);\r\n    // We know customData is defined on error because errorParams is defined\r\n    error.customData._tokenResponse = response;\r\n    return error;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function deleteAccount(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:delete\" /* DELETE_ACCOUNT */, request);\r\n}\r\nasync function deleteLinkedAccounts(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:update\" /* SET_ACCOUNT_INFO */, request);\r\n}\r\nasync function getAccountInfo(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:lookup\" /* GET_ACCOUNT_INFO */, request);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction utcTimestampToDateString(utcTimestamp) {\r\n    if (!utcTimestamp) {\r\n        return undefined;\r\n    }\r\n    try {\r\n        // Convert to date object.\r\n        const date = new Date(Number(utcTimestamp));\r\n        // Test date is valid.\r\n        if (!isNaN(date.getTime())) {\r\n            // Convert to UTC date string.\r\n            return date.toUTCString();\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Do nothing. undefined will be returned.\r\n    }\r\n    return undefined;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\r\n *\r\n * @remarks\r\n * Returns the current token if it has not expired or if it will not expire in the next five\r\n * minutes. Otherwise, this will refresh the token and return a new one.\r\n *\r\n * @param user - The user.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\r\nfunction getIdToken(user, forceRefresh = false) {\r\n    return getModularInstance(user).getIdToken(forceRefresh);\r\n}\r\n/**\r\n * Returns a deserialized JSON Web Token (JWT) used to identitfy the user to a Firebase service.\r\n *\r\n * @remarks\r\n * Returns the current token if it has not expired or if it will not expire in the next five\r\n * minutes. Otherwise, this will refresh the token and return a new one.\r\n *\r\n * @param user - The user.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\r\nasync function getIdTokenResult(user, forceRefresh = false) {\r\n    const userInternal = getModularInstance(user);\r\n    const token = await userInternal.getIdToken(forceRefresh);\r\n    const claims = _parseToken(token);\r\n    _assert(claims && claims.exp && claims.auth_time && claims.iat, userInternal.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    const firebase = typeof claims.firebase === 'object' ? claims.firebase : undefined;\r\n    const signInProvider = firebase === null || firebase === void 0 ? void 0 : firebase['sign_in_provider'];\r\n    return {\r\n        claims,\r\n        token,\r\n        authTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.auth_time)),\r\n        issuedAtTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.iat)),\r\n        expirationTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.exp)),\r\n        signInProvider: signInProvider || null,\r\n        signInSecondFactor: (firebase === null || firebase === void 0 ? void 0 : firebase['sign_in_second_factor']) || null\r\n    };\r\n}\r\nfunction secondsStringToMilliseconds(seconds) {\r\n    return Number(seconds) * 1000;\r\n}\r\nfunction _parseToken(token) {\r\n    const [algorithm, payload, signature] = token.split('.');\r\n    if (algorithm === undefined ||\r\n        payload === undefined ||\r\n        signature === undefined) {\r\n        _logError('JWT malformed, contained fewer than 3 sections');\r\n        return null;\r\n    }\r\n    try {\r\n        const decoded = base64Decode(payload);\r\n        if (!decoded) {\r\n            _logError('Failed to decode base64 JWT payload');\r\n            return null;\r\n        }\r\n        return JSON.parse(decoded);\r\n    }\r\n    catch (e) {\r\n        _logError('Caught error parsing JWT payload as JSON', e);\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\r\n */\r\nfunction _tokenExpiresIn(token) {\r\n    const parsedToken = _parseToken(token);\r\n    _assert(parsedToken, \"internal-error\" /* INTERNAL_ERROR */);\r\n    _assert(typeof parsedToken.exp !== 'undefined', \"internal-error\" /* INTERNAL_ERROR */);\r\n    _assert(typeof parsedToken.iat !== 'undefined', \"internal-error\" /* INTERNAL_ERROR */);\r\n    return Number(parsedToken.exp) - Number(parsedToken.iat);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _logoutIfInvalidated(user, promise, bypassAuthState = false) {\r\n    if (bypassAuthState) {\r\n        return promise;\r\n    }\r\n    try {\r\n        return await promise;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError && isUserInvalidated(e)) {\r\n            if (user.auth.currentUser === user) {\r\n                await user.auth.signOut();\r\n            }\r\n        }\r\n        throw e;\r\n    }\r\n}\r\nfunction isUserInvalidated({ code }) {\r\n    return (code === `auth/${\"user-disabled\" /* USER_DISABLED */}` ||\r\n        code === `auth/${\"user-token-expired\" /* TOKEN_EXPIRED */}`);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ProactiveRefresh {\r\n    constructor(user) {\r\n        this.user = user;\r\n        this.isRunning = false;\r\n        // Node timers and browser timers return fundamentally different types.\r\n        // We don't actually care what the value is but TS won't accept unknown and\r\n        // we can't cast properly in both environments.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.timerId = null;\r\n        this.errorBackoff = 30000 /* RETRY_BACKOFF_MIN */;\r\n    }\r\n    _start() {\r\n        if (this.isRunning) {\r\n            return;\r\n        }\r\n        this.isRunning = true;\r\n        this.schedule();\r\n    }\r\n    _stop() {\r\n        if (!this.isRunning) {\r\n            return;\r\n        }\r\n        this.isRunning = false;\r\n        if (this.timerId !== null) {\r\n            clearTimeout(this.timerId);\r\n        }\r\n    }\r\n    getInterval(wasError) {\r\n        var _a;\r\n        if (wasError) {\r\n            const interval = this.errorBackoff;\r\n            this.errorBackoff = Math.min(this.errorBackoff * 2, 960000 /* RETRY_BACKOFF_MAX */);\r\n            return interval;\r\n        }\r\n        else {\r\n            // Reset the error backoff\r\n            this.errorBackoff = 30000 /* RETRY_BACKOFF_MIN */;\r\n            const expTime = (_a = this.user.stsTokenManager.expirationTime) !== null && _a !== void 0 ? _a : 0;\r\n            const interval = expTime - Date.now() - 300000 /* OFFSET */;\r\n            return Math.max(0, interval);\r\n        }\r\n    }\r\n    schedule(wasError = false) {\r\n        if (!this.isRunning) {\r\n            // Just in case...\r\n            return;\r\n        }\r\n        const interval = this.getInterval(wasError);\r\n        this.timerId = setTimeout(async () => {\r\n            await this.iteration();\r\n        }, interval);\r\n    }\r\n    async iteration() {\r\n        try {\r\n            await this.user.getIdToken(true);\r\n        }\r\n        catch (e) {\r\n            // Only retry on network errors\r\n            if (e.code === `auth/${\"network-request-failed\" /* NETWORK_REQUEST_FAILED */}`) {\r\n                this.schedule(/* wasError */ true);\r\n            }\r\n            return;\r\n        }\r\n        this.schedule();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass UserMetadata {\r\n    constructor(createdAt, lastLoginAt) {\r\n        this.createdAt = createdAt;\r\n        this.lastLoginAt = lastLoginAt;\r\n        this._initializeTime();\r\n    }\r\n    _initializeTime() {\r\n        this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\r\n        this.creationTime = utcTimestampToDateString(this.createdAt);\r\n    }\r\n    _copy(metadata) {\r\n        this.createdAt = metadata.createdAt;\r\n        this.lastLoginAt = metadata.lastLoginAt;\r\n        this._initializeTime();\r\n    }\r\n    toJSON() {\r\n        return {\r\n            createdAt: this.createdAt,\r\n            lastLoginAt: this.lastLoginAt\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _reloadWithoutSaving(user) {\r\n    var _a;\r\n    const auth = user.auth;\r\n    const idToken = await user.getIdToken();\r\n    const response = await _logoutIfInvalidated(user, getAccountInfo(auth, { idToken }));\r\n    _assert(response === null || response === void 0 ? void 0 : response.users.length, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    const coreAccount = response.users[0];\r\n    user._notifyReloadListener(coreAccount);\r\n    const newProviderData = ((_a = coreAccount.providerUserInfo) === null || _a === void 0 ? void 0 : _a.length)\r\n        ? extractProviderData(coreAccount.providerUserInfo)\r\n        : [];\r\n    const providerData = mergeProviderData(user.providerData, newProviderData);\r\n    // Preserves the non-nonymous status of the stored user, even if no more\r\n    // credentials (federated or email/password) are linked to the user. If\r\n    // the user was previously anonymous, then use provider data to update.\r\n    // On the other hand, if it was not anonymous before, it should never be\r\n    // considered anonymous now.\r\n    const oldIsAnonymous = user.isAnonymous;\r\n    const newIsAnonymous = !(user.email && coreAccount.passwordHash) && !(providerData === null || providerData === void 0 ? void 0 : providerData.length);\r\n    const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\r\n    const updates = {\r\n        uid: coreAccount.localId,\r\n        displayName: coreAccount.displayName || null,\r\n        photoURL: coreAccount.photoUrl || null,\r\n        email: coreAccount.email || null,\r\n        emailVerified: coreAccount.emailVerified || false,\r\n        phoneNumber: coreAccount.phoneNumber || null,\r\n        tenantId: coreAccount.tenantId || null,\r\n        providerData,\r\n        metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\r\n        isAnonymous\r\n    };\r\n    Object.assign(user, updates);\r\n}\r\n/**\r\n * Reloads user account data, if signed in.\r\n *\r\n * @param user - The user.\r\n *\r\n * @public\r\n */\r\nasync function reload(user) {\r\n    const userInternal = getModularInstance(user);\r\n    await _reloadWithoutSaving(userInternal);\r\n    // Even though the current user hasn't changed, update\r\n    // current user will trigger a persistence update w/ the\r\n    // new info.\r\n    await userInternal.auth._persistUserIfCurrent(userInternal);\r\n    userInternal.auth._notifyListenersIfCurrent(userInternal);\r\n}\r\nfunction mergeProviderData(original, newData) {\r\n    const deduped = original.filter(o => !newData.some(n => n.providerId === o.providerId));\r\n    return [...deduped, ...newData];\r\n}\r\nfunction extractProviderData(providers) {\r\n    return providers.map((_a) => {\r\n        var { providerId } = _a, provider = __rest(_a, [\"providerId\"]);\r\n        return {\r\n            providerId,\r\n            uid: provider.rawId || '',\r\n            displayName: provider.displayName || null,\r\n            email: provider.email || null,\r\n            phoneNumber: provider.phoneNumber || null,\r\n            photoURL: provider.photoUrl || null\r\n        };\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function requestStsToken(auth, refreshToken) {\r\n    const response = await _performFetchWithErrorHandling(auth, {}, () => {\r\n        const body = querystring({\r\n            'grant_type': 'refresh_token',\r\n            'refresh_token': refreshToken\r\n        }).slice(1);\r\n        const { tokenApiHost, apiKey } = auth.config;\r\n        const url = _getFinalTarget(auth, tokenApiHost, \"/v1/token\" /* TOKEN */, `key=${apiKey}`);\r\n        return FetchProvider.fetch()(url, {\r\n            method: \"POST\" /* POST */,\r\n            headers: {\r\n                'X-Client-Version': auth._getSdkClientVersion(),\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body\r\n        });\r\n    });\r\n    // The response comes back in snake_case. Convert to camel:\r\n    return {\r\n        accessToken: response.access_token,\r\n        expiresIn: response.expires_in,\r\n        refreshToken: response.refresh_token\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\r\n * it references AuthInternal which has a circular dependency with UserInternal.\r\n *\r\n * @internal\r\n */\r\nclass StsTokenManager {\r\n    constructor() {\r\n        this.refreshToken = null;\r\n        this.accessToken = null;\r\n        this.expirationTime = null;\r\n    }\r\n    get isExpired() {\r\n        return (!this.expirationTime ||\r\n            Date.now() > this.expirationTime - 30000 /* TOKEN_REFRESH */);\r\n    }\r\n    updateFromServerResponse(response) {\r\n        _assert(response.idToken, \"internal-error\" /* INTERNAL_ERROR */);\r\n        _assert(typeof response.idToken !== 'undefined', \"internal-error\" /* INTERNAL_ERROR */);\r\n        _assert(typeof response.refreshToken !== 'undefined', \"internal-error\" /* INTERNAL_ERROR */);\r\n        const expiresIn = 'expiresIn' in response && typeof response.expiresIn !== 'undefined'\r\n            ? Number(response.expiresIn)\r\n            : _tokenExpiresIn(response.idToken);\r\n        this.updateTokensAndExpiration(response.idToken, response.refreshToken, expiresIn);\r\n    }\r\n    async getToken(auth, forceRefresh = false) {\r\n        _assert(!this.accessToken || this.refreshToken, auth, \"user-token-expired\" /* TOKEN_EXPIRED */);\r\n        if (!forceRefresh && this.accessToken && !this.isExpired) {\r\n            return this.accessToken;\r\n        }\r\n        if (this.refreshToken) {\r\n            await this.refresh(auth, this.refreshToken);\r\n            return this.accessToken;\r\n        }\r\n        return null;\r\n    }\r\n    clearRefreshToken() {\r\n        this.refreshToken = null;\r\n    }\r\n    async refresh(auth, oldToken) {\r\n        const { accessToken, refreshToken, expiresIn } = await requestStsToken(auth, oldToken);\r\n        this.updateTokensAndExpiration(accessToken, refreshToken, Number(expiresIn));\r\n    }\r\n    updateTokensAndExpiration(accessToken, refreshToken, expiresInSec) {\r\n        this.refreshToken = refreshToken || null;\r\n        this.accessToken = accessToken || null;\r\n        this.expirationTime = Date.now() + expiresInSec * 1000;\r\n    }\r\n    static fromJSON(appName, object) {\r\n        const { refreshToken, accessToken, expirationTime } = object;\r\n        const manager = new StsTokenManager();\r\n        if (refreshToken) {\r\n            _assert(typeof refreshToken === 'string', \"internal-error\" /* INTERNAL_ERROR */, {\r\n                appName\r\n            });\r\n            manager.refreshToken = refreshToken;\r\n        }\r\n        if (accessToken) {\r\n            _assert(typeof accessToken === 'string', \"internal-error\" /* INTERNAL_ERROR */, {\r\n                appName\r\n            });\r\n            manager.accessToken = accessToken;\r\n        }\r\n        if (expirationTime) {\r\n            _assert(typeof expirationTime === 'number', \"internal-error\" /* INTERNAL_ERROR */, {\r\n                appName\r\n            });\r\n            manager.expirationTime = expirationTime;\r\n        }\r\n        return manager;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            refreshToken: this.refreshToken,\r\n            accessToken: this.accessToken,\r\n            expirationTime: this.expirationTime\r\n        };\r\n    }\r\n    _assign(stsTokenManager) {\r\n        this.accessToken = stsTokenManager.accessToken;\r\n        this.refreshToken = stsTokenManager.refreshToken;\r\n        this.expirationTime = stsTokenManager.expirationTime;\r\n    }\r\n    _clone() {\r\n        return Object.assign(new StsTokenManager(), this.toJSON());\r\n    }\r\n    _performRefresh() {\r\n        return debugFail('not implemented');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction assertStringOrUndefined(assertion, appName) {\r\n    _assert(typeof assertion === 'string' || typeof assertion === 'undefined', \"internal-error\" /* INTERNAL_ERROR */, { appName });\r\n}\r\nclass UserImpl {\r\n    constructor(_a) {\r\n        var { uid, auth, stsTokenManager } = _a, opt = __rest(_a, [\"uid\", \"auth\", \"stsTokenManager\"]);\r\n        // For the user object, provider is always Firebase.\r\n        this.providerId = \"firebase\" /* FIREBASE */;\r\n        this.emailVerified = false;\r\n        this.isAnonymous = false;\r\n        this.tenantId = null;\r\n        this.providerData = [];\r\n        this.proactiveRefresh = new ProactiveRefresh(this);\r\n        this.reloadUserInfo = null;\r\n        this.reloadListener = null;\r\n        this.uid = uid;\r\n        this.auth = auth;\r\n        this.stsTokenManager = stsTokenManager;\r\n        this.accessToken = stsTokenManager.accessToken;\r\n        this.displayName = opt.displayName || null;\r\n        this.email = opt.email || null;\r\n        this.phoneNumber = opt.phoneNumber || null;\r\n        this.photoURL = opt.photoURL || null;\r\n        this.isAnonymous = opt.isAnonymous || false;\r\n        this.metadata = new UserMetadata(opt.createdAt || undefined, opt.lastLoginAt || undefined);\r\n    }\r\n    async getIdToken(forceRefresh) {\r\n        const accessToken = await _logoutIfInvalidated(this, this.stsTokenManager.getToken(this.auth, forceRefresh));\r\n        _assert(accessToken, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        if (this.accessToken !== accessToken) {\r\n            this.accessToken = accessToken;\r\n            await this.auth._persistUserIfCurrent(this);\r\n            this.auth._notifyListenersIfCurrent(this);\r\n        }\r\n        return accessToken;\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return getIdTokenResult(this, forceRefresh);\r\n    }\r\n    reload() {\r\n        return reload(this);\r\n    }\r\n    _assign(user) {\r\n        if (this === user) {\r\n            return;\r\n        }\r\n        _assert(this.uid === user.uid, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        this.displayName = user.displayName;\r\n        this.photoURL = user.photoURL;\r\n        this.email = user.email;\r\n        this.emailVerified = user.emailVerified;\r\n        this.phoneNumber = user.phoneNumber;\r\n        this.isAnonymous = user.isAnonymous;\r\n        this.tenantId = user.tenantId;\r\n        this.providerData = user.providerData.map(userInfo => (Object.assign({}, userInfo)));\r\n        this.metadata._copy(user.metadata);\r\n        this.stsTokenManager._assign(user.stsTokenManager);\r\n    }\r\n    _clone(auth) {\r\n        return new UserImpl(Object.assign(Object.assign({}, this), { auth, stsTokenManager: this.stsTokenManager._clone() }));\r\n    }\r\n    _onReload(callback) {\r\n        // There should only ever be one listener, and that is a single instance of MultiFactorUser\r\n        _assert(!this.reloadListener, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        this.reloadListener = callback;\r\n        if (this.reloadUserInfo) {\r\n            this._notifyReloadListener(this.reloadUserInfo);\r\n            this.reloadUserInfo = null;\r\n        }\r\n    }\r\n    _notifyReloadListener(userInfo) {\r\n        if (this.reloadListener) {\r\n            this.reloadListener(userInfo);\r\n        }\r\n        else {\r\n            // If no listener is subscribed yet, save the result so it's available when they do subscribe\r\n            this.reloadUserInfo = userInfo;\r\n        }\r\n    }\r\n    _startProactiveRefresh() {\r\n        this.proactiveRefresh._start();\r\n    }\r\n    _stopProactiveRefresh() {\r\n        this.proactiveRefresh._stop();\r\n    }\r\n    async _updateTokensIfNecessary(response, reload = false) {\r\n        let tokensRefreshed = false;\r\n        if (response.idToken &&\r\n            response.idToken !== this.stsTokenManager.accessToken) {\r\n            this.stsTokenManager.updateFromServerResponse(response);\r\n            tokensRefreshed = true;\r\n        }\r\n        if (reload) {\r\n            await _reloadWithoutSaving(this);\r\n        }\r\n        await this.auth._persistUserIfCurrent(this);\r\n        if (tokensRefreshed) {\r\n            this.auth._notifyListenersIfCurrent(this);\r\n        }\r\n    }\r\n    async delete() {\r\n        const idToken = await this.getIdToken();\r\n        await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\r\n        this.stsTokenManager.clearRefreshToken();\r\n        // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\r\n        //       cancels pending actions...\r\n        return this.auth.signOut();\r\n    }\r\n    toJSON() {\r\n        return Object.assign(Object.assign({ uid: this.uid, email: this.email || undefined, emailVerified: this.emailVerified, displayName: this.displayName || undefined, isAnonymous: this.isAnonymous, photoURL: this.photoURL || undefined, phoneNumber: this.phoneNumber || undefined, tenantId: this.tenantId || undefined, providerData: this.providerData.map(userInfo => (Object.assign({}, userInfo))), stsTokenManager: this.stsTokenManager.toJSON(), \r\n            // Redirect event ID must be maintained in case there is a pending\r\n            // redirect event.\r\n            _redirectEventId: this._redirectEventId }, this.metadata.toJSON()), { \r\n            // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\r\n            apiKey: this.auth.config.apiKey, appName: this.auth.name });\r\n    }\r\n    get refreshToken() {\r\n        return this.stsTokenManager.refreshToken || '';\r\n    }\r\n    static _fromJSON(auth, object) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h;\r\n        const displayName = (_a = object.displayName) !== null && _a !== void 0 ? _a : undefined;\r\n        const email = (_b = object.email) !== null && _b !== void 0 ? _b : undefined;\r\n        const phoneNumber = (_c = object.phoneNumber) !== null && _c !== void 0 ? _c : undefined;\r\n        const photoURL = (_d = object.photoURL) !== null && _d !== void 0 ? _d : undefined;\r\n        const tenantId = (_e = object.tenantId) !== null && _e !== void 0 ? _e : undefined;\r\n        const _redirectEventId = (_f = object._redirectEventId) !== null && _f !== void 0 ? _f : undefined;\r\n        const createdAt = (_g = object.createdAt) !== null && _g !== void 0 ? _g : undefined;\r\n        const lastLoginAt = (_h = object.lastLoginAt) !== null && _h !== void 0 ? _h : undefined;\r\n        const { uid, emailVerified, isAnonymous, providerData, stsTokenManager: plainObjectTokenManager } = object;\r\n        _assert(uid && plainObjectTokenManager, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        const stsTokenManager = StsTokenManager.fromJSON(this.name, plainObjectTokenManager);\r\n        _assert(typeof uid === 'string', auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        assertStringOrUndefined(displayName, auth.name);\r\n        assertStringOrUndefined(email, auth.name);\r\n        _assert(typeof emailVerified === 'boolean', auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        _assert(typeof isAnonymous === 'boolean', auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        assertStringOrUndefined(phoneNumber, auth.name);\r\n        assertStringOrUndefined(photoURL, auth.name);\r\n        assertStringOrUndefined(tenantId, auth.name);\r\n        assertStringOrUndefined(_redirectEventId, auth.name);\r\n        assertStringOrUndefined(createdAt, auth.name);\r\n        assertStringOrUndefined(lastLoginAt, auth.name);\r\n        const user = new UserImpl({\r\n            uid,\r\n            auth,\r\n            email,\r\n            emailVerified,\r\n            displayName,\r\n            isAnonymous,\r\n            photoURL,\r\n            phoneNumber,\r\n            tenantId,\r\n            stsTokenManager,\r\n            createdAt,\r\n            lastLoginAt\r\n        });\r\n        if (providerData && Array.isArray(providerData)) {\r\n            user.providerData = providerData.map(userInfo => (Object.assign({}, userInfo)));\r\n        }\r\n        if (_redirectEventId) {\r\n            user._redirectEventId = _redirectEventId;\r\n        }\r\n        return user;\r\n    }\r\n    /**\r\n     * Initialize a User from an idToken server response\r\n     * @param auth\r\n     * @param idTokenResponse\r\n     */\r\n    static async _fromIdTokenResponse(auth, idTokenResponse, isAnonymous = false) {\r\n        const stsTokenManager = new StsTokenManager();\r\n        stsTokenManager.updateFromServerResponse(idTokenResponse);\r\n        // Initialize the Firebase Auth user.\r\n        const user = new UserImpl({\r\n            uid: idTokenResponse.localId,\r\n            auth,\r\n            stsTokenManager,\r\n            isAnonymous\r\n        });\r\n        // Updates the user info and data and resolves with a user instance.\r\n        await _reloadWithoutSaving(user);\r\n        return user;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass InMemoryPersistence {\r\n    constructor() {\r\n        this.type = \"NONE\" /* NONE */;\r\n        this.storage = {};\r\n    }\r\n    async _isAvailable() {\r\n        return true;\r\n    }\r\n    async _set(key, value) {\r\n        this.storage[key] = value;\r\n    }\r\n    async _get(key) {\r\n        const value = this.storage[key];\r\n        return value === undefined ? null : value;\r\n    }\r\n    async _remove(key) {\r\n        delete this.storage[key];\r\n    }\r\n    _addListener(_key, _listener) {\r\n        // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\r\n        return;\r\n    }\r\n    _removeListener(_key, _listener) {\r\n        // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\r\n        return;\r\n    }\r\n}\r\nInMemoryPersistence.type = 'NONE';\r\n/**\r\n * An implementation of {@link Persistence} of type 'NONE'.\r\n *\r\n * @public\r\n */\r\nconst inMemoryPersistence = InMemoryPersistence;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _persistenceKeyName(key, apiKey, appName) {\r\n    return `${\"firebase\" /* PERSISTENCE */}:${key}:${apiKey}:${appName}`;\r\n}\r\nclass PersistenceUserManager {\r\n    constructor(persistence, auth, userKey) {\r\n        this.persistence = persistence;\r\n        this.auth = auth;\r\n        this.userKey = userKey;\r\n        const { config, name } = this.auth;\r\n        this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\r\n        this.fullPersistenceKey = _persistenceKeyName(\"persistence\" /* PERSISTENCE_USER */, config.apiKey, name);\r\n        this.boundEventHandler = auth._onStorageEvent.bind(auth);\r\n        this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\r\n    }\r\n    setCurrentUser(user) {\r\n        return this.persistence._set(this.fullUserKey, user.toJSON());\r\n    }\r\n    async getCurrentUser() {\r\n        const blob = await this.persistence._get(this.fullUserKey);\r\n        return blob ? UserImpl._fromJSON(this.auth, blob) : null;\r\n    }\r\n    removeCurrentUser() {\r\n        return this.persistence._remove(this.fullUserKey);\r\n    }\r\n    savePersistenceForRedirect() {\r\n        return this.persistence._set(this.fullPersistenceKey, this.persistence.type);\r\n    }\r\n    async setPersistence(newPersistence) {\r\n        if (this.persistence === newPersistence) {\r\n            return;\r\n        }\r\n        const currentUser = await this.getCurrentUser();\r\n        await this.removeCurrentUser();\r\n        this.persistence = newPersistence;\r\n        if (currentUser) {\r\n            return this.setCurrentUser(currentUser);\r\n        }\r\n    }\r\n    delete() {\r\n        this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\r\n    }\r\n    static async create(auth, persistenceHierarchy, userKey = \"authUser\" /* AUTH_USER */) {\r\n        if (!persistenceHierarchy.length) {\r\n            return new PersistenceUserManager(_getInstance(inMemoryPersistence), auth, userKey);\r\n        }\r\n        // Use the first persistence that supports a full read-write roundtrip (or fallback to memory).\r\n        let chosenPersistence = _getInstance(inMemoryPersistence);\r\n        for (const persistence of persistenceHierarchy) {\r\n            if (await persistence._isAvailable()) {\r\n                chosenPersistence = persistence;\r\n                break;\r\n            }\r\n        }\r\n        // However, attempt to migrate users stored in other persistences (in the hierarchy order).\r\n        let userToMigrate = null;\r\n        const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\r\n        for (const persistence of persistenceHierarchy) {\r\n            // We attempt to call _get without checking _isAvailable since here we don't care if the full\r\n            // round-trip (read+write) is supported. We'll take the first one that we can read or give up.\r\n            try {\r\n                const blob = await persistence._get(key); // throws if unsupported\r\n                if (blob) {\r\n                    const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\r\n                    if (persistence !== chosenPersistence) {\r\n                        userToMigrate = user;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            catch (_a) { }\r\n        }\r\n        if (userToMigrate) {\r\n            // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\r\n            // we'll just let it bubble to surface the error.\r\n            await chosenPersistence._set(key, userToMigrate.toJSON());\r\n        }\r\n        // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\r\n        // such as users getting stuck with a previous account after signing out and refreshing the tab.\r\n        await Promise.all(persistenceHierarchy.map(async (persistence) => {\r\n            if (persistence !== chosenPersistence) {\r\n                try {\r\n                    await persistence._remove(key);\r\n                }\r\n                catch (_a) { }\r\n            }\r\n        }));\r\n        return new PersistenceUserManager(chosenPersistence, auth, userKey);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Determine the browser for the purposes of reporting usage to the API\r\n */\r\nfunction _getBrowserName(userAgent) {\r\n    const ua = userAgent.toLowerCase();\r\n    if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\r\n        return \"Opera\" /* OPERA */;\r\n    }\r\n    else if (_isIEMobile(ua)) {\r\n        // Windows phone IEMobile browser.\r\n        return \"IEMobile\" /* IEMOBILE */;\r\n    }\r\n    else if (ua.includes('msie') || ua.includes('trident/')) {\r\n        return \"IE\" /* IE */;\r\n    }\r\n    else if (ua.includes('edge/')) {\r\n        return \"Edge\" /* EDGE */;\r\n    }\r\n    else if (_isFirefox(ua)) {\r\n        return \"Firefox\" /* FIREFOX */;\r\n    }\r\n    else if (ua.includes('silk/')) {\r\n        return \"Silk\" /* SILK */;\r\n    }\r\n    else if (_isBlackBerry(ua)) {\r\n        // Blackberry browser.\r\n        return \"Blackberry\" /* BLACKBERRY */;\r\n    }\r\n    else if (_isWebOS(ua)) {\r\n        // WebOS default browser.\r\n        return \"Webos\" /* WEBOS */;\r\n    }\r\n    else if (_isSafari(ua)) {\r\n        return \"Safari\" /* SAFARI */;\r\n    }\r\n    else if ((ua.includes('chrome/') || _isChromeIOS(ua)) &&\r\n        !ua.includes('edge/')) {\r\n        return \"Chrome\" /* CHROME */;\r\n    }\r\n    else if (_isAndroid(ua)) {\r\n        // Android stock browser.\r\n        return \"Android\" /* ANDROID */;\r\n    }\r\n    else {\r\n        // Most modern browsers have name/version at end of user agent string.\r\n        const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\r\n        const matches = userAgent.match(re);\r\n        if ((matches === null || matches === void 0 ? void 0 : matches.length) === 2) {\r\n            return matches[1];\r\n        }\r\n    }\r\n    return \"Other\" /* OTHER */;\r\n}\r\nfunction _isFirefox(ua = getUA()) {\r\n    return /firefox\\//i.test(ua);\r\n}\r\nfunction _isSafari(userAgent = getUA()) {\r\n    const ua = userAgent.toLowerCase();\r\n    return (ua.includes('safari/') &&\r\n        !ua.includes('chrome/') &&\r\n        !ua.includes('crios/') &&\r\n        !ua.includes('android'));\r\n}\r\nfunction _isChromeIOS(ua = getUA()) {\r\n    return /crios\\//i.test(ua);\r\n}\r\nfunction _isIEMobile(ua = getUA()) {\r\n    return /iemobile/i.test(ua);\r\n}\r\nfunction _isAndroid(ua = getUA()) {\r\n    return /android/i.test(ua);\r\n}\r\nfunction _isBlackBerry(ua = getUA()) {\r\n    return /blackberry/i.test(ua);\r\n}\r\nfunction _isWebOS(ua = getUA()) {\r\n    return /webos/i.test(ua);\r\n}\r\nfunction _isIOS(ua = getUA()) {\r\n    return /iphone|ipad|ipod/i.test(ua);\r\n}\r\nfunction _isIOSStandalone(ua = getUA()) {\r\n    var _a;\r\n    return _isIOS(ua) && !!((_a = window.navigator) === null || _a === void 0 ? void 0 : _a.standalone);\r\n}\r\nfunction _isIE10() {\r\n    return isIE() && document.documentMode === 10;\r\n}\r\nfunction _isMobileBrowser(ua = getUA()) {\r\n    // TODO: implement getBrowserName equivalent for OS.\r\n    return (_isIOS(ua) ||\r\n        _isAndroid(ua) ||\r\n        _isWebOS(ua) ||\r\n        _isBlackBerry(ua) ||\r\n        /windows phone/i.test(ua) ||\r\n        _isIEMobile(ua));\r\n}\r\nfunction _isIframe() {\r\n    try {\r\n        // Check that the current window is not the top window.\r\n        // If so, return true.\r\n        return !!(window && window !== window.top);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/*\r\n * Determine the SDK version string\r\n */\r\nfunction _getClientVersion(clientPlatform, frameworks = []) {\r\n    let reportedPlatform;\r\n    switch (clientPlatform) {\r\n        case \"Browser\" /* BROWSER */:\r\n            // In a browser environment, report the browser name.\r\n            reportedPlatform = _getBrowserName(getUA());\r\n            break;\r\n        case \"Worker\" /* WORKER */:\r\n            // Technically a worker runs from a browser but we need to differentiate a\r\n            // worker from a browser.\r\n            // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\r\n            reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\r\n            break;\r\n        default:\r\n            reportedPlatform = clientPlatform;\r\n    }\r\n    const reportedFrameworks = frameworks.length\r\n        ? frameworks.join(',')\r\n        : 'FirebaseCore-web'; /* default value if no other framework is used */\r\n    return `${reportedPlatform}/${\"JsCore\" /* CORE */}/${SDK_VERSION}/${reportedFrameworks}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AuthImpl {\r\n    constructor(app, config) {\r\n        this.app = app;\r\n        this.config = config;\r\n        this.currentUser = null;\r\n        this.emulatorConfig = null;\r\n        this.operations = Promise.resolve();\r\n        this.authStateSubscription = new Subscription(this);\r\n        this.idTokenSubscription = new Subscription(this);\r\n        this.redirectUser = null;\r\n        this.isProactiveRefreshEnabled = false;\r\n        this.redirectInitializerError = null;\r\n        // Any network calls will set this to true and prevent subsequent emulator\r\n        // initialization\r\n        this._canInitEmulator = true;\r\n        this._isInitialized = false;\r\n        this._deleted = false;\r\n        this._initializationPromise = null;\r\n        this._popupRedirectResolver = null;\r\n        this._errorFactory = _DEFAULT_AUTH_ERROR_FACTORY;\r\n        // Tracks the last notified UID for state change listeners to prevent\r\n        // repeated calls to the callbacks. Undefined means it's never been\r\n        // called, whereas null means it's been called with a signed out user\r\n        this.lastNotifiedUid = undefined;\r\n        this.languageCode = null;\r\n        this.tenantId = null;\r\n        this.settings = { appVerificationDisabledForTesting: false };\r\n        this.frameworks = [];\r\n        this.name = app.name;\r\n        this.clientVersion = config.sdkClientVersion;\r\n    }\r\n    _initializeWithPersistence(persistenceHierarchy, popupRedirectResolver) {\r\n        if (popupRedirectResolver) {\r\n            this._popupRedirectResolver = _getInstance(popupRedirectResolver);\r\n        }\r\n        // Have to check for app deletion throughout initialization (after each\r\n        // promise resolution)\r\n        this._initializationPromise = this.queue(async () => {\r\n            var _a;\r\n            if (this._deleted) {\r\n                return;\r\n            }\r\n            this.persistenceManager = await PersistenceUserManager.create(this, persistenceHierarchy);\r\n            if (this._deleted) {\r\n                return;\r\n            }\r\n            // Initialize the resolver early if necessary (only applicable to web:\r\n            // this will cause the iframe to load immediately in certain cases)\r\n            if ((_a = this._popupRedirectResolver) === null || _a === void 0 ? void 0 : _a._shouldInitProactively) {\r\n                await this._popupRedirectResolver._initialize(this);\r\n            }\r\n            await this.initializeCurrentUser(popupRedirectResolver);\r\n            if (this._deleted) {\r\n                return;\r\n            }\r\n            this._isInitialized = true;\r\n        });\r\n        // After initialization completes, throw any error caused by redirect flow\r\n        return this._initializationPromise.then(() => {\r\n            if (this.redirectInitializerError) {\r\n                throw this.redirectInitializerError;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * If the persistence is changed in another window, the user manager will let us know\r\n     */\r\n    async _onStorageEvent() {\r\n        if (this._deleted) {\r\n            return;\r\n        }\r\n        const user = await this.assertedPersistence.getCurrentUser();\r\n        if (!this.currentUser && !user) {\r\n            // No change, do nothing (was signed out and remained signed out).\r\n            return;\r\n        }\r\n        // If the same user is to be synchronized.\r\n        if (this.currentUser && user && this.currentUser.uid === user.uid) {\r\n            // Data update, simply copy data changes.\r\n            this._currentUser._assign(user);\r\n            // If tokens changed from previous user tokens, this will trigger\r\n            // notifyAuthListeners_.\r\n            await this.currentUser.getIdToken();\r\n            return;\r\n        }\r\n        // Update current Auth state. Either a new login or logout.\r\n        await this._updateCurrentUser(user);\r\n    }\r\n    async initializeCurrentUser(popupRedirectResolver) {\r\n        var _a;\r\n        // First check to see if we have a pending redirect event.\r\n        let storedUser = (await this.assertedPersistence.getCurrentUser());\r\n        if (popupRedirectResolver && this.config.authDomain) {\r\n            await this.getOrInitRedirectPersistenceManager();\r\n            const redirectUserEventId = (_a = this.redirectUser) === null || _a === void 0 ? void 0 : _a._redirectEventId;\r\n            const storedUserEventId = storedUser === null || storedUser === void 0 ? void 0 : storedUser._redirectEventId;\r\n            const result = await this.tryRedirectSignIn(popupRedirectResolver);\r\n            // If the stored user (i.e. the old \"currentUser\") has a redirectId that\r\n            // matches the redirect user, then we want to initially sign in with the\r\n            // new user object from result.\r\n            // TODO(samgho): More thoroughly test all of this\r\n            if ((!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\r\n                (result === null || result === void 0 ? void 0 : result.user)) {\r\n                storedUser = result.user;\r\n            }\r\n        }\r\n        // If no user in persistence, there is no current user. Set to null.\r\n        if (!storedUser) {\r\n            return this.directlySetCurrentUser(null);\r\n        }\r\n        if (!storedUser._redirectEventId) {\r\n            // This isn't a redirect user, we can reload and bail\r\n            // This will also catch the redirected user, if available, as that method\r\n            // strips the _redirectEventId\r\n            return this.reloadAndSetCurrentUserOrClear(storedUser);\r\n        }\r\n        _assert(this._popupRedirectResolver, this, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        await this.getOrInitRedirectPersistenceManager();\r\n        // If the redirect user's event ID matches the current user's event ID,\r\n        // DO NOT reload the current user, otherwise they'll be cleared from storage.\r\n        // This is important for the reauthenticateWithRedirect() flow.\r\n        if (this.redirectUser &&\r\n            this.redirectUser._redirectEventId === storedUser._redirectEventId) {\r\n            return this.directlySetCurrentUser(storedUser);\r\n        }\r\n        return this.reloadAndSetCurrentUserOrClear(storedUser);\r\n    }\r\n    async tryRedirectSignIn(redirectResolver) {\r\n        // The redirect user needs to be checked (and signed in if available)\r\n        // during auth initialization. All of the normal sign in and link/reauth\r\n        // flows call back into auth and push things onto the promise queue. We\r\n        // need to await the result of the redirect sign in *inside the promise\r\n        // queue*. This presents a problem: we run into deadlock. See:\r\n        //    ┌> [Initialization] ─────┐\r\n        //    ┌> [<other queue tasks>] │\r\n        //    └─ [getRedirectResult] <─┘\r\n        //    where [] are tasks on the queue and arrows denote awaits\r\n        // Initialization will never complete because it's waiting on something\r\n        // that's waiting for initialization to complete!\r\n        //\r\n        // Instead, this method calls getRedirectResult() (stored in\r\n        // _completeRedirectFn) with an optional parameter that instructs all of\r\n        // the underlying auth operations to skip anything that mutates auth state.\r\n        let result = null;\r\n        try {\r\n            // We know this._popupRedirectResolver is set since redirectResolver\r\n            // is passed in. The _completeRedirectFn expects the unwrapped extern.\r\n            result = await this._popupRedirectResolver._completeRedirectFn(this, redirectResolver, true);\r\n        }\r\n        catch (e) {\r\n            this.redirectInitializerError = e;\r\n            await this._setRedirectUser(null);\r\n        }\r\n        return result;\r\n    }\r\n    async reloadAndSetCurrentUserOrClear(user) {\r\n        try {\r\n            await _reloadWithoutSaving(user);\r\n        }\r\n        catch (e) {\r\n            if (e.code !== `auth/${\"network-request-failed\" /* NETWORK_REQUEST_FAILED */}`) {\r\n                // Something's wrong with the user's token. Log them out and remove\r\n                // them from storage\r\n                return this.directlySetCurrentUser(null);\r\n            }\r\n        }\r\n        return this.directlySetCurrentUser(user);\r\n    }\r\n    useDeviceLanguage() {\r\n        this.languageCode = _getUserLanguage();\r\n    }\r\n    async _delete() {\r\n        this._deleted = true;\r\n    }\r\n    async updateCurrentUser(userExtern) {\r\n        // The public updateCurrentUser method needs to make a copy of the user,\r\n        // and also check that the project matches\r\n        const user = userExtern\r\n            ? getModularInstance(userExtern)\r\n            : null;\r\n        if (user) {\r\n            _assert(user.auth.config.apiKey === this.config.apiKey, this, \"invalid-user-token\" /* INVALID_AUTH */);\r\n        }\r\n        return this._updateCurrentUser(user && user._clone(this));\r\n    }\r\n    async _updateCurrentUser(user) {\r\n        if (this._deleted) {\r\n            return;\r\n        }\r\n        if (user) {\r\n            _assert(this.tenantId === user.tenantId, this, \"tenant-id-mismatch\" /* TENANT_ID_MISMATCH */);\r\n        }\r\n        return this.queue(async () => {\r\n            await this.directlySetCurrentUser(user);\r\n            this.notifyAuthListeners();\r\n        });\r\n    }\r\n    async signOut() {\r\n        // Clear the redirect user when signOut is called\r\n        if (this.redirectPersistenceManager || this._popupRedirectResolver) {\r\n            await this._setRedirectUser(null);\r\n        }\r\n        return this._updateCurrentUser(null);\r\n    }\r\n    setPersistence(persistence) {\r\n        return this.queue(async () => {\r\n            await this.assertedPersistence.setPersistence(_getInstance(persistence));\r\n        });\r\n    }\r\n    _getPersistence() {\r\n        return this.assertedPersistence.persistence.type;\r\n    }\r\n    _updateErrorMap(errorMap) {\r\n        this._errorFactory = new ErrorFactory('auth', 'Firebase', errorMap());\r\n    }\r\n    onAuthStateChanged(nextOrObserver, error, completed) {\r\n        return this.registerStateListener(this.authStateSubscription, nextOrObserver, error, completed);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, error, completed) {\r\n        return this.registerStateListener(this.idTokenSubscription, nextOrObserver, error, completed);\r\n    }\r\n    toJSON() {\r\n        var _a;\r\n        return {\r\n            apiKey: this.config.apiKey,\r\n            authDomain: this.config.authDomain,\r\n            appName: this.name,\r\n            currentUser: (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.toJSON()\r\n        };\r\n    }\r\n    async _setRedirectUser(user, popupRedirectResolver) {\r\n        const redirectManager = await this.getOrInitRedirectPersistenceManager(popupRedirectResolver);\r\n        return user === null\r\n            ? redirectManager.removeCurrentUser()\r\n            : redirectManager.setCurrentUser(user);\r\n    }\r\n    async getOrInitRedirectPersistenceManager(popupRedirectResolver) {\r\n        if (!this.redirectPersistenceManager) {\r\n            const resolver = (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\r\n                this._popupRedirectResolver;\r\n            _assert(resolver, this, \"argument-error\" /* ARGUMENT_ERROR */);\r\n            this.redirectPersistenceManager = await PersistenceUserManager.create(this, [_getInstance(resolver._redirectPersistence)], \"redirectUser\" /* REDIRECT_USER */);\r\n            this.redirectUser = await this.redirectPersistenceManager.getCurrentUser();\r\n        }\r\n        return this.redirectPersistenceManager;\r\n    }\r\n    async _redirectUserForId(id) {\r\n        var _a, _b;\r\n        // Make sure we've cleared any pending persistence actions if we're not in\r\n        // the initializer\r\n        if (this._isInitialized) {\r\n            await this.queue(async () => { });\r\n        }\r\n        if (((_a = this._currentUser) === null || _a === void 0 ? void 0 : _a._redirectEventId) === id) {\r\n            return this._currentUser;\r\n        }\r\n        if (((_b = this.redirectUser) === null || _b === void 0 ? void 0 : _b._redirectEventId) === id) {\r\n            return this.redirectUser;\r\n        }\r\n        return null;\r\n    }\r\n    async _persistUserIfCurrent(user) {\r\n        if (user === this.currentUser) {\r\n            return this.queue(async () => this.directlySetCurrentUser(user));\r\n        }\r\n    }\r\n    /** Notifies listeners only if the user is current */\r\n    _notifyListenersIfCurrent(user) {\r\n        if (user === this.currentUser) {\r\n            this.notifyAuthListeners();\r\n        }\r\n    }\r\n    _key() {\r\n        return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\r\n    }\r\n    _startProactiveRefresh() {\r\n        this.isProactiveRefreshEnabled = true;\r\n        if (this.currentUser) {\r\n            this._currentUser._startProactiveRefresh();\r\n        }\r\n    }\r\n    _stopProactiveRefresh() {\r\n        this.isProactiveRefreshEnabled = false;\r\n        if (this.currentUser) {\r\n            this._currentUser._stopProactiveRefresh();\r\n        }\r\n    }\r\n    /** Returns the current user cast as the internal type */\r\n    get _currentUser() {\r\n        return this.currentUser;\r\n    }\r\n    notifyAuthListeners() {\r\n        var _a, _b;\r\n        if (!this._isInitialized) {\r\n            return;\r\n        }\r\n        this.idTokenSubscription.next(this.currentUser);\r\n        const currentUid = (_b = (_a = this.currentUser) === null || _a === void 0 ? void 0 : _a.uid) !== null && _b !== void 0 ? _b : null;\r\n        if (this.lastNotifiedUid !== currentUid) {\r\n            this.lastNotifiedUid = currentUid;\r\n            this.authStateSubscription.next(this.currentUser);\r\n        }\r\n    }\r\n    registerStateListener(subscription, nextOrObserver, error, completed) {\r\n        if (this._deleted) {\r\n            return () => { };\r\n        }\r\n        const cb = typeof nextOrObserver === 'function'\r\n            ? nextOrObserver\r\n            : nextOrObserver.next;\r\n        const promise = this._isInitialized\r\n            ? Promise.resolve()\r\n            : this._initializationPromise;\r\n        _assert(promise, this, \"internal-error\" /* INTERNAL_ERROR */);\r\n        // The callback needs to be called asynchronously per the spec.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        promise.then(() => cb(this.currentUser));\r\n        if (typeof nextOrObserver === 'function') {\r\n            return subscription.addObserver(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return subscription.addObserver(nextOrObserver);\r\n        }\r\n    }\r\n    /**\r\n     * Unprotected (from race conditions) method to set the current user. This\r\n     * should only be called from within a queued callback. This is necessary\r\n     * because the queue shouldn't rely on another queued callback.\r\n     */\r\n    async directlySetCurrentUser(user) {\r\n        if (this.currentUser && this.currentUser !== user) {\r\n            this._currentUser._stopProactiveRefresh();\r\n            if (user && this.isProactiveRefreshEnabled) {\r\n                user._startProactiveRefresh();\r\n            }\r\n        }\r\n        this.currentUser = user;\r\n        if (user) {\r\n            await this.assertedPersistence.setCurrentUser(user);\r\n        }\r\n        else {\r\n            await this.assertedPersistence.removeCurrentUser();\r\n        }\r\n    }\r\n    queue(action) {\r\n        // In case something errors, the callback still should be called in order\r\n        // to keep the promise chain alive\r\n        this.operations = this.operations.then(action, action);\r\n        return this.operations;\r\n    }\r\n    get assertedPersistence() {\r\n        _assert(this.persistenceManager, this, \"internal-error\" /* INTERNAL_ERROR */);\r\n        return this.persistenceManager;\r\n    }\r\n    _logFramework(framework) {\r\n        if (!framework || this.frameworks.includes(framework)) {\r\n            return;\r\n        }\r\n        this.frameworks.push(framework);\r\n        // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\r\n        // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\r\n        this.frameworks.sort();\r\n        this.clientVersion = _getClientVersion(this.config.clientPlatform, this._getFrameworks());\r\n    }\r\n    _getFrameworks() {\r\n        return this.frameworks;\r\n    }\r\n    _getSdkClientVersion() {\r\n        return this.clientVersion;\r\n    }\r\n}\r\n/**\r\n * Method to be used to cast down to our private implmentation of Auth.\r\n * It will also handle unwrapping from the compat type if necessary\r\n *\r\n * @param auth Auth object passed in from developer\r\n */\r\nfunction _castAuth(auth) {\r\n    return getModularInstance(auth);\r\n}\r\n/** Helper class to wrap subscriber logic */\r\nclass Subscription {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.observer = null;\r\n        this.addObserver = createSubscribe(observer => (this.observer = observer));\r\n    }\r\n    get next() {\r\n        _assert(this.observer, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        return this.observer.next.bind(this.observer);\r\n    }\r\n}\n\n/**\r\n * Changes the Auth instance to communicate with the Firebase Auth Emulator, instead of production\r\n * Firebase Auth services.\r\n *\r\n * @remarks\r\n * This must be called synchronously immediately following the first call to\r\n * {@link @firebase/auth#initializeAuth}.  Do not use with production credentials as emulator\r\n * traffic is not encrypted.\r\n *\r\n *\r\n * @example\r\n * ```javascript\r\n * useAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\r\n * ```\r\n *\r\n * @param auth - The Auth instance.\r\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\r\n * @param options.disableWarnings - (Optional: default false) Disable the warning banner attached to the DOM\r\n *\r\n * @public\r\n */\r\nfunction useAuthEmulator(auth, url, options) {\r\n    const authInternal = _castAuth(auth);\r\n    _assert(authInternal._canInitEmulator, authInternal, \"emulator-config-failed\" /* EMULATOR_CONFIG_FAILED */);\r\n    _assert(/^https?:\\/\\//.test(url), authInternal, \"invalid-emulator-scheme\" /* INVALID_EMULATOR_SCHEME */);\r\n    const disableWarnings = !!(options === null || options === void 0 ? void 0 : options.disableWarnings);\r\n    const protocol = extractProtocol(url);\r\n    const { host, port } = extractHostAndPort(url);\r\n    const portStr = port === null ? '' : `:${port}`;\r\n    // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\r\n    authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\r\n    authInternal.settings.appVerificationDisabledForTesting = true;\r\n    authInternal.emulatorConfig = Object.freeze({\r\n        host,\r\n        port,\r\n        protocol: protocol.replace(':', ''),\r\n        options: Object.freeze({ disableWarnings })\r\n    });\r\n    emitEmulatorWarning(disableWarnings);\r\n}\r\nfunction extractProtocol(url) {\r\n    const protocolEnd = url.indexOf(':');\r\n    return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\r\n}\r\nfunction extractHostAndPort(url) {\r\n    const protocol = extractProtocol(url);\r\n    const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\r\n    if (!authority) {\r\n        return { host: '', port: null };\r\n    }\r\n    const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\r\n    const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\r\n    if (bracketedIPv6) {\r\n        const host = bracketedIPv6[1];\r\n        return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\r\n    }\r\n    else {\r\n        const [host, port] = hostAndPort.split(':');\r\n        return { host, port: parsePort(port) };\r\n    }\r\n}\r\nfunction parsePort(portStr) {\r\n    if (!portStr) {\r\n        return null;\r\n    }\r\n    const port = Number(portStr);\r\n    if (isNaN(port)) {\r\n        return null;\r\n    }\r\n    return port;\r\n}\r\nfunction emitEmulatorWarning(disableBanner) {\r\n    function attachBanner() {\r\n        const el = document.createElement('p');\r\n        const sty = el.style;\r\n        el.innerText =\r\n            'Running in emulator mode. Do not use with production credentials.';\r\n        sty.position = 'fixed';\r\n        sty.width = '100%';\r\n        sty.backgroundColor = '#ffffff';\r\n        sty.border = '.1em solid #000000';\r\n        sty.color = '#b50000';\r\n        sty.bottom = '0px';\r\n        sty.left = '0px';\r\n        sty.margin = '0px';\r\n        sty.zIndex = '10000';\r\n        sty.textAlign = 'center';\r\n        el.classList.add('firebase-emulator-warning');\r\n        document.body.appendChild(el);\r\n    }\r\n    if (typeof console !== 'undefined' && typeof console.info === 'function') {\r\n        console.info('WARNING: You are using the Auth Emulator,' +\r\n            ' which is intended for local testing only.  Do not use with' +\r\n            ' production credentials.');\r\n    }\r\n    if (typeof window !== 'undefined' &&\r\n        typeof document !== 'undefined' &&\r\n        !disableBanner) {\r\n        if (document.readyState === 'loading') {\r\n            window.addEventListener('DOMContentLoaded', attachBanner);\r\n        }\r\n        else {\r\n            attachBanner();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface that represents the credentials returned by an {@link AuthProvider}.\r\n *\r\n * @remarks\r\n * Implementations specify the details about each auth provider's credential requirements.\r\n *\r\n * @public\r\n */\r\nclass AuthCredential {\r\n    /** @internal */\r\n    constructor(\r\n    /**\r\n     * The authentication provider ID for the credential.\r\n     *\r\n     * @remarks\r\n     * For example, 'facebook.com', or 'google.com'.\r\n     */\r\n    providerId, \r\n    /**\r\n     * The authentication sign in method for the credential.\r\n     *\r\n     * @remarks\r\n     * For example, {@link  SignInMethod.EMAIL_PASSWORD}, or\r\n     * {@link  SignInMethod.EMAIL_LINK}. This corresponds to the sign-in method\r\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\r\n     */\r\n    signInMethod) {\r\n        this.providerId = providerId;\r\n        this.signInMethod = signInMethod;\r\n    }\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     *\r\n     * @returns a JSON-serializable representation of this object.\r\n     */\r\n    toJSON() {\r\n        return debugFail('not implemented');\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(_auth) {\r\n        return debugFail('not implemented');\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(_auth, _idToken) {\r\n        return debugFail('not implemented');\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(_auth) {\r\n        return debugFail('not implemented');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function resetPassword(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:resetPassword\" /* RESET_PASSWORD */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function updateEmailPassword(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:update\" /* SET_ACCOUNT_INFO */, request);\r\n}\r\nasync function applyActionCode(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:update\" /* SET_ACCOUNT_INFO */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithPassword(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithPassword\" /* SIGN_IN_WITH_PASSWORD */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function sendOobCode(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:sendOobCode\" /* SEND_OOB_CODE */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function sendEmailVerification(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\r\nasync function sendPasswordResetEmail(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\r\nasync function sendSignInLinkToEmail(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\r\nasync function verifyAndChangeEmail(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithEmailLink(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithEmailLink\" /* SIGN_IN_WITH_EMAIL_LINK */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function signInWithEmailLinkForLinking(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithEmailLink\" /* SIGN_IN_WITH_EMAIL_LINK */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\r\n * {@link ProviderId.PASSWORD}\r\n *\r\n * @remarks\r\n * Covers both {@link SignInMethod.EMAIL_PASSWORD} and\r\n * {@link SignInMethod.EMAIL_LINK}.\r\n *\r\n * @public\r\n */\r\nclass EmailAuthCredential extends AuthCredential {\r\n    /** @internal */\r\n    constructor(\r\n    /** @internal */\r\n    _email, \r\n    /** @internal */\r\n    _password, signInMethod, \r\n    /** @internal */\r\n    _tenantId = null) {\r\n        super(\"password\" /* PASSWORD */, signInMethod);\r\n        this._email = _email;\r\n        this._password = _password;\r\n        this._tenantId = _tenantId;\r\n    }\r\n    /** @internal */\r\n    static _fromEmailAndPassword(email, password) {\r\n        return new EmailAuthCredential(email, password, \"password\" /* EMAIL_PASSWORD */);\r\n    }\r\n    /** @internal */\r\n    static _fromEmailAndCode(email, oobCode, tenantId = null) {\r\n        return new EmailAuthCredential(email, oobCode, \"emailLink\" /* EMAIL_LINK */, tenantId);\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON} */\r\n    toJSON() {\r\n        return {\r\n            email: this._email,\r\n            password: this._password,\r\n            signInMethod: this.signInMethod,\r\n            tenantId: this._tenantId\r\n        };\r\n    }\r\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\r\n     *\r\n     * @param json - Either `object` or the stringified representation of the object. When string is\r\n     * provided, `JSON.parse` would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\r\n     */\r\n    static fromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        if ((obj === null || obj === void 0 ? void 0 : obj.email) && (obj === null || obj === void 0 ? void 0 : obj.password)) {\r\n            if (obj.signInMethod === \"password\" /* EMAIL_PASSWORD */) {\r\n                return this._fromEmailAndPassword(obj.email, obj.password);\r\n            }\r\n            else if (obj.signInMethod === \"emailLink\" /* EMAIL_LINK */) {\r\n                return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /** @internal */\r\n    async _getIdTokenResponse(auth) {\r\n        switch (this.signInMethod) {\r\n            case \"password\" /* EMAIL_PASSWORD */:\r\n                return signInWithPassword(auth, {\r\n                    returnSecureToken: true,\r\n                    email: this._email,\r\n                    password: this._password\r\n                });\r\n            case \"emailLink\" /* EMAIL_LINK */:\r\n                return signInWithEmailLink(auth, {\r\n                    email: this._email,\r\n                    oobCode: this._password\r\n                });\r\n            default:\r\n                _fail(auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        }\r\n    }\r\n    /** @internal */\r\n    async _linkToIdToken(auth, idToken) {\r\n        switch (this.signInMethod) {\r\n            case \"password\" /* EMAIL_PASSWORD */:\r\n                return updateEmailPassword(auth, {\r\n                    idToken,\r\n                    returnSecureToken: true,\r\n                    email: this._email,\r\n                    password: this._password\r\n                });\r\n            case \"emailLink\" /* EMAIL_LINK */:\r\n                return signInWithEmailLinkForLinking(auth, {\r\n                    idToken,\r\n                    email: this._email,\r\n                    oobCode: this._password\r\n                });\r\n            default:\r\n                _fail(auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        }\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        return this._getIdTokenResponse(auth);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithIdp(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithIdp\" /* SIGN_IN_WITH_IDP */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst IDP_REQUEST_URI = 'http://localhost';\r\n/**\r\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\r\n *\r\n * @remarks\r\n * Implementations specify the details about each auth provider's credential requirements.\r\n *\r\n * @public\r\n */\r\nclass OAuthCredential extends AuthCredential {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.pendingToken = null;\r\n    }\r\n    /** @internal */\r\n    static _fromParams(params) {\r\n        const cred = new OAuthCredential(params.providerId, params.signInMethod);\r\n        if (params.idToken || params.accessToken) {\r\n            // OAuth 2 and either ID token or access token.\r\n            if (params.idToken) {\r\n                cred.idToken = params.idToken;\r\n            }\r\n            if (params.accessToken) {\r\n                cred.accessToken = params.accessToken;\r\n            }\r\n            // Add nonce if available and no pendingToken is present.\r\n            if (params.nonce && !params.pendingToken) {\r\n                cred.nonce = params.nonce;\r\n            }\r\n            if (params.pendingToken) {\r\n                cred.pendingToken = params.pendingToken;\r\n            }\r\n        }\r\n        else if (params.oauthToken && params.oauthTokenSecret) {\r\n            // OAuth 1 and OAuth token with token secret\r\n            cred.accessToken = params.oauthToken;\r\n            cred.secret = params.oauthTokenSecret;\r\n        }\r\n        else {\r\n            _fail(\"argument-error\" /* ARGUMENT_ERROR */);\r\n        }\r\n        return cred;\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON}  */\r\n    toJSON() {\r\n        return {\r\n            idToken: this.idToken,\r\n            accessToken: this.accessToken,\r\n            secret: this.secret,\r\n            nonce: this.nonce,\r\n            pendingToken: this.pendingToken,\r\n            providerId: this.providerId,\r\n            signInMethod: this.signInMethod\r\n        };\r\n    }\r\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an\r\n     * {@link  AuthCredential}.\r\n     *\r\n     * @param json - Input can be either Object or the stringified representation of the object.\r\n     * When string is provided, JSON.parse would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\r\n     */\r\n    static fromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        const { providerId, signInMethod } = obj, rest = __rest(obj, [\"providerId\", \"signInMethod\"]);\r\n        if (!providerId || !signInMethod) {\r\n            return null;\r\n        }\r\n        const cred = new OAuthCredential(providerId, signInMethod);\r\n        Object.assign(cred, rest);\r\n        return cred;\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(auth) {\r\n        const request = this.buildRequest();\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(auth, idToken) {\r\n        const request = this.buildRequest();\r\n        request.idToken = idToken;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        const request = this.buildRequest();\r\n        request.autoCreate = false;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    buildRequest() {\r\n        const request = {\r\n            requestUri: IDP_REQUEST_URI,\r\n            returnSecureToken: true\r\n        };\r\n        if (this.pendingToken) {\r\n            request.pendingToken = this.pendingToken;\r\n        }\r\n        else {\r\n            const postBody = {};\r\n            if (this.idToken) {\r\n                postBody['id_token'] = this.idToken;\r\n            }\r\n            if (this.accessToken) {\r\n                postBody['access_token'] = this.accessToken;\r\n            }\r\n            if (this.secret) {\r\n                postBody['oauth_token_secret'] = this.secret;\r\n            }\r\n            postBody['providerId'] = this.providerId;\r\n            if (this.nonce && !this.pendingToken) {\r\n                postBody['nonce'] = this.nonce;\r\n            }\r\n            request.postBody = querystring(postBody);\r\n        }\r\n        return request;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function sendPhoneVerificationCode(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:sendVerificationCode\" /* SEND_VERIFICATION_CODE */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function signInWithPhoneNumber(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithPhoneNumber\" /* SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function linkWithPhoneNumber(auth, request) {\r\n    const response = await _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithPhoneNumber\" /* SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request));\r\n    if (response.temporaryProof) {\r\n        throw _makeTaggedError(auth, \"account-exists-with-different-credential\" /* NEED_CONFIRMATION */, response);\r\n    }\r\n    return response;\r\n}\r\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_ = {\r\n    [\"USER_NOT_FOUND\" /* USER_NOT_FOUND */]: \"user-not-found\" /* USER_DELETED */\r\n};\r\nasync function verifyPhoneNumberForExisting(auth, request) {\r\n    const apiRequest = Object.assign(Object.assign({}, request), { operation: 'REAUTH' });\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithPhoneNumber\" /* SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, apiRequest), VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents the credentials returned by {@link PhoneAuthProvider}.\r\n *\r\n * @public\r\n */\r\nclass PhoneAuthCredential extends AuthCredential {\r\n    constructor(params) {\r\n        super(\"phone\" /* PHONE */, \"phone\" /* PHONE */);\r\n        this.params = params;\r\n    }\r\n    /** @internal */\r\n    static _fromVerification(verificationId, verificationCode) {\r\n        return new PhoneAuthCredential({ verificationId, verificationCode });\r\n    }\r\n    /** @internal */\r\n    static _fromTokenResponse(phoneNumber, temporaryProof) {\r\n        return new PhoneAuthCredential({ phoneNumber, temporaryProof });\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(auth) {\r\n        return signInWithPhoneNumber(auth, this._makeVerificationRequest());\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(auth, idToken) {\r\n        return linkWithPhoneNumber(auth, Object.assign({ idToken }, this._makeVerificationRequest()));\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\r\n    }\r\n    /** @internal */\r\n    _makeVerificationRequest() {\r\n        const { temporaryProof, phoneNumber, verificationId, verificationCode } = this.params;\r\n        if (temporaryProof && phoneNumber) {\r\n            return { temporaryProof, phoneNumber };\r\n        }\r\n        return {\r\n            sessionInfo: verificationId,\r\n            code: verificationCode\r\n        };\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON} */\r\n    toJSON() {\r\n        const obj = {\r\n            providerId: this.providerId\r\n        };\r\n        if (this.params.phoneNumber) {\r\n            obj.phoneNumber = this.params.phoneNumber;\r\n        }\r\n        if (this.params.temporaryProof) {\r\n            obj.temporaryProof = this.params.temporaryProof;\r\n        }\r\n        if (this.params.verificationCode) {\r\n            obj.verificationCode = this.params.verificationCode;\r\n        }\r\n        if (this.params.verificationId) {\r\n            obj.verificationId = this.params.verificationId;\r\n        }\r\n        return obj;\r\n    }\r\n    /** Generates a phone credential based on a plain object or a JSON string. */\r\n    static fromJSON(json) {\r\n        if (typeof json === 'string') {\r\n            json = JSON.parse(json);\r\n        }\r\n        const { verificationId, verificationCode, phoneNumber, temporaryProof } = json;\r\n        if (!verificationCode &&\r\n            !verificationId &&\r\n            !phoneNumber &&\r\n            !temporaryProof) {\r\n            return null;\r\n        }\r\n        return new PhoneAuthCredential({\r\n            verificationId,\r\n            verificationCode,\r\n            phoneNumber,\r\n            temporaryProof\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Maps the mode string in action code URL to Action Code Info operation.\r\n *\r\n * @param mode\r\n */\r\nfunction parseMode(mode) {\r\n    switch (mode) {\r\n        case 'recoverEmail':\r\n            return \"RECOVER_EMAIL\" /* RECOVER_EMAIL */;\r\n        case 'resetPassword':\r\n            return \"PASSWORD_RESET\" /* PASSWORD_RESET */;\r\n        case 'signIn':\r\n            return \"EMAIL_SIGNIN\" /* EMAIL_SIGNIN */;\r\n        case 'verifyEmail':\r\n            return \"VERIFY_EMAIL\" /* VERIFY_EMAIL */;\r\n        case 'verifyAndChangeEmail':\r\n            return \"VERIFY_AND_CHANGE_EMAIL\" /* VERIFY_AND_CHANGE_EMAIL */;\r\n        case 'revertSecondFactorAddition':\r\n            return \"REVERT_SECOND_FACTOR_ADDITION\" /* REVERT_SECOND_FACTOR_ADDITION */;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n/**\r\n * Helper to parse FDL links\r\n *\r\n * @param url\r\n */\r\nfunction parseDeepLink(url) {\r\n    const link = querystringDecode(extractQuerystring(url))['link'];\r\n    // Double link case (automatic redirect).\r\n    const doubleDeepLink = link\r\n        ? querystringDecode(extractQuerystring(link))['deep_link_id']\r\n        : null;\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = querystringDecode(extractQuerystring(url))['deep_link_id'];\r\n    const iOSDoubleDeepLink = iOSDeepLink\r\n        ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\r\n        : null;\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * A utility class to parse email action URLs such as password reset, email verification,\r\n * email link sign in, etc.\r\n *\r\n * @public\r\n */\r\nclass ActionCodeURL {\r\n    /**\r\n     * @param actionLink - The link from which to extract the URL.\r\n     * @returns The ActionCodeURL object, or null if the link is invalid.\r\n     *\r\n     * @internal\r\n     */\r\n    constructor(actionLink) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        const searchParams = querystringDecode(extractQuerystring(actionLink));\r\n        const apiKey = (_a = searchParams[\"apiKey\" /* API_KEY */]) !== null && _a !== void 0 ? _a : null;\r\n        const code = (_b = searchParams[\"oobCode\" /* CODE */]) !== null && _b !== void 0 ? _b : null;\r\n        const operation = parseMode((_c = searchParams[\"mode\" /* MODE */]) !== null && _c !== void 0 ? _c : null);\r\n        // Validate API key, code and mode.\r\n        _assert(apiKey && code && operation, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        this.apiKey = apiKey;\r\n        this.operation = operation;\r\n        this.code = code;\r\n        this.continueUrl = (_d = searchParams[\"continueUrl\" /* CONTINUE_URL */]) !== null && _d !== void 0 ? _d : null;\r\n        this.languageCode = (_e = searchParams[\"languageCode\" /* LANGUAGE_CODE */]) !== null && _e !== void 0 ? _e : null;\r\n        this.tenantId = (_f = searchParams[\"tenantId\" /* TENANT_ID */]) !== null && _f !== void 0 ? _f : null;\r\n    }\r\n    /**\r\n     * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\r\n     * otherwise returns null.\r\n     *\r\n     * @param link  - The email action link string.\r\n     * @returns The ActionCodeURL object, or null if the link is invalid.\r\n     *\r\n     * @public\r\n     */\r\n    static parseLink(link) {\r\n        const actionLink = parseDeepLink(link);\r\n        try {\r\n            return new ActionCodeURL(actionLink);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Parses the email action link string and returns an {@link ActionCodeURL} if\r\n * the link is valid, otherwise returns null.\r\n *\r\n * @public\r\n */\r\nfunction parseActionCodeURL(link) {\r\n    return ActionCodeURL.parseLink(link);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating {@link EmailAuthCredential}.\r\n *\r\n * @public\r\n */\r\nclass EmailAuthProvider {\r\n    constructor() {\r\n        /**\r\n         * Always set to {@link ProviderId.PASSWORD}, even for email link.\r\n         */\r\n        this.providerId = EmailAuthProvider.PROVIDER_ID;\r\n    }\r\n    /**\r\n     * Initialize an {@link AuthCredential} using an email and password.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const authCredential = EmailAuthProvider.credential(email, password);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n     * ```\r\n     *\r\n     * @param email - Email address.\r\n     * @param password - User account password.\r\n     * @returns The auth provider credential.\r\n     */\r\n    static credential(email, password) {\r\n        return EmailAuthCredential._fromEmailAndPassword(email, password);\r\n    }\r\n    /**\r\n     * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\r\n     * email link operation.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * await sendSignInLinkToEmail(auth, email);\r\n     * // Obtain emailLink from user.\r\n     * const userCredential = await signInWithEmailLink(auth, email, emailLink);\r\n     * ```\r\n     *\r\n     * @param auth - The Auth instance used to verify the link.\r\n     * @param email - Email address.\r\n     * @param emailLink - Sign-in email link.\r\n     * @returns - The auth provider credential.\r\n     */\r\n    static credentialWithLink(email, emailLink) {\r\n        const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\r\n        _assert(actionCodeUrl, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        return EmailAuthCredential._fromEmailAndCode(email, actionCodeUrl.code, actionCodeUrl.tenantId);\r\n    }\r\n}\r\n/**\r\n * Always set to {@link ProviderId.PASSWORD}, even for email link.\r\n */\r\nEmailAuthProvider.PROVIDER_ID = \"password\" /* PASSWORD */;\r\n/**\r\n * Always set to {@link SignInMethod.EMAIL_PASSWORD}.\r\n */\r\nEmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD = \"password\" /* EMAIL_PASSWORD */;\r\n/**\r\n * Always set to {@link SignInMethod.EMAIL_LINK}.\r\n */\r\nEmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD = \"emailLink\" /* EMAIL_LINK */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\r\n *\r\n * This class is not meant to be instantiated directly.\r\n *\r\n * @public\r\n */\r\nclass FederatedAuthProvider {\r\n    /**\r\n     * Constructor for generic OAuth providers.\r\n     *\r\n     * @param providerId - Provider for which credentials should be generated.\r\n     */\r\n    constructor(providerId) {\r\n        this.providerId = providerId;\r\n        /** @internal */\r\n        this.defaultLanguageCode = null;\r\n        /** @internal */\r\n        this.customParameters = {};\r\n    }\r\n    /**\r\n     * Set the language gode.\r\n     *\r\n     * @param languageCode - language code\r\n     */\r\n    setDefaultLanguage(languageCode) {\r\n        this.defaultLanguageCode = languageCode;\r\n    }\r\n    /**\r\n     * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\r\n     * operations.\r\n     *\r\n     * @remarks\r\n     * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\r\n     * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\r\n     *\r\n     * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\r\n     */\r\n    setCustomParameters(customOAuthParameters) {\r\n        this.customParameters = customOAuthParameters;\r\n        return this;\r\n    }\r\n    /**\r\n     * Retrieve the current list of {@link CustomParameters}.\r\n     */\r\n    getCustomParameters() {\r\n        return this.customParameters;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Common code to all OAuth providers. This is separate from the\r\n * {@link OAuthProvider} so that child providers (like\r\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\r\n * Instead, they rely on a static `credential` method.\r\n */\r\nclass BaseOAuthProvider extends FederatedAuthProvider {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** @internal */\r\n        this.scopes = [];\r\n    }\r\n    /**\r\n     * Add an OAuth scope to the credential.\r\n     *\r\n     * @param scope - Provider OAuth scope to add.\r\n     */\r\n    addScope(scope) {\r\n        // If not already added, add scope to list.\r\n        if (!this.scopes.includes(scope)) {\r\n            this.scopes.push(scope);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Retrieve the current list of OAuth scopes.\r\n     */\r\n    getScopes() {\r\n        return [...this.scopes];\r\n    }\r\n}\r\n/**\r\n * Provider for generating generic {@link OAuthCredential}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new OAuthProvider('google.com');\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a OAuth Access Token for the provider.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new OAuthProvider('google.com');\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a OAuth Access Token for the provider.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * ```\r\n * @public\r\n */\r\nclass OAuthProvider extends BaseOAuthProvider {\r\n    /**\r\n     * Creates an {@link OAuthCredential} from a JSON string or a plain object.\r\n     * @param json A plain object or a JSON string\r\n     */\r\n    static credentialFromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        _assert('providerId' in obj && 'signInMethod' in obj, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        return OAuthCredential._fromParams(obj);\r\n    }\r\n    /**\r\n     * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\r\n     *\r\n     * @remarks\r\n     * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\r\n     * the raw nonce must match the nonce field in the ID token.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // `googleUser` from the onsuccess Google Sign In callback.\r\n     * // Initialize a generate OAuth provider with a `google.com` providerId.\r\n     * const provider = new OAuthProvider('google.com');\r\n     * const credential = provider.credential({\r\n     *   idToken: googleUser.getAuthResponse().id_token,\r\n     * });\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param params - Either the options object containing the ID token, access token and raw nonce\r\n     * or the ID token string.\r\n     */\r\n    credential(params) {\r\n        return this._credential(params);\r\n    }\r\n    /** An internal credential method that accepts more permissive options */\r\n    _credential(params) {\r\n        _assert(params.idToken || params.accessToken, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        // For OAuthCredential, sign in method is same as providerId.\r\n        return OAuthCredential._fromParams(Object.assign(Object.assign({}, params), { providerId: this.providerId, signInMethod: this.providerId }));\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return OAuthProvider.oauthCredentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return OAuthProvider.oauthCredentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static oauthCredentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce, providerId } = tokenResponse;\r\n        if (!oauthAccessToken &&\r\n            !oauthTokenSecret &&\r\n            !oauthIdToken &&\r\n            !pendingToken) {\r\n            return null;\r\n        }\r\n        if (!providerId) {\r\n            return null;\r\n        }\r\n        try {\r\n            return new OAuthProvider(providerId)._credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                rawNonce: nonce,\r\n                pendingToken\r\n            });\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId.FACEBOOK}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('user_birthday');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Facebook Access Token.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * provider.addScope('user_birthday');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Facebook Access Token.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass FacebookAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"facebook.com\" /* FACEBOOK */);\r\n    }\r\n    /**\r\n     * Creates a credential for Facebook.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // `event` from the Facebook auth.authResponseChange callback.\r\n     * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param accessToken - Facebook access token.\r\n     */\r\n    static credential(accessToken) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: FacebookAuthProvider.PROVIDER_ID,\r\n            signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\r\n            accessToken\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return FacebookAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return FacebookAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\r\n            return null;\r\n        }\r\n        if (!tokenResponse.oauthAccessToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod.FACEBOOK}. */\r\nFacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD = \"facebook.com\" /* FACEBOOK */;\r\n/** Always set to {@link ProviderId.FACEBOOK}. */\r\nFacebookAuthProvider.PROVIDER_ID = \"facebook.com\" /* FACEBOOK */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an an {@link OAuthCredential} for {@link ProviderId.GOOGLE}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new GoogleAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Google Access Token.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new GoogleAuthProvider();\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Google Access Token.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass GoogleAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"google.com\" /* GOOGLE */);\r\n        this.addScope('profile');\r\n    }\r\n    /**\r\n     * Creates a credential for Google. At least one of ID token and access token is required.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // \\`googleUser\\` from the onsuccess Google Sign In callback.\r\n     * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param idToken - Google ID token.\r\n     * @param accessToken - Google access token.\r\n     */\r\n    static credential(idToken, accessToken) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: GoogleAuthProvider.PROVIDER_ID,\r\n            signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\r\n            idToken,\r\n            accessToken\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return GoogleAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return GoogleAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { oauthIdToken, oauthAccessToken } = tokenResponse;\r\n        if (!oauthIdToken && !oauthAccessToken) {\r\n            // This could be an oauth 1 credential or a phone credential\r\n            return null;\r\n        }\r\n        try {\r\n            return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod.GOOGLE}. */\r\nGoogleAuthProvider.GOOGLE_SIGN_IN_METHOD = \"google.com\" /* GOOGLE */;\r\n/** Always set to {@link ProviderId.GOOGLE}. */\r\nGoogleAuthProvider.PROVIDER_ID = \"google.com\" /* GOOGLE */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId.GITHUB}.\r\n *\r\n * @remarks\r\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\r\n * the {@link signInWithPopup} handler:\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new GithubAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('repo');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Github Access Token.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new GithubAuthProvider();\r\n * provider.addScope('repo');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Github Access Token.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * ```\r\n * @public\r\n */\r\nclass GithubAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"github.com\" /* GITHUB */);\r\n    }\r\n    /**\r\n     * Creates a credential for Github.\r\n     *\r\n     * @param accessToken - Github access token.\r\n     */\r\n    static credential(accessToken) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: GithubAuthProvider.PROVIDER_ID,\r\n            signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\r\n            accessToken\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return GithubAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return GithubAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\r\n            return null;\r\n        }\r\n        if (!tokenResponse.oauthAccessToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod.GITHUB}. */\r\nGithubAuthProvider.GITHUB_SIGN_IN_METHOD = \"github.com\" /* GITHUB */;\r\n/** Always set to {@link ProviderId.GITHUB}. */\r\nGithubAuthProvider.PROVIDER_ID = \"github.com\" /* GITHUB */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst IDP_REQUEST_URI$1 = 'http://localhost';\r\n/**\r\n * @public\r\n */\r\nclass SAMLAuthCredential extends AuthCredential {\r\n    /** @internal */\r\n    constructor(providerId, pendingToken) {\r\n        super(providerId, providerId);\r\n        this.pendingToken = pendingToken;\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(auth) {\r\n        const request = this.buildRequest();\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(auth, idToken) {\r\n        const request = this.buildRequest();\r\n        request.idToken = idToken;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        const request = this.buildRequest();\r\n        request.autoCreate = false;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON}  */\r\n    toJSON() {\r\n        return {\r\n            signInMethod: this.signInMethod,\r\n            providerId: this.providerId,\r\n            pendingToken: this.pendingToken\r\n        };\r\n    }\r\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an\r\n     * {@link  AuthCredential}.\r\n     *\r\n     * @param json - Input can be either Object or the stringified representation of the object.\r\n     * When string is provided, JSON.parse would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\r\n     */\r\n    static fromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        const { providerId, signInMethod, pendingToken } = obj;\r\n        if (!providerId ||\r\n            !signInMethod ||\r\n            !pendingToken ||\r\n            providerId !== signInMethod) {\r\n            return null;\r\n        }\r\n        return new SAMLAuthCredential(providerId, pendingToken);\r\n    }\r\n    /**\r\n     * Helper static method to avoid exposing the constructor to end users.\r\n     *\r\n     * @internal\r\n     */\r\n    static _create(providerId, pendingToken) {\r\n        return new SAMLAuthCredential(providerId, pendingToken);\r\n    }\r\n    buildRequest() {\r\n        return {\r\n            requestUri: IDP_REQUEST_URI$1,\r\n            returnSecureToken: true,\r\n            pendingToken: this.pendingToken\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SAML_PROVIDER_PREFIX = 'saml.';\r\n/**\r\n * An AuthProvider for SAML.\r\n *\r\n * @public\r\n */\r\nclass SAMLAuthProvider extends FederatedAuthProvider {\r\n    /**\r\n     * Constructor. The providerId must start with \"saml.\"\r\n     * @param - providerId\r\n     */\r\n    constructor(providerId) {\r\n        _assert(providerId.startsWith(SAML_PROVIDER_PREFIX), \"argument-error\" /* ARGUMENT_ERROR */);\r\n        super(providerId);\r\n    }\r\n    /**\r\n     * Generates an {@link AuthCredential} from a {@link UserCredential} after a\r\n     * successful SAML flow completes.\r\n     *\r\n     * @remarks\r\n     *\r\n     * For example, to get an {@link AuthCredential}, you could write the\r\n     * following code:\r\n     *\r\n     * ```js\r\n     * const userCredential = await signInWithPopup(auth, samlProvider);\r\n     * const credential = SAMLAuthProvider.credentialFromResult(userCredential);\r\n     * ```\r\n     *\r\n     * @param userCredential\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return SAMLAuthProvider.samlCredentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return SAMLAuthProvider.samlCredentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    /**\r\n     * Creates an {@link AuthCredential} from a JSON string or a plain object.\r\n     * @param json A plain object or a JSON string\r\n     */\r\n    static credentialFromJSON(json) {\r\n        const credential = SAMLAuthCredential.fromJSON(json);\r\n        _assert(credential, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        return credential;\r\n    }\r\n    static samlCredentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { pendingToken, providerId } = tokenResponse;\r\n        if (!pendingToken || !providerId) {\r\n            return null;\r\n        }\r\n        try {\r\n            return SAMLAuthCredential._create(providerId, pendingToken);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId.TWITTER}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new TwitterAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Twitter Access Token and Secret.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n *   const secret = credential.secret;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new TwitterAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Twitter Access Token and Secret.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * const secret = credential.secret;\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass TwitterAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"twitter.com\" /* TWITTER */);\r\n    }\r\n    /**\r\n     * Creates a credential for Twitter.\r\n     *\r\n     * @param token - Twitter access token.\r\n     * @param secret - Twitter secret.\r\n     */\r\n    static credential(token, secret) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: TwitterAuthProvider.PROVIDER_ID,\r\n            signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\r\n            oauthToken: token,\r\n            oauthTokenSecret: secret\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return TwitterAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return TwitterAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { oauthAccessToken, oauthTokenSecret } = tokenResponse;\r\n        if (!oauthAccessToken || !oauthTokenSecret) {\r\n            return null;\r\n        }\r\n        try {\r\n            return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod.TWITTER}. */\r\nTwitterAuthProvider.TWITTER_SIGN_IN_METHOD = \"twitter.com\" /* TWITTER */;\r\n/** Always set to {@link ProviderId.TWITTER}. */\r\nTwitterAuthProvider.PROVIDER_ID = \"twitter.com\" /* TWITTER */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signUp(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signUp\" /* SIGN_UP */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass UserCredentialImpl {\r\n    constructor(params) {\r\n        this.user = params.user;\r\n        this.providerId = params.providerId;\r\n        this._tokenResponse = params._tokenResponse;\r\n        this.operationType = params.operationType;\r\n    }\r\n    static async _fromIdTokenResponse(auth, operationType, idTokenResponse, isAnonymous = false) {\r\n        const user = await UserImpl._fromIdTokenResponse(auth, idTokenResponse, isAnonymous);\r\n        const providerId = providerIdForResponse(idTokenResponse);\r\n        const userCred = new UserCredentialImpl({\r\n            user,\r\n            providerId,\r\n            _tokenResponse: idTokenResponse,\r\n            operationType\r\n        });\r\n        return userCred;\r\n    }\r\n    static async _forOperation(user, operationType, response) {\r\n        await user._updateTokensIfNecessary(response, /* reload */ true);\r\n        const providerId = providerIdForResponse(response);\r\n        return new UserCredentialImpl({\r\n            user,\r\n            providerId,\r\n            _tokenResponse: response,\r\n            operationType\r\n        });\r\n    }\r\n}\r\nfunction providerIdForResponse(response) {\r\n    if (response.providerId) {\r\n        return response.providerId;\r\n    }\r\n    if ('phoneNumber' in response) {\r\n        return \"phone\" /* PHONE */;\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Asynchronously signs in as an anonymous user.\r\n *\r\n * @remarks\r\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\r\n * new anonymous user identity will be created and returned.\r\n *\r\n * @param auth - The Auth instance.\r\n *\r\n * @public\r\n */\r\nasync function signInAnonymously(auth) {\r\n    var _a;\r\n    const authInternal = _castAuth(auth);\r\n    if ((_a = authInternal.currentUser) === null || _a === void 0 ? void 0 : _a.isAnonymous) {\r\n        // If an anonymous user is already signed in, no need to sign them in again.\r\n        return new UserCredentialImpl({\r\n            user: authInternal.currentUser,\r\n            providerId: null,\r\n            operationType: \"signIn\" /* SIGN_IN */\r\n        });\r\n    }\r\n    const response = await signUp(authInternal, {\r\n        returnSecureToken: true\r\n    });\r\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* SIGN_IN */, response, true);\r\n    await authInternal._updateCurrentUser(userCredential.user);\r\n    return userCredential;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MultiFactorError extends FirebaseError {\r\n    constructor(auth, error, operationType, user) {\r\n        var _a;\r\n        super(error.code, error.message);\r\n        this.operationType = operationType;\r\n        this.user = user;\r\n        this.name = 'FirebaseError';\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, MultiFactorError.prototype);\r\n        this.appName = auth.name;\r\n        this.code = error.code;\r\n        this.tenantId = (_a = auth.tenantId) !== null && _a !== void 0 ? _a : undefined;\r\n        this.serverResponse = error.customData\r\n            .serverResponse;\r\n    }\r\n    static _fromErrorAndOperation(auth, error, operationType, user) {\r\n        return new MultiFactorError(auth, error, operationType, user);\r\n    }\r\n}\r\nfunction _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user) {\r\n    const idTokenProvider = operationType === \"reauthenticate\" /* REAUTHENTICATE */\r\n        ? credential._getReauthenticationResolver(auth)\r\n        : credential._getIdTokenResponse(auth);\r\n    return idTokenProvider.catch(error => {\r\n        if (error.code === `auth/${\"multi-factor-auth-required\" /* MFA_REQUIRED */}`) {\r\n            throw MultiFactorError._fromErrorAndOperation(auth, error, operationType, user);\r\n        }\r\n        throw error;\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Takes a set of UserInfo provider data and converts it to a set of names\r\n */\r\nfunction providerDataAsNames(providerData) {\r\n    return new Set(providerData\r\n        .map(({ providerId }) => providerId)\r\n        .filter(pid => !!pid));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Unlinks a provider from a user account.\r\n *\r\n * @param user - The user.\r\n * @param providerId - The provider to unlink.\r\n *\r\n * @public\r\n */\r\nasync function unlink(user, providerId) {\r\n    const userInternal = getModularInstance(user);\r\n    await _assertLinkedStatus(true, userInternal, providerId);\r\n    const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\r\n        idToken: await userInternal.getIdToken(),\r\n        deleteProvider: [providerId]\r\n    });\r\n    const providersLeft = providerDataAsNames(providerUserInfo || []);\r\n    userInternal.providerData = userInternal.providerData.filter(pd => providersLeft.has(pd.providerId));\r\n    if (!providersLeft.has(\"phone\" /* PHONE */)) {\r\n        userInternal.phoneNumber = null;\r\n    }\r\n    await userInternal.auth._persistUserIfCurrent(userInternal);\r\n    return userInternal;\r\n}\r\nasync function _link(user, credential, bypassAuthState = false) {\r\n    const response = await _logoutIfInvalidated(user, credential._linkToIdToken(user.auth, await user.getIdToken()), bypassAuthState);\r\n    return UserCredentialImpl._forOperation(user, \"link\" /* LINK */, response);\r\n}\r\nasync function _assertLinkedStatus(expected, user, provider) {\r\n    await _reloadWithoutSaving(user);\r\n    const providerIds = providerDataAsNames(user.providerData);\r\n    const code = expected === false\r\n        ? \"provider-already-linked\" /* PROVIDER_ALREADY_LINKED */\r\n        : \"no-such-provider\" /* NO_SUCH_PROVIDER */;\r\n    _assert(providerIds.has(provider) === expected, user.auth, code);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _reauthenticate(user, credential, bypassAuthState = false) {\r\n    const { auth } = user;\r\n    const operationType = \"reauthenticate\" /* REAUTHENTICATE */;\r\n    try {\r\n        const response = await _logoutIfInvalidated(user, _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user), bypassAuthState);\r\n        _assert(response.idToken, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        const parsed = _parseToken(response.idToken);\r\n        _assert(parsed, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        const { sub: localId } = parsed;\r\n        _assert(user.uid === localId, auth, \"user-mismatch\" /* USER_MISMATCH */);\r\n        return UserCredentialImpl._forOperation(user, operationType, response);\r\n    }\r\n    catch (e) {\r\n        // Convert user deleted error into user mismatch\r\n        if ((e === null || e === void 0 ? void 0 : e.code) === `auth/${\"user-not-found\" /* USER_DELETED */}`) {\r\n            _fail(auth, \"user-mismatch\" /* USER_MISMATCH */);\r\n        }\r\n        throw e;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _signInWithCredential(auth, credential, bypassAuthState = false) {\r\n    const operationType = \"signIn\" /* SIGN_IN */;\r\n    const response = await _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential);\r\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(auth, operationType, response);\r\n    if (!bypassAuthState) {\r\n        await auth._updateCurrentUser(userCredential.user);\r\n    }\r\n    return userCredential;\r\n}\r\n/**\r\n * Asynchronously signs in with the given credentials.\r\n *\r\n * @remarks\r\n * An {@link AuthProvider} can be used to generate the credential.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nasync function signInWithCredential(auth, credential) {\r\n    return _signInWithCredential(_castAuth(auth), credential);\r\n}\r\n/**\r\n * Links the user account with the given credentials.\r\n *\r\n * @remarks\r\n * An {@link AuthProvider} can be used to generate the credential.\r\n *\r\n * @param user - The user.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nasync function linkWithCredential(user, credential) {\r\n    const userInternal = getModularInstance(user);\r\n    await _assertLinkedStatus(false, userInternal, credential.providerId);\r\n    return _link(userInternal, credential);\r\n}\r\n/**\r\n * Re-authenticates a user using a fresh credential.\r\n *\r\n * @remarks\r\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\r\n * attempts. This method can be used to recover from a CREDENTIAL_TOO_OLD_LOGIN_AGAIN error.\r\n *\r\n * @param user - The user.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nasync function reauthenticateWithCredential(user, credential) {\r\n    return _reauthenticate(getModularInstance(user), credential);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithCustomToken(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithCustomToken\" /* SIGN_IN_WITH_CUSTOM_TOKEN */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Asynchronously signs in using a custom token.\r\n *\r\n * @remarks\r\n * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\r\n * be generated by an auth backend using the\r\n * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\r\n * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\r\n *\r\n * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param customToken - The custom token to sign in with.\r\n *\r\n * @public\r\n */\r\nasync function signInWithCustomToken$1(auth, customToken) {\r\n    const authInternal = _castAuth(auth);\r\n    const response = await signInWithCustomToken(authInternal, {\r\n        token: customToken,\r\n        returnSecureToken: true\r\n    });\r\n    const cred = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* SIGN_IN */, response);\r\n    await authInternal._updateCurrentUser(cred.user);\r\n    return cred;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MultiFactorInfoImpl {\r\n    constructor(factorId, response) {\r\n        this.factorId = factorId;\r\n        this.uid = response.mfaEnrollmentId;\r\n        this.enrollmentTime = new Date(response.enrolledAt).toUTCString();\r\n        this.displayName = response.displayName;\r\n    }\r\n    static _fromServerResponse(auth, enrollment) {\r\n        if ('phoneInfo' in enrollment) {\r\n            return PhoneMultiFactorInfo._fromServerResponse(auth, enrollment);\r\n        }\r\n        return _fail(auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    }\r\n}\r\nclass PhoneMultiFactorInfo extends MultiFactorInfoImpl {\r\n    constructor(response) {\r\n        super(\"phone\" /* PHONE */, response);\r\n        this.phoneNumber = response.phoneInfo;\r\n    }\r\n    static _fromServerResponse(_auth, enrollment) {\r\n        return new PhoneMultiFactorInfo(enrollment);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _setActionCodeSettingsOnRequest(auth, request, actionCodeSettings) {\r\n    var _a;\r\n    _assert(((_a = actionCodeSettings.url) === null || _a === void 0 ? void 0 : _a.length) > 0, auth, \"invalid-continue-uri\" /* INVALID_CONTINUE_URI */);\r\n    _assert(typeof actionCodeSettings.dynamicLinkDomain === 'undefined' ||\r\n        actionCodeSettings.dynamicLinkDomain.length > 0, auth, \"invalid-dynamic-link-domain\" /* INVALID_DYNAMIC_LINK_DOMAIN */);\r\n    request.continueUrl = actionCodeSettings.url;\r\n    request.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\r\n    request.canHandleCodeInApp = actionCodeSettings.handleCodeInApp;\r\n    if (actionCodeSettings.iOS) {\r\n        _assert(actionCodeSettings.iOS.bundleId.length > 0, auth, \"missing-ios-bundle-id\" /* MISSING_IOS_BUNDLE_ID */);\r\n        request.iosBundleId = actionCodeSettings.iOS.bundleId;\r\n    }\r\n    if (actionCodeSettings.android) {\r\n        _assert(actionCodeSettings.android.packageName.length > 0, auth, \"missing-android-pkg-name\" /* MISSING_ANDROID_PACKAGE_NAME */);\r\n        request.androidInstallApp = actionCodeSettings.android.installApp;\r\n        request.androidMinimumVersionCode =\r\n            actionCodeSettings.android.minimumVersion;\r\n        request.androidPackageName = actionCodeSettings.android.packageName;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sends a password reset email to the given email address.\r\n *\r\n * @remarks\r\n * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\r\n * the email sent to the user, along with the new password specified by the user.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\r\n * // Obtain code from user.\r\n * await confirmPasswordReset('user@example.com', code);\r\n * ```\r\n *\r\n * @param auth - The Auth instance.\r\n * @param email - The user's email address.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function sendPasswordResetEmail$1(auth, email, actionCodeSettings) {\r\n    const authModular = getModularInstance(auth);\r\n    const request = {\r\n        requestType: \"PASSWORD_RESET\" /* PASSWORD_RESET */,\r\n        email\r\n    };\r\n    if (actionCodeSettings) {\r\n        _setActionCodeSettingsOnRequest(authModular, request, actionCodeSettings);\r\n    }\r\n    await sendPasswordResetEmail(authModular, request);\r\n}\r\n/**\r\n * Completes the password reset process, given a confirmation code and new password.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param oobCode - A confirmation code sent to the user.\r\n * @param newPassword - The new password.\r\n *\r\n * @public\r\n */\r\nasync function confirmPasswordReset(auth, oobCode, newPassword) {\r\n    await resetPassword(getModularInstance(auth), {\r\n        oobCode,\r\n        newPassword\r\n    });\r\n    // Do not return the email.\r\n}\r\n/**\r\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param oobCode - A verification code sent to the user.\r\n *\r\n * @public\r\n */\r\nasync function applyActionCode$1(auth, oobCode) {\r\n    await applyActionCode(getModularInstance(auth), { oobCode });\r\n}\r\n/**\r\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\r\n *\r\n * @returns metadata about the code.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param oobCode - A verification code sent to the user.\r\n *\r\n * @public\r\n */\r\nasync function checkActionCode(auth, oobCode) {\r\n    const authModular = getModularInstance(auth);\r\n    const response = await resetPassword(authModular, { oobCode });\r\n    // Email could be empty only if the request type is EMAIL_SIGNIN or\r\n    // VERIFY_AND_CHANGE_EMAIL.\r\n    // New email should not be empty if the request type is\r\n    // VERIFY_AND_CHANGE_EMAIL.\r\n    // Multi-factor info could not be empty if the request type is\r\n    // REVERT_SECOND_FACTOR_ADDITION.\r\n    const operation = response.requestType;\r\n    _assert(operation, authModular, \"internal-error\" /* INTERNAL_ERROR */);\r\n    switch (operation) {\r\n        case \"EMAIL_SIGNIN\" /* EMAIL_SIGNIN */:\r\n            break;\r\n        case \"VERIFY_AND_CHANGE_EMAIL\" /* VERIFY_AND_CHANGE_EMAIL */:\r\n            _assert(response.newEmail, authModular, \"internal-error\" /* INTERNAL_ERROR */);\r\n            break;\r\n        case \"REVERT_SECOND_FACTOR_ADDITION\" /* REVERT_SECOND_FACTOR_ADDITION */:\r\n            _assert(response.mfaInfo, authModular, \"internal-error\" /* INTERNAL_ERROR */);\r\n        // fall through\r\n        default:\r\n            _assert(response.email, authModular, \"internal-error\" /* INTERNAL_ERROR */);\r\n    }\r\n    // The multi-factor info for revert second factor addition\r\n    let multiFactorInfo = null;\r\n    if (response.mfaInfo) {\r\n        multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(_castAuth(authModular), response.mfaInfo);\r\n    }\r\n    return {\r\n        data: {\r\n            email: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" /* VERIFY_AND_CHANGE_EMAIL */\r\n                ? response.newEmail\r\n                : response.email) || null,\r\n            previousEmail: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" /* VERIFY_AND_CHANGE_EMAIL */\r\n                ? response.email\r\n                : response.newEmail) || null,\r\n            multiFactorInfo\r\n        },\r\n        operation\r\n    };\r\n}\r\n/**\r\n * Checks a password reset code sent to the user by email or other out-of-band mechanism.\r\n *\r\n * @returns the user's email address if valid.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param code - A verification code sent to the user.\r\n *\r\n * @public\r\n */\r\nasync function verifyPasswordResetCode(auth, code) {\r\n    const { data } = await checkActionCode(getModularInstance(auth), code);\r\n    // Email should always be present since a code was sent to it\r\n    return data.email;\r\n}\r\n/**\r\n * Creates a new user account associated with the specified email address and password.\r\n *\r\n * @remarks\r\n * On successful creation of the user account, this user will also be signed in to your application.\r\n *\r\n * User account creation can fail if the account already exists or the password is invalid.\r\n *\r\n * Note: The email address acts as a unique identifier for the user and enables an email-based\r\n * password reset. This function will create a new user account and set the initial user password.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param email - The user's email address.\r\n * @param password - The user's chosen password.\r\n *\r\n * @public\r\n */\r\nasync function createUserWithEmailAndPassword(auth, email, password) {\r\n    const authInternal = _castAuth(auth);\r\n    const response = await signUp(authInternal, {\r\n        returnSecureToken: true,\r\n        email,\r\n        password\r\n    });\r\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* SIGN_IN */, response);\r\n    await authInternal._updateCurrentUser(userCredential.user);\r\n    return userCredential;\r\n}\r\n/**\r\n * Asynchronously signs in using an email and password.\r\n *\r\n * @remarks\r\n * Fails with an error if the email address and password do not match.\r\n *\r\n * Note: The user's password is NOT the password used to access the user's email account. The\r\n * email address serves as a unique identifier for the user, and the password is used to access\r\n * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param email - The users email address.\r\n * @param password - The users password.\r\n *\r\n * @public\r\n */\r\nfunction signInWithEmailAndPassword(auth, email, password) {\r\n    return signInWithCredential(getModularInstance(auth), EmailAuthProvider.credential(email, password));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sends a sign-in email link to the user with the specified email.\r\n *\r\n * @remarks\r\n * The sign-in operation has to always be completed in the app unlike other out of band email\r\n * actions (password reset and email verifications). This is because, at the end of the flow,\r\n * the user is expected to be signed in and their Auth state persisted within the app.\r\n *\r\n * To complete sign in with the email link, call {@link signInWithEmailLink} with the email\r\n * address and the email link supplied in the email sent to the user.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\r\n * // Obtain emailLink from the user.\r\n * if(isSignInWithEmailLink(auth, emailLink)) {\r\n *   await signInWithEmailLink('user@example.com', 'user@example.com', emailLink);\r\n * }\r\n * ```\r\n *\r\n * @param authInternal - The Auth instance.\r\n * @param email - The user's email address.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function sendSignInLinkToEmail$1(auth, email, actionCodeSettings) {\r\n    const authModular = getModularInstance(auth);\r\n    const request = {\r\n        requestType: \"EMAIL_SIGNIN\" /* EMAIL_SIGNIN */,\r\n        email\r\n    };\r\n    _assert(actionCodeSettings.handleCodeInApp, authModular, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    if (actionCodeSettings) {\r\n        _setActionCodeSettingsOnRequest(authModular, request, actionCodeSettings);\r\n    }\r\n    await sendSignInLinkToEmail(authModular, request);\r\n}\r\n/**\r\n * Checks if an incoming link is a sign-in with email link suitable for {@link signInWithEmailLink}.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param emailLink - The link sent to the user's email address.\r\n *\r\n * @public\r\n */\r\nfunction isSignInWithEmailLink(auth, emailLink) {\r\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\r\n    return (actionCodeUrl === null || actionCodeUrl === void 0 ? void 0 : actionCodeUrl.operation) === \"EMAIL_SIGNIN\" /* EMAIL_SIGNIN */;\r\n}\r\n/**\r\n * Asynchronously signs in using an email and sign-in email link.\r\n *\r\n * @remarks\r\n * If no link is passed, the link is inferred from the current URL.\r\n *\r\n * Fails with an error if the email address is invalid or OTP in email link expires.\r\n *\r\n * Note: Confirm the link is a sign-in email link before calling this method firebase.auth.Auth.isSignInWithEmailLink.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\r\n * // Obtain emailLink from the user.\r\n * if(isSignInWithEmailLink(auth, emailLink)) {\r\n *   await signInWithEmailLink('user@example.com', 'user@example.com', emailLink);\r\n * }\r\n * ```\r\n *\r\n * @param auth - The Auth instance.\r\n * @param email - The user's email address.\r\n * @param emailLink - The link sent to the user's email address.\r\n *\r\n * @public\r\n */\r\nasync function signInWithEmailLink$1(auth, email, emailLink) {\r\n    const authModular = getModularInstance(auth);\r\n    const credential = EmailAuthProvider.credentialWithLink(email, emailLink || _getCurrentUrl());\r\n    // Check if the tenant ID in the email link matches the tenant ID on Auth\r\n    // instance.\r\n    _assert(credential._tenantId === (authModular.tenantId || null), authModular, \"tenant-id-mismatch\" /* TENANT_ID_MISMATCH */);\r\n    return signInWithCredential(authModular, credential);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function createAuthUri(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:createAuthUri\" /* CREATE_AUTH_URI */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Gets the list of possible sign in methods for the given email address.\r\n *\r\n * @remarks\r\n * This is useful to differentiate methods of sign-in for the same provider, eg.\r\n * {@link EmailAuthProvider} which has 2 methods of sign-in,\r\n * {@link SignInMethod.EMAIL_PASSWORD} and\r\n * {@link SignInMethod.EMAIL_LINK} .\r\n *\r\n * @param auth - The Auth instance.\r\n * @param email - The user's email address.\r\n *\r\n * @public\r\n */\r\nasync function fetchSignInMethodsForEmail(auth, email) {\r\n    // createAuthUri returns an error if continue URI is not http or https.\r\n    // For environments like Cordova, Chrome extensions, native frameworks, file\r\n    // systems, etc, use http://localhost as continue URL.\r\n    const continueUri = _isHttpOrHttps() ? _getCurrentUrl() : 'http://localhost';\r\n    const request = {\r\n        identifier: email,\r\n        continueUri\r\n    };\r\n    const { signinMethods } = await createAuthUri(getModularInstance(auth), request);\r\n    return signinMethods || [];\r\n}\r\n/**\r\n * Sends a verification email to a user.\r\n *\r\n * @remarks\r\n * The verification process is completed by calling {@link applyActionCode}.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendEmailVerification(user, actionCodeSettings);\r\n * // Obtain code from the user.\r\n * await applyActionCode(auth, code);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function sendEmailVerification$1(user, actionCodeSettings) {\r\n    const userInternal = getModularInstance(user);\r\n    const idToken = await user.getIdToken();\r\n    const request = {\r\n        requestType: \"VERIFY_EMAIL\" /* VERIFY_EMAIL */,\r\n        idToken\r\n    };\r\n    if (actionCodeSettings) {\r\n        _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\r\n    }\r\n    const { email } = await sendEmailVerification(userInternal.auth, request);\r\n    if (email !== user.email) {\r\n        await user.reload();\r\n    }\r\n}\r\n/**\r\n * Sends a verification email to a new email address.\r\n *\r\n * @remarks\r\n * The user's email will be updated to the new one after being verified.\r\n *\r\n * If you have a custom email action handler, you can complete the verification process by calling\r\n * {@link applyActionCode}.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await verifyBeforeUpdateEmail(user, 'newemail@example.com', actionCodeSettings);\r\n * // Obtain code from the user.\r\n * await applyActionCode(auth, code);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param newEmail - The new email address to be verified before update.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function verifyBeforeUpdateEmail(user, newEmail, actionCodeSettings) {\r\n    const userInternal = getModularInstance(user);\r\n    const idToken = await user.getIdToken();\r\n    const request = {\r\n        requestType: \"VERIFY_AND_CHANGE_EMAIL\" /* VERIFY_AND_CHANGE_EMAIL */,\r\n        idToken,\r\n        newEmail\r\n    };\r\n    if (actionCodeSettings) {\r\n        _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\r\n    }\r\n    const { email } = await verifyAndChangeEmail(userInternal.auth, request);\r\n    if (email !== user.email) {\r\n        // If the local copy of the email on user is outdated, reload the\r\n        // user.\r\n        await user.reload();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function updateProfile(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:update\" /* SET_ACCOUNT_INFO */, request);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates a user's profile data.\r\n *\r\n * @param user - The user.\r\n * @param profile - The profile's `displayName` and `photoURL` to update.\r\n *\r\n * @public\r\n */\r\nasync function updateProfile$1(user, { displayName, photoURL: photoUrl }) {\r\n    if (displayName === undefined && photoUrl === undefined) {\r\n        return;\r\n    }\r\n    const userInternal = getModularInstance(user);\r\n    const idToken = await userInternal.getIdToken();\r\n    const profileRequest = {\r\n        idToken,\r\n        displayName,\r\n        photoUrl,\r\n        returnSecureToken: true\r\n    };\r\n    const response = await _logoutIfInvalidated(userInternal, updateProfile(userInternal.auth, profileRequest));\r\n    userInternal.displayName = response.displayName || null;\r\n    userInternal.photoURL = response.photoUrl || null;\r\n    // Update the password provider as well\r\n    const passwordProvider = userInternal.providerData.find(({ providerId }) => providerId === \"password\" /* PASSWORD */);\r\n    if (passwordProvider) {\r\n        passwordProvider.displayName = userInternal.displayName;\r\n        passwordProvider.photoURL = userInternal.photoURL;\r\n    }\r\n    await userInternal._updateTokensIfNecessary(response);\r\n}\r\n/**\r\n * Updates the user's email address.\r\n *\r\n * @remarks\r\n * An email will be sent to the original email address (if it was set) that allows to revoke the\r\n * email address change, in order to protect them from account hijacking.\r\n *\r\n * Important: this is a security sensitive operation that requires the user to have recently signed\r\n * in. If this requirement isn't met, ask the user to authenticate again and then call\r\n * {@link reauthenticateWithCredential}.\r\n *\r\n * @param user - The user.\r\n * @param newEmail - The new email address.\r\n *\r\n * @public\r\n */\r\nfunction updateEmail(user, newEmail) {\r\n    return updateEmailOrPassword(getModularInstance(user), newEmail, null);\r\n}\r\n/**\r\n * Updates the user's password.\r\n *\r\n * @remarks\r\n * Important: this is a security sensitive operation that requires the user to have recently signed\r\n * in. If this requirement isn't met, ask the user to authenticate again and then call\r\n * {@link reauthenticateWithCredential}.\r\n *\r\n * @param user - The user.\r\n * @param newPassword - The new password.\r\n *\r\n * @public\r\n */\r\nfunction updatePassword(user, newPassword) {\r\n    return updateEmailOrPassword(getModularInstance(user), null, newPassword);\r\n}\r\nasync function updateEmailOrPassword(user, email, password) {\r\n    const { auth } = user;\r\n    const idToken = await user.getIdToken();\r\n    const request = {\r\n        idToken,\r\n        returnSecureToken: true\r\n    };\r\n    if (email) {\r\n        request.email = email;\r\n    }\r\n    if (password) {\r\n        request.password = password;\r\n    }\r\n    const response = await _logoutIfInvalidated(user, updateEmailPassword(auth, request));\r\n    await user._updateTokensIfNecessary(response, /* reload */ true);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Parse the `AdditionalUserInfo` from the ID token response.\r\n *\r\n */\r\nfunction _fromIdTokenResponse(idTokenResponse) {\r\n    var _a, _b;\r\n    if (!idTokenResponse) {\r\n        return null;\r\n    }\r\n    const { providerId } = idTokenResponse;\r\n    const profile = idTokenResponse.rawUserInfo\r\n        ? JSON.parse(idTokenResponse.rawUserInfo)\r\n        : {};\r\n    const isNewUser = idTokenResponse.isNewUser ||\r\n        idTokenResponse.kind === \"identitytoolkit#SignupNewUserResponse\" /* SignupNewUser */;\r\n    if (!providerId && (idTokenResponse === null || idTokenResponse === void 0 ? void 0 : idTokenResponse.idToken)) {\r\n        const signInProvider = (_b = (_a = _parseToken(idTokenResponse.idToken)) === null || _a === void 0 ? void 0 : _a.firebase) === null || _b === void 0 ? void 0 : _b['sign_in_provider'];\r\n        if (signInProvider) {\r\n            const filteredProviderId = signInProvider !== \"anonymous\" /* ANONYMOUS */ &&\r\n                signInProvider !== \"custom\" /* CUSTOM */\r\n                ? signInProvider\r\n                : null;\r\n            // Uses generic class in accordance with the legacy SDK.\r\n            return new GenericAdditionalUserInfo(isNewUser, filteredProviderId);\r\n        }\r\n    }\r\n    if (!providerId) {\r\n        return null;\r\n    }\r\n    switch (providerId) {\r\n        case \"facebook.com\" /* FACEBOOK */:\r\n            return new FacebookAdditionalUserInfo(isNewUser, profile);\r\n        case \"github.com\" /* GITHUB */:\r\n            return new GithubAdditionalUserInfo(isNewUser, profile);\r\n        case \"google.com\" /* GOOGLE */:\r\n            return new GoogleAdditionalUserInfo(isNewUser, profile);\r\n        case \"twitter.com\" /* TWITTER */:\r\n            return new TwitterAdditionalUserInfo(isNewUser, profile, idTokenResponse.screenName || null);\r\n        case \"custom\" /* CUSTOM */:\r\n        case \"anonymous\" /* ANONYMOUS */:\r\n            return new GenericAdditionalUserInfo(isNewUser, null);\r\n        default:\r\n            return new GenericAdditionalUserInfo(isNewUser, providerId, profile);\r\n    }\r\n}\r\nclass GenericAdditionalUserInfo {\r\n    constructor(isNewUser, providerId, profile = {}) {\r\n        this.isNewUser = isNewUser;\r\n        this.providerId = providerId;\r\n        this.profile = profile;\r\n    }\r\n}\r\nclass FederatedAdditionalUserInfoWithUsername extends GenericAdditionalUserInfo {\r\n    constructor(isNewUser, providerId, profile, username) {\r\n        super(isNewUser, providerId, profile);\r\n        this.username = username;\r\n    }\r\n}\r\nclass FacebookAdditionalUserInfo extends GenericAdditionalUserInfo {\r\n    constructor(isNewUser, profile) {\r\n        super(isNewUser, \"facebook.com\" /* FACEBOOK */, profile);\r\n    }\r\n}\r\nclass GithubAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\r\n    constructor(isNewUser, profile) {\r\n        super(isNewUser, \"github.com\" /* GITHUB */, profile, typeof (profile === null || profile === void 0 ? void 0 : profile.login) === 'string' ? profile === null || profile === void 0 ? void 0 : profile.login : null);\r\n    }\r\n}\r\nclass GoogleAdditionalUserInfo extends GenericAdditionalUserInfo {\r\n    constructor(isNewUser, profile) {\r\n        super(isNewUser, \"google.com\" /* GOOGLE */, profile);\r\n    }\r\n}\r\nclass TwitterAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\r\n    constructor(isNewUser, profile, screenName) {\r\n        super(isNewUser, \"twitter.com\" /* TWITTER */, profile, screenName);\r\n    }\r\n}\r\n/**\r\n * Extracts provider specific {@link AdditionalUserInfo} for the given credential.\r\n *\r\n * @param userCredential - The user credential.\r\n *\r\n * @public\r\n */\r\nfunction getAdditionalUserInfo(userCredential) {\r\n    const { user, _tokenResponse } = userCredential;\r\n    if (user.isAnonymous && !_tokenResponse) {\r\n        // Handle the special case where signInAnonymously() gets called twice.\r\n        // No network call is made so there's nothing to actually fill this in\r\n        return {\r\n            providerId: null,\r\n            isNewUser: false,\r\n            profile: null\r\n        };\r\n    }\r\n    return _fromIdTokenResponse(_tokenResponse);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Non-optional auth methods.\r\n/**\r\n * Changes the type of persistence on the Auth instance for the currently saved\r\n * Auth session and applies this type of persistence for future sign-in requests, including\r\n * sign-in with redirect requests.\r\n *\r\n * @remarks\r\n * This makes it easy for a user signing in to specify whether their session should be\r\n * remembered or not. It also makes it easier to never persist the Auth state for applications\r\n * that are shared by other users or have sensitive data.\r\n *\r\n * @example\r\n * ```javascript\r\n * setPersistence(auth, browserSessionPersistence);\r\n * ```\r\n *\r\n * @param auth - The Auth instance.\r\n * @param persistence - The {@link Persistence} to use.\r\n * @returns A promise that resolves once the persistence change has completed\r\n *\r\n * @public\r\n */\r\nfunction setPersistence(auth, persistence) {\r\n    return getModularInstance(auth).setPersistence(persistence);\r\n}\r\n/**\r\n * Adds an observer for changes to the signed-in user's ID token, which includes sign-in,\r\n * sign-out, and token refresh events.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param nextOrObserver - callback triggered on change.\r\n * @param error - callback triggered on error.\r\n * @param completed - callback triggered when observer is removed.\r\n *\r\n * @public\r\n */\r\nfunction onIdTokenChanged(auth, nextOrObserver, error, completed) {\r\n    return getModularInstance(auth).onIdTokenChanged(nextOrObserver, error, completed);\r\n}\r\n/**\r\n * Adds an observer for changes to the user's sign-in state.\r\n *\r\n * @remarks\r\n * To keep the old behavior, see {@link onIdTokenChanged}.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param nextOrObserver - callback triggered on change.\r\n * @param error - callback triggered on error.\r\n * @param completed - callback triggered when observer is removed.\r\n *\r\n * @public\r\n */\r\nfunction onAuthStateChanged(auth, nextOrObserver, error, completed) {\r\n    return getModularInstance(auth).onAuthStateChanged(nextOrObserver, error, completed);\r\n}\r\n/**\r\n * Sets the current language to the default device/browser preference.\r\n *\r\n * @param auth - The Auth instanec.\r\n *\r\n * @public\r\n */\r\nfunction useDeviceLanguage(auth) {\r\n    getModularInstance(auth).useDeviceLanguage();\r\n}\r\n/**\r\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\r\n * {@link Auth} instance.\r\n *\r\n * @remarks\r\n * A new instance copy of the user provided will be made and set as currentUser.\r\n *\r\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\r\n * like other sign in methods.\r\n *\r\n * The operation fails with an error if the user to be updated belongs to a different Firebase\r\n * project.\r\n *\r\n * @param auth - The Auth instance.\r\n * @param user - The new {@link User}.\r\n *\r\n * @public\r\n */\r\nfunction updateCurrentUser(auth, user) {\r\n    return getModularInstance(auth).updateCurrentUser(user);\r\n}\r\n/**\r\n * Signs out the current user.\r\n *\r\n * @param auth - The Auth instance.\r\n *\r\n * @public\r\n */\r\nfunction signOut(auth) {\r\n    return getModularInstance(auth).signOut();\r\n}\r\n/**\r\n * Deletes and signs out the user.\r\n *\r\n * @remarks\r\n * Important: this is a security-sensitive operation that requires the user to have recently\r\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\r\n * {@link reauthenticateWithCredential}.\r\n *\r\n * @param user - The user.\r\n *\r\n * @public\r\n */\r\nasync function deleteUser(user) {\r\n    return getModularInstance(user).delete();\r\n}\n\nclass MultiFactorSessionImpl {\r\n    constructor(type, credential) {\r\n        this.type = type;\r\n        this.credential = credential;\r\n    }\r\n    static _fromIdtoken(idToken) {\r\n        return new MultiFactorSessionImpl(\"enroll\" /* ENROLL */, idToken);\r\n    }\r\n    static _fromMfaPendingCredential(mfaPendingCredential) {\r\n        return new MultiFactorSessionImpl(\"signin\" /* SIGN_IN */, mfaPendingCredential);\r\n    }\r\n    toJSON() {\r\n        const key = this.type === \"enroll\" /* ENROLL */\r\n            ? 'idToken'\r\n            : 'pendingCredential';\r\n        return {\r\n            multiFactorSession: {\r\n                [key]: this.credential\r\n            }\r\n        };\r\n    }\r\n    static fromJSON(obj) {\r\n        var _a, _b;\r\n        if (obj === null || obj === void 0 ? void 0 : obj.multiFactorSession) {\r\n            if ((_a = obj.multiFactorSession) === null || _a === void 0 ? void 0 : _a.pendingCredential) {\r\n                return MultiFactorSessionImpl._fromMfaPendingCredential(obj.multiFactorSession.pendingCredential);\r\n            }\r\n            else if ((_b = obj.multiFactorSession) === null || _b === void 0 ? void 0 : _b.idToken) {\r\n                return MultiFactorSessionImpl._fromIdtoken(obj.multiFactorSession.idToken);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MultiFactorResolverImpl {\r\n    constructor(session, hints, signInResolver) {\r\n        this.session = session;\r\n        this.hints = hints;\r\n        this.signInResolver = signInResolver;\r\n    }\r\n    /** @internal */\r\n    static _fromError(authExtern, error) {\r\n        const auth = _castAuth(authExtern);\r\n        const hints = (error.serverResponse.mfaInfo || []).map(enrollment => MultiFactorInfoImpl._fromServerResponse(auth, enrollment));\r\n        _assert(error.serverResponse.mfaPendingCredential, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        const session = MultiFactorSessionImpl._fromMfaPendingCredential(error.serverResponse.mfaPendingCredential);\r\n        return new MultiFactorResolverImpl(session, hints, async (assertion) => {\r\n            const mfaResponse = await assertion._process(auth, session);\r\n            // Clear out the unneeded fields from the old login response\r\n            delete error.serverResponse.mfaInfo;\r\n            delete error.serverResponse.mfaPendingCredential;\r\n            // Use in the new token & refresh token in the old response\r\n            const idTokenResponse = Object.assign(Object.assign({}, error.serverResponse), { idToken: mfaResponse.idToken, refreshToken: mfaResponse.refreshToken });\r\n            // TODO: we should collapse this switch statement into UserCredentialImpl._forOperation and have it support the SIGN_IN case\r\n            switch (error.operationType) {\r\n                case \"signIn\" /* SIGN_IN */:\r\n                    const userCredential = await UserCredentialImpl._fromIdTokenResponse(auth, error.operationType, idTokenResponse);\r\n                    await auth._updateCurrentUser(userCredential.user);\r\n                    return userCredential;\r\n                case \"reauthenticate\" /* REAUTHENTICATE */:\r\n                    _assert(error.user, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n                    return UserCredentialImpl._forOperation(error.user, error.operationType, idTokenResponse);\r\n                default:\r\n                    _fail(auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n            }\r\n        });\r\n    }\r\n    async resolveSignIn(assertionExtern) {\r\n        const assertion = assertionExtern;\r\n        return this.signInResolver(assertion);\r\n    }\r\n}\r\n/**\r\n * Provides a {@link MultiFactorResolver} suitable for completion of a\r\n * multi-factor flow.\r\n *\r\n * @param auth - The auth instance.\r\n * @param error - The {@link MultiFactorError} raised during a sign-in, or\r\n * reauthentication operation.\r\n *\r\n * @public\r\n */\r\nfunction getMultiFactorResolver(auth, error) {\r\n    var _a;\r\n    const authModular = getModularInstance(auth);\r\n    const errorInternal = error;\r\n    _assert(error.operationType, authModular, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    _assert((_a = errorInternal.serverResponse) === null || _a === void 0 ? void 0 : _a.mfaPendingCredential, authModular, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    return MultiFactorResolverImpl._fromError(authModular, errorInternal);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction startEnrollPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v2/accounts/mfaEnrollment:start\" /* START_PHONE_MFA_ENROLLMENT */, Object.assign({ tenantId: auth.tenantId }, request));\r\n}\r\nfunction finalizeEnrollPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v2/accounts/mfaEnrollment:finalize\" /* FINALIZE_PHONE_MFA_ENROLLMENT */, Object.assign({ tenantId: auth.tenantId }, request));\r\n}\r\nfunction withdrawMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v2/accounts/mfaEnrollment:withdraw\" /* WITHDRAW_MFA */, Object.assign({ tenantId: auth.tenantId }, request));\r\n}\n\nclass MultiFactorUserImpl {\r\n    constructor(user) {\r\n        this.user = user;\r\n        this.enrolledFactors = [];\r\n        user._onReload(userInfo => {\r\n            if (userInfo.mfaInfo) {\r\n                this.enrolledFactors = userInfo.mfaInfo.map(enrollment => MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment));\r\n            }\r\n        });\r\n    }\r\n    static _fromUser(user) {\r\n        return new MultiFactorUserImpl(user);\r\n    }\r\n    async getSession() {\r\n        return MultiFactorSessionImpl._fromIdtoken(await this.user.getIdToken());\r\n    }\r\n    async enroll(assertionExtern, displayName) {\r\n        const assertion = assertionExtern;\r\n        const session = (await this.getSession());\r\n        const finalizeMfaResponse = await _logoutIfInvalidated(this.user, assertion._process(this.user.auth, session, displayName));\r\n        // New tokens will be issued after enrollment of the new second factors.\r\n        // They need to be updated on the user.\r\n        await this.user._updateTokensIfNecessary(finalizeMfaResponse);\r\n        // The user needs to be reloaded to get the new multi-factor information\r\n        // from server. USER_RELOADED event will be triggered and `enrolledFactors`\r\n        // will be updated.\r\n        return this.user.reload();\r\n    }\r\n    async unenroll(infoOrUid) {\r\n        const mfaEnrollmentId = typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\r\n        const idToken = await this.user.getIdToken();\r\n        const idTokenResponse = await _logoutIfInvalidated(this.user, withdrawMfa(this.user.auth, {\r\n            idToken,\r\n            mfaEnrollmentId\r\n        }));\r\n        // Remove the second factor from the user's list.\r\n        this.enrolledFactors = this.enrolledFactors.filter(({ uid }) => uid !== mfaEnrollmentId);\r\n        // Depending on whether the backend decided to revoke the user's session,\r\n        // the tokenResponse may be empty. If the tokens were not updated (and they\r\n        // are now invalid), reloading the user will discover this and invalidate\r\n        // the user's state accordingly.\r\n        await this.user._updateTokensIfNecessary(idTokenResponse);\r\n        try {\r\n            await this.user.reload();\r\n        }\r\n        catch (e) {\r\n            if (e.code !== `auth/${\"user-token-expired\" /* TOKEN_EXPIRED */}`) {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst multiFactorUserCache = new WeakMap();\r\n/**\r\n * The {@link MultiFactorUser} corresponding to the user.\r\n *\r\n * @remarks\r\n * This is used to access all multi-factor properties and operations related to the user.\r\n *\r\n * @param user - The user.\r\n *\r\n * @public\r\n */\r\nfunction multiFactor(user) {\r\n    const userModular = getModularInstance(user);\r\n    if (!multiFactorUserCache.has(userModular)) {\r\n        multiFactorUserCache.set(userModular, MultiFactorUserImpl._fromUser(userModular));\r\n    }\r\n    return multiFactorUserCache.get(userModular);\r\n}\n\nvar name = \"@firebase/auth-exp\";\nvar version = \"0.0.900-exp.d92a36260\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AuthInterop {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.internalListeners = new Map();\r\n    }\r\n    getUid() {\r\n        var _a;\r\n        this.assertAuthConfigured();\r\n        return ((_a = this.auth.currentUser) === null || _a === void 0 ? void 0 : _a.uid) || null;\r\n    }\r\n    async getToken(forceRefresh) {\r\n        this.assertAuthConfigured();\r\n        await this.auth._initializationPromise;\r\n        if (!this.auth.currentUser) {\r\n            return null;\r\n        }\r\n        const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\r\n        return { accessToken };\r\n    }\r\n    addAuthTokenListener(listener) {\r\n        this.assertAuthConfigured();\r\n        if (this.internalListeners.has(listener)) {\r\n            return;\r\n        }\r\n        const unsubscribe = this.auth.onIdTokenChanged(user => {\r\n            var _a;\r\n            listener(((_a = user) === null || _a === void 0 ? void 0 : _a.stsTokenManager.accessToken) || null);\r\n        });\r\n        this.internalListeners.set(listener, unsubscribe);\r\n        this.updateProactiveRefresh();\r\n    }\r\n    removeAuthTokenListener(listener) {\r\n        this.assertAuthConfigured();\r\n        const unsubscribe = this.internalListeners.get(listener);\r\n        if (!unsubscribe) {\r\n            return;\r\n        }\r\n        this.internalListeners.delete(listener);\r\n        unsubscribe();\r\n        this.updateProactiveRefresh();\r\n    }\r\n    assertAuthConfigured() {\r\n        _assert(this.auth._initializationPromise, \"dependent-sdk-initialized-before-auth\" /* DEPENDENT_SDK_INIT_BEFORE_AUTH */);\r\n    }\r\n    updateProactiveRefresh() {\r\n        if (this.internalListeners.size > 0) {\r\n            this.auth._startProactiveRefresh();\r\n        }\r\n        else {\r\n            this.auth._stopProactiveRefresh();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getVersionForPlatform(clientPlatform) {\r\n    switch (clientPlatform) {\r\n        case \"Node\" /* NODE */:\r\n            return 'node';\r\n        case \"ReactNative\" /* REACT_NATIVE */:\r\n            return 'rn';\r\n        case \"Worker\" /* WORKER */:\r\n            return 'webworker';\r\n        case \"Cordova\" /* CORDOVA */:\r\n            return 'cordova';\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n/** @internal */\r\nfunction registerAuth(clientPlatform) {\r\n    _registerComponent(new Component(\"auth-exp\" /* AUTH */, (container, { options: deps }) => {\r\n        const app = container.getProvider('app-exp').getImmediate();\r\n        const { apiKey, authDomain } = app.options;\r\n        return (app => {\r\n            _assert(apiKey && !apiKey.includes(':'), \"invalid-api-key\" /* INVALID_API_KEY */, { appName: app.name });\r\n            // Auth domain is optional if IdP sign in isn't being used\r\n            _assert(!(authDomain === null || authDomain === void 0 ? void 0 : authDomain.includes(':')), \"argument-error\" /* ARGUMENT_ERROR */, {\r\n                appName: app.name\r\n            });\r\n            const config = {\r\n                apiKey,\r\n                authDomain,\r\n                clientPlatform,\r\n                apiHost: \"identitytoolkit.googleapis.com\" /* API_HOST */,\r\n                tokenApiHost: \"securetoken.googleapis.com\" /* TOKEN_API_HOST */,\r\n                apiScheme: \"https\" /* API_SCHEME */,\r\n                sdkClientVersion: _getClientVersion(clientPlatform)\r\n            };\r\n            const authInstance = new AuthImpl(app, config);\r\n            _initializeAuthInstance(authInstance, deps);\r\n            return authInstance;\r\n        })(app);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        /**\r\n         * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\r\n         * For why we do this, See go/firebase-next-auth-init\r\n         */\r\n        .setInstantiationMode(\"EXPLICIT\" /* EXPLICIT */)\r\n        /**\r\n         * Because all firebase products that depend on auth depend on auth-internal directly,\r\n         * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\r\n         */\r\n        .setInstanceCreatedCallback((container, _instanceIdentifier, _instance) => {\r\n        const authInternalProvider = container.getProvider(\"auth-internal\" /* AUTH_INTERNAL */);\r\n        authInternalProvider.initialize();\r\n    }));\r\n    _registerComponent(new Component(\"auth-internal\" /* AUTH_INTERNAL */, container => {\r\n        const auth = _castAuth(container.getProvider(\"auth-exp\" /* AUTH */).getImmediate());\r\n        return (auth => new AuthInterop(auth))(auth);\r\n    }, \"PRIVATE\" /* PRIVATE */).setInstantiationMode(\"EXPLICIT\" /* EXPLICIT */));\r\n    registerVersion(name, version, getVersionForPlatform(clientPlatform));\r\n}\n\nconst STORAGE_AVAILABLE_KEY = '__sak';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// There are two different browser persistence types: local and session.\r\n// Both have the same implementation but use a different underlying storage\r\n// object.\r\nclass BrowserPersistenceClass {\r\n    constructor(storage, type) {\r\n        this.storage = storage;\r\n        this.type = type;\r\n    }\r\n    _isAvailable() {\r\n        try {\r\n            if (!this.storage) {\r\n                return Promise.resolve(false);\r\n            }\r\n            this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\r\n            this.storage.removeItem(STORAGE_AVAILABLE_KEY);\r\n            return Promise.resolve(true);\r\n        }\r\n        catch (_a) {\r\n            return Promise.resolve(false);\r\n        }\r\n    }\r\n    _set(key, value) {\r\n        this.storage.setItem(key, JSON.stringify(value));\r\n        return Promise.resolve();\r\n    }\r\n    _get(key) {\r\n        const json = this.storage.getItem(key);\r\n        return Promise.resolve(json ? JSON.parse(json) : null);\r\n    }\r\n    _remove(key) {\r\n        this.storage.removeItem(key);\r\n        return Promise.resolve();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _iframeCannotSyncWebStorage() {\r\n    const ua = getUA();\r\n    return _isSafari(ua) || _isIOS(ua);\r\n}\r\n// The polling period in case events are not supported\r\nconst _POLLING_INTERVAL_MS = 1000;\r\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\r\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\r\nclass BrowserLocalPersistence extends BrowserPersistenceClass {\r\n    constructor() {\r\n        super(window.localStorage, \"LOCAL\" /* LOCAL */);\r\n        this.listeners = {};\r\n        this.localCache = {};\r\n        // setTimeout return value is platform specific\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.pollTimer = null;\r\n        // Safari or iOS browser and embedded in an iframe.\r\n        this.safariLocalStorageNotSynced = _iframeCannotSyncWebStorage() && _isIframe();\r\n        // Whether to use polling instead of depending on window events\r\n        this.fallbackToPolling = _isMobileBrowser();\r\n        this.boundEventHandler = this.onStorageEvent.bind(this);\r\n    }\r\n    forAllChangedKeys(cb) {\r\n        // Check all keys with listeners on them.\r\n        for (const key of Object.keys(this.listeners)) {\r\n            // Get value from localStorage.\r\n            const newValue = this.storage.getItem(key);\r\n            const oldValue = this.localCache[key];\r\n            // If local map value does not match, trigger listener with storage event.\r\n            // Differentiate this simulated event from the real storage event.\r\n            if (newValue !== oldValue) {\r\n                cb(key, oldValue, newValue);\r\n            }\r\n        }\r\n    }\r\n    onStorageEvent(event, poll = false) {\r\n        // Key would be null in some situations, like when localStorage is cleared\r\n        if (!event.key) {\r\n            this.forAllChangedKeys((key, _oldValue, newValue) => {\r\n                this.notifyListeners(key, newValue);\r\n            });\r\n            return;\r\n        }\r\n        const key = event.key;\r\n        // Check the mechanism how this event was detected.\r\n        // The first event will dictate the mechanism to be used.\r\n        if (poll) {\r\n            // Environment detects storage changes via polling.\r\n            // Remove storage event listener to prevent possible event duplication.\r\n            this.detachListener();\r\n        }\r\n        else {\r\n            // Environment detects storage changes via storage event listener.\r\n            // Remove polling listener to prevent possible event duplication.\r\n            this.stopPolling();\r\n        }\r\n        // Safari embedded iframe. Storage event will trigger with the delta\r\n        // changes but no changes will be applied to the iframe localStorage.\r\n        if (this.safariLocalStorageNotSynced) {\r\n            // Get current iframe page value.\r\n            const storedValue = this.storage.getItem(key);\r\n            // Value not synchronized, synchronize manually.\r\n            if (event.newValue !== storedValue) {\r\n                if (event.newValue !== null) {\r\n                    // Value changed from current value.\r\n                    this.storage.setItem(key, event.newValue);\r\n                }\r\n                else {\r\n                    // Current value deleted.\r\n                    this.storage.removeItem(key);\r\n                }\r\n            }\r\n            else if (this.localCache[key] === event.newValue && !poll) {\r\n                // Already detected and processed, do not trigger listeners again.\r\n                return;\r\n            }\r\n        }\r\n        const triggerListeners = () => {\r\n            // Keep local map up to date in case storage event is triggered before\r\n            // poll.\r\n            const storedValue = this.storage.getItem(key);\r\n            if (!poll && this.localCache[key] === storedValue) {\r\n                // Real storage event which has already been detected, do nothing.\r\n                // This seems to trigger in some IE browsers for some reason.\r\n                return;\r\n            }\r\n            this.notifyListeners(key, storedValue);\r\n        };\r\n        const storedValue = this.storage.getItem(key);\r\n        if (_isIE10() &&\r\n            storedValue !== event.newValue &&\r\n            event.newValue !== event.oldValue) {\r\n            // IE 10 has this weird bug where a storage event would trigger with the\r\n            // correct key, oldValue and newValue but localStorage.getItem(key) does\r\n            // not yield the updated value until a few milliseconds. This ensures\r\n            // this recovers from that situation.\r\n            setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\r\n        }\r\n        else {\r\n            triggerListeners();\r\n        }\r\n    }\r\n    notifyListeners(key, value) {\r\n        this.localCache[key] = value;\r\n        const listeners = this.listeners[key];\r\n        if (listeners) {\r\n            for (const listener of Array.from(listeners)) {\r\n                listener(value ? JSON.parse(value) : value);\r\n            }\r\n        }\r\n    }\r\n    startPolling() {\r\n        this.stopPolling();\r\n        this.pollTimer = setInterval(() => {\r\n            this.forAllChangedKeys((key, oldValue, newValue) => {\r\n                this.onStorageEvent(new StorageEvent('storage', {\r\n                    key,\r\n                    oldValue,\r\n                    newValue\r\n                }), \r\n                /* poll */ true);\r\n            });\r\n        }, _POLLING_INTERVAL_MS);\r\n    }\r\n    stopPolling() {\r\n        if (this.pollTimer) {\r\n            clearInterval(this.pollTimer);\r\n            this.pollTimer = null;\r\n        }\r\n    }\r\n    attachListener() {\r\n        window.addEventListener('storage', this.boundEventHandler);\r\n    }\r\n    detachListener() {\r\n        window.removeEventListener('storage', this.boundEventHandler);\r\n    }\r\n    _addListener(key, listener) {\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            // Whether browser can detect storage event when it had already been pushed to the background.\r\n            // This may happen in some mobile browsers. A localStorage change in the foreground window\r\n            // will not be detected in the background window via the storage event.\r\n            // This was detected in iOS 7.x mobile browsers\r\n            if (this.fallbackToPolling) {\r\n                this.startPolling();\r\n            }\r\n            else {\r\n                this.attachListener();\r\n            }\r\n        }\r\n        if (!this.listeners[key]) {\r\n            this.listeners[key] = new Set();\r\n            // Populate the cache to avoid spuriously triggering on first poll.\r\n            this.localCache[key] = this.storage.getItem(key);\r\n        }\r\n        this.listeners[key].add(listener);\r\n    }\r\n    _removeListener(key, listener) {\r\n        if (this.listeners[key]) {\r\n            this.listeners[key].delete(listener);\r\n            if (this.listeners[key].size === 0) {\r\n                delete this.listeners[key];\r\n            }\r\n        }\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            this.detachListener();\r\n            this.stopPolling();\r\n        }\r\n    }\r\n    // Update local cache on base operations:\r\n    async _set(key, value) {\r\n        await super._set(key, value);\r\n        this.localCache[key] = JSON.stringify(value);\r\n    }\r\n    async _get(key) {\r\n        const value = await super._get(key);\r\n        this.localCache[key] = JSON.stringify(value);\r\n        return value;\r\n    }\r\n    async _remove(key) {\r\n        await super._remove(key);\r\n        delete this.localCache[key];\r\n    }\r\n}\r\nBrowserLocalPersistence.type = 'LOCAL';\r\n/**\r\n * An implementation of {@link Persistence} of type 'LOCAL' using `localStorage`\r\n * for the underlying storage.\r\n *\r\n * @public\r\n */\r\nconst browserLocalPersistence = BrowserLocalPersistence;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\r\n *\r\n * @param promises - Array of promises to wait on.\r\n */\r\nfunction _allSettled(promises) {\r\n    return Promise.all(promises.map(async (promise) => {\r\n        try {\r\n            const value = await promise;\r\n            return {\r\n                fulfilled: true,\r\n                value\r\n            };\r\n        }\r\n        catch (reason) {\r\n            return {\r\n                fulfilled: false,\r\n                reason\r\n            };\r\n        }\r\n    }));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface class for receiving messages.\r\n *\r\n */\r\nclass Receiver {\r\n    constructor(eventTarget) {\r\n        this.eventTarget = eventTarget;\r\n        this.handlersMap = {};\r\n        this.boundEventHandler = this.handleEvent.bind(this);\r\n    }\r\n    /**\r\n     * Obtain an instance of a Receiver for a given event target, if none exists it will be created.\r\n     *\r\n     * @param eventTarget - An event target (such as window or self) through which the underlying\r\n     * messages will be received.\r\n     */\r\n    static _getInstance(eventTarget) {\r\n        // The results are stored in an array since objects can't be keys for other\r\n        // objects. In addition, setting a unique property on an event target as a\r\n        // hash map key may not be allowed due to CORS restrictions.\r\n        const existingInstance = this.receivers.find(receiver => receiver.isListeningto(eventTarget));\r\n        if (existingInstance) {\r\n            return existingInstance;\r\n        }\r\n        const newInstance = new Receiver(eventTarget);\r\n        this.receivers.push(newInstance);\r\n        return newInstance;\r\n    }\r\n    isListeningto(eventTarget) {\r\n        return this.eventTarget === eventTarget;\r\n    }\r\n    /**\r\n     * Fans out a MessageEvent to the appropriate listeners.\r\n     *\r\n     * @remarks\r\n     * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have\r\n     * finished processing.\r\n     *\r\n     * @param event - The MessageEvent.\r\n     *\r\n     */\r\n    async handleEvent(event) {\r\n        const messageEvent = event;\r\n        const { eventId, eventType, data } = messageEvent.data;\r\n        const handlers = this.handlersMap[eventType];\r\n        if (!(handlers === null || handlers === void 0 ? void 0 : handlers.size)) {\r\n            return;\r\n        }\r\n        messageEvent.ports[0].postMessage({\r\n            status: \"ack\" /* ACK */,\r\n            eventId,\r\n            eventType\r\n        });\r\n        const promises = Array.from(handlers).map(async (handler) => handler(messageEvent.origin, data));\r\n        const response = await _allSettled(promises);\r\n        messageEvent.ports[0].postMessage({\r\n            status: \"done\" /* DONE */,\r\n            eventId,\r\n            eventType,\r\n            response\r\n        });\r\n    }\r\n    /**\r\n     * Subscribe an event handler for a particular event.\r\n     *\r\n     * @param eventType - Event name to subscribe to.\r\n     * @param eventHandler - The event handler which should receive the events.\r\n     *\r\n     */\r\n    _subscribe(eventType, eventHandler) {\r\n        if (Object.keys(this.handlersMap).length === 0) {\r\n            this.eventTarget.addEventListener('message', this.boundEventHandler);\r\n        }\r\n        if (!this.handlersMap[eventType]) {\r\n            this.handlersMap[eventType] = new Set();\r\n        }\r\n        this.handlersMap[eventType].add(eventHandler);\r\n    }\r\n    /**\r\n     * Unsubscribe an event handler from a particular event.\r\n     *\r\n     * @param eventType - Event name to unsubscribe from.\r\n     * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.\r\n     *\r\n     */\r\n    _unsubscribe(eventType, eventHandler) {\r\n        if (this.handlersMap[eventType] && eventHandler) {\r\n            this.handlersMap[eventType].delete(eventHandler);\r\n        }\r\n        if (!eventHandler || this.handlersMap[eventType].size === 0) {\r\n            delete this.handlersMap[eventType];\r\n        }\r\n        if (Object.keys(this.handlersMap).length === 0) {\r\n            this.eventTarget.removeEventListener('message', this.boundEventHandler);\r\n        }\r\n    }\r\n}\r\nReceiver.receivers = [];\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction generateEventId(prefix = '', digits = 20) {\r\n    return `${prefix}${Math.floor(Math.random() * Math.pow(10, digits))}`;\r\n}\r\n/**\r\n * Interface for sending messages and waiting for a completion response.\r\n *\r\n */\r\nclass Sender {\r\n    constructor(target) {\r\n        this.target = target;\r\n        this.handlers = new Set();\r\n    }\r\n    /**\r\n     * Unsubscribe the handler and remove it from our tracking Set.\r\n     *\r\n     * @param handler - The handler to unsubscribe.\r\n     */\r\n    removeMessageHandler(handler) {\r\n        if (handler.messageChannel) {\r\n            handler.messageChannel.port1.removeEventListener('message', handler.onMessage);\r\n            handler.messageChannel.port1.close();\r\n        }\r\n        this.handlers.delete(handler);\r\n    }\r\n    /**\r\n     * Send a message to the Receiver located at {@link target}.\r\n     *\r\n     * @remarks\r\n     * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\r\n     * receiver has had a chance to fully process the event.\r\n     *\r\n     * @param eventType - Type of event to send.\r\n     * @param data - The payload of the event.\r\n     * @param timeout - Timeout for waiting on an ACK from the receiver.\r\n     *\r\n     * @returns An array of settled promises from all the handlers that were listening on the receiver.\r\n     */\r\n    async _send(eventType, data, timeout = 50 /* ACK */) {\r\n        const messageChannel = typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\r\n        if (!messageChannel) {\r\n            throw new Error(\"connection_unavailable\" /* CONNECTION_UNAVAILABLE */);\r\n        }\r\n        // Node timers and browser timers return fundamentally different types.\r\n        // We don't actually care what the value is but TS won't accept unknown and\r\n        // we can't cast properly in both environments.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        let completionTimer;\r\n        let handler;\r\n        return new Promise((resolve, reject) => {\r\n            const eventId = generateEventId();\r\n            messageChannel.port1.start();\r\n            const ackTimer = setTimeout(() => {\r\n                reject(new Error(\"unsupported_event\" /* UNSUPPORTED_EVENT */));\r\n            }, timeout);\r\n            handler = {\r\n                messageChannel,\r\n                onMessage(event) {\r\n                    const messageEvent = event;\r\n                    if (messageEvent.data.eventId !== eventId) {\r\n                        return;\r\n                    }\r\n                    switch (messageEvent.data.status) {\r\n                        case \"ack\" /* ACK */:\r\n                            // The receiver should ACK first.\r\n                            clearTimeout(ackTimer);\r\n                            completionTimer = setTimeout(() => {\r\n                                reject(new Error(\"timeout\" /* TIMEOUT */));\r\n                            }, 3000 /* COMPLETION */);\r\n                            break;\r\n                        case \"done\" /* DONE */:\r\n                            // Once the receiver's handlers are finished we will get the results.\r\n                            clearTimeout(completionTimer);\r\n                            resolve(messageEvent.data.response);\r\n                            break;\r\n                        default:\r\n                            clearTimeout(ackTimer);\r\n                            clearTimeout(completionTimer);\r\n                            reject(new Error(\"invalid_response\" /* INVALID_RESPONSE */));\r\n                            break;\r\n                    }\r\n                }\r\n            };\r\n            this.handlers.add(handler);\r\n            messageChannel.port1.addEventListener('message', handler.onMessage);\r\n            this.target.postMessage({\r\n                eventType,\r\n                eventId,\r\n                data\r\n            }, [messageChannel.port2]);\r\n        }).finally(() => {\r\n            if (handler) {\r\n                this.removeMessageHandler(handler);\r\n            }\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Lazy accessor for window, since the compat layer won't tree shake this out,\r\n * we need to make sure not to mess with window unless we have to\r\n */\r\nfunction _window() {\r\n    return window;\r\n}\r\nfunction _setWindowLocation(url) {\r\n    _window().location.href = url;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _isWorker() {\r\n    return (typeof _window()['WorkerGlobalScope'] !== 'undefined' &&\r\n        typeof _window()['importScripts'] === 'function');\r\n}\r\nasync function _getActiveServiceWorker() {\r\n    if (!(navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker)) {\r\n        return null;\r\n    }\r\n    try {\r\n        const registration = await navigator.serviceWorker.ready;\r\n        return registration.active;\r\n    }\r\n    catch (_a) {\r\n        return null;\r\n    }\r\n}\r\nfunction _getServiceWorkerController() {\r\n    var _a;\r\n    return ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker) === null || _a === void 0 ? void 0 : _a.controller) || null;\r\n}\r\nfunction _getWorkerGlobalScope() {\r\n    return _isWorker() ? self : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebaseLocalStorageDb';\r\nconst DB_VERSION = 1;\r\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\r\nconst DB_DATA_KEYPATH = 'fbase_key';\r\n/**\r\n * Promise wrapper for IDBRequest\r\n *\r\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\r\n *\r\n */\r\nclass DBPromise {\r\n    constructor(request) {\r\n        this.request = request;\r\n    }\r\n    toPromise() {\r\n        return new Promise((resolve, reject) => {\r\n            this.request.addEventListener('success', () => {\r\n                resolve(this.request.result);\r\n            });\r\n            this.request.addEventListener('error', () => {\r\n                reject(this.request.error);\r\n            });\r\n        });\r\n    }\r\n}\r\nfunction getObjectStore(db, isReadWrite) {\r\n    return db\r\n        .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\r\n        .objectStore(DB_OBJECTSTORE_NAME);\r\n}\r\nfunction _deleteDatabase() {\r\n    const request = indexedDB.deleteDatabase(DB_NAME);\r\n    return new DBPromise(request).toPromise();\r\n}\r\nfunction _openDatabase() {\r\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n    return new Promise((resolve, reject) => {\r\n        request.addEventListener('error', () => {\r\n            reject(request.error);\r\n        });\r\n        request.addEventListener('upgradeneeded', () => {\r\n            const db = request.result;\r\n            try {\r\n                db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n        request.addEventListener('success', async () => {\r\n            const db = request.result;\r\n            // Strange bug that occurs in Firefox when multiple tabs are opened at the\r\n            // same time. The only way to recover seems to be deleting the database\r\n            // and re-initializing it.\r\n            // https://github.com/firebase/firebase-js-sdk/issues/634\r\n            if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\r\n                await _deleteDatabase();\r\n                return _openDatabase();\r\n            }\r\n            else {\r\n                resolve(db);\r\n            }\r\n        });\r\n    });\r\n}\r\nasync function _putObject(db, key, value) {\r\n    const request = getObjectStore(db, true).put({\r\n        [DB_DATA_KEYPATH]: key,\r\n        value\r\n    });\r\n    return new DBPromise(request).toPromise();\r\n}\r\nasync function getObject(db, key) {\r\n    const request = getObjectStore(db, false).get(key);\r\n    const data = await new DBPromise(request).toPromise();\r\n    return data === undefined ? null : data.value;\r\n}\r\nfunction _deleteObject(db, key) {\r\n    const request = getObjectStore(db, true).delete(key);\r\n    return new DBPromise(request).toPromise();\r\n}\r\nconst _POLLING_INTERVAL_MS$1 = 800;\r\nconst _TRANSACTION_RETRY_COUNT = 3;\r\nclass IndexedDBLocalPersistence {\r\n    constructor() {\r\n        this.type = \"LOCAL\" /* LOCAL */;\r\n        this.listeners = {};\r\n        this.localCache = {};\r\n        // setTimeout return value is platform specific\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.pollTimer = null;\r\n        this.pendingWrites = 0;\r\n        this.receiver = null;\r\n        this.sender = null;\r\n        this.serviceWorkerReceiverAvailable = false;\r\n        this.activeServiceWorker = null;\r\n        // Fire & forget the service worker registration as it may never resolve\r\n        this._workerInitializationPromise = this.initializeServiceWorkerMessaging().then(() => { }, () => { });\r\n    }\r\n    async _openDb() {\r\n        if (this.db) {\r\n            return this.db;\r\n        }\r\n        this.db = await _openDatabase();\r\n        return this.db;\r\n    }\r\n    async _withRetries(op) {\r\n        let numAttempts = 0;\r\n        while (true) {\r\n            try {\r\n                const db = await this._openDb();\r\n                return await op(db);\r\n            }\r\n            catch (e) {\r\n                if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\r\n                    throw e;\r\n                }\r\n                if (this.db) {\r\n                    this.db.close();\r\n                    this.db = undefined;\r\n                }\r\n                // TODO: consider adding exponential backoff\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\r\n     * postMessage interface to send these events to the worker ourselves.\r\n     */\r\n    async initializeServiceWorkerMessaging() {\r\n        return _isWorker() ? this.initializeReceiver() : this.initializeSender();\r\n    }\r\n    /**\r\n     * As the worker we should listen to events from the main window.\r\n     */\r\n    async initializeReceiver() {\r\n        this.receiver = Receiver._getInstance(_getWorkerGlobalScope());\r\n        // Refresh from persistence if we receive a KeyChanged message.\r\n        this.receiver._subscribe(\"keyChanged\" /* KEY_CHANGED */, async (_origin, data) => {\r\n            const keys = await this._poll();\r\n            return {\r\n                keyProcessed: keys.includes(data.key)\r\n            };\r\n        });\r\n        // Let the sender know that we are listening so they give us more timeout.\r\n        this.receiver._subscribe(\"ping\" /* PING */, async (_origin, _data) => {\r\n            return [\"keyChanged\" /* KEY_CHANGED */];\r\n        });\r\n    }\r\n    /**\r\n     * As the main window, we should let the worker know when keys change (set and remove).\r\n     *\r\n     * @remarks\r\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\r\n     * may not resolve.\r\n     */\r\n    async initializeSender() {\r\n        var _a, _b;\r\n        // Check to see if there's an active service worker.\r\n        this.activeServiceWorker = await _getActiveServiceWorker();\r\n        if (!this.activeServiceWorker) {\r\n            return;\r\n        }\r\n        this.sender = new Sender(this.activeServiceWorker);\r\n        // Ping the service worker to check what events they can handle.\r\n        const results = await this.sender._send(\"ping\" /* PING */, {}, 800 /* LONG_ACK */);\r\n        if (!results) {\r\n            return;\r\n        }\r\n        if (((_a = results[0]) === null || _a === void 0 ? void 0 : _a.fulfilled) &&\r\n            ((_b = results[0]) === null || _b === void 0 ? void 0 : _b.value.includes(\"keyChanged\" /* KEY_CHANGED */))) {\r\n            this.serviceWorkerReceiverAvailable = true;\r\n        }\r\n    }\r\n    /**\r\n     * Let the worker know about a changed key, the exact key doesn't technically matter since the\r\n     * worker will just trigger a full sync anyway.\r\n     *\r\n     * @remarks\r\n     * For now, we only support one service worker per page.\r\n     *\r\n     * @param key - Storage key which changed.\r\n     */\r\n    async notifyServiceWorker(key) {\r\n        if (!this.sender ||\r\n            !this.activeServiceWorker ||\r\n            _getServiceWorkerController() !== this.activeServiceWorker) {\r\n            return;\r\n        }\r\n        try {\r\n            await this.sender._send(\"keyChanged\" /* KEY_CHANGED */, { key }, \r\n            // Use long timeout if receiver has previously responded to a ping from us.\r\n            this.serviceWorkerReceiverAvailable\r\n                ? 800 /* LONG_ACK */\r\n                : 50 /* ACK */);\r\n        }\r\n        catch (_a) {\r\n            // This is a best effort approach. Ignore errors.\r\n        }\r\n    }\r\n    async _isAvailable() {\r\n        try {\r\n            if (!indexedDB) {\r\n                return false;\r\n            }\r\n            const db = await _openDatabase();\r\n            await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\r\n            await _deleteObject(db, STORAGE_AVAILABLE_KEY);\r\n            return true;\r\n        }\r\n        catch (_a) { }\r\n        return false;\r\n    }\r\n    async _withPendingWrite(write) {\r\n        this.pendingWrites++;\r\n        try {\r\n            await write();\r\n        }\r\n        finally {\r\n            this.pendingWrites--;\r\n        }\r\n    }\r\n    async _set(key, value) {\r\n        return this._withPendingWrite(async () => {\r\n            await this._withRetries((db) => _putObject(db, key, value));\r\n            this.localCache[key] = value;\r\n            return this.notifyServiceWorker(key);\r\n        });\r\n    }\r\n    async _get(key) {\r\n        const obj = (await this._withRetries((db) => getObject(db, key)));\r\n        this.localCache[key] = obj;\r\n        return obj;\r\n    }\r\n    async _remove(key) {\r\n        return this._withPendingWrite(async () => {\r\n            await this._withRetries((db) => _deleteObject(db, key));\r\n            delete this.localCache[key];\r\n            return this.notifyServiceWorker(key);\r\n        });\r\n    }\r\n    async _poll() {\r\n        // TODO: check if we need to fallback if getAll is not supported\r\n        const result = await this._withRetries((db) => {\r\n            const getAllRequest = getObjectStore(db, false).getAll();\r\n            return new DBPromise(getAllRequest).toPromise();\r\n        });\r\n        if (!result) {\r\n            return [];\r\n        }\r\n        // If we have pending writes in progress abort, we'll get picked up on the next poll\r\n        if (this.pendingWrites !== 0) {\r\n            return [];\r\n        }\r\n        const keys = [];\r\n        const keysInResult = new Set();\r\n        for (const { fbase_key: key, value } of result) {\r\n            keysInResult.add(key);\r\n            if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\r\n                this.notifyListeners(key, value);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (const localKey of Object.keys(this.localCache)) {\r\n            if (this.localCache[localKey] && !keysInResult.has(localKey)) {\r\n                // Deleted\r\n                this.notifyListeners(localKey, null);\r\n                keys.push(localKey);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    notifyListeners(key, newValue) {\r\n        this.localCache[key] = newValue;\r\n        const listeners = this.listeners[key];\r\n        if (listeners) {\r\n            for (const listener of Array.from(listeners)) {\r\n                listener(newValue);\r\n            }\r\n        }\r\n    }\r\n    startPolling() {\r\n        this.stopPolling();\r\n        this.pollTimer = setInterval(async () => this._poll(), _POLLING_INTERVAL_MS$1);\r\n    }\r\n    stopPolling() {\r\n        if (this.pollTimer) {\r\n            clearInterval(this.pollTimer);\r\n            this.pollTimer = null;\r\n        }\r\n    }\r\n    _addListener(key, listener) {\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            this.startPolling();\r\n        }\r\n        if (!this.listeners[key]) {\r\n            this.listeners[key] = new Set();\r\n            // Populate the cache to avoid spuriously triggering on first poll.\r\n            void this._get(key); // This can happen in the background async and we can return immediately.\r\n        }\r\n        this.listeners[key].add(listener);\r\n    }\r\n    _removeListener(key, listener) {\r\n        if (this.listeners[key]) {\r\n            this.listeners[key].delete(listener);\r\n            if (this.listeners[key].size === 0) {\r\n                delete this.listeners[key];\r\n            }\r\n        }\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            this.stopPolling();\r\n        }\r\n    }\r\n}\r\nIndexedDBLocalPersistence.type = 'LOCAL';\r\n/**\r\n * An implementation of {@link Persistence} of type 'LOCAL' using `indexedDB`\r\n * for the underlying storage.\r\n *\r\n * @public\r\n */\r\nconst indexedDBLocalPersistence = IndexedDBLocalPersistence;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// The amount of time to store the UIDs of seen events; this is\r\n// set to 10 min by default\r\nconst EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\r\nclass AuthEventManager {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.cachedEventUids = new Set();\r\n        this.consumers = new Set();\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n        this.lastProcessedEventTime = Date.now();\r\n    }\r\n    registerConsumer(authEventConsumer) {\r\n        this.consumers.add(authEventConsumer);\r\n        if (this.queuedRedirectEvent &&\r\n            this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)) {\r\n            this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\r\n            this.saveEventToCache(this.queuedRedirectEvent);\r\n            this.queuedRedirectEvent = null;\r\n        }\r\n    }\r\n    unregisterConsumer(authEventConsumer) {\r\n        this.consumers.delete(authEventConsumer);\r\n    }\r\n    onEvent(event) {\r\n        // Check if the event has already been handled\r\n        if (this.hasEventBeenHandled(event)) {\r\n            return false;\r\n        }\r\n        let handled = false;\r\n        this.consumers.forEach(consumer => {\r\n            if (this.isEventForConsumer(event, consumer)) {\r\n                handled = true;\r\n                this.sendToConsumer(event, consumer);\r\n                this.saveEventToCache(event);\r\n            }\r\n        });\r\n        if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\r\n            // If we've already seen a redirect before, or this is a popup event,\r\n            // bail now\r\n            return handled;\r\n        }\r\n        this.hasHandledPotentialRedirect = true;\r\n        // If the redirect wasn't handled, hang on to it\r\n        if (!handled) {\r\n            this.queuedRedirectEvent = event;\r\n            handled = true;\r\n        }\r\n        return handled;\r\n    }\r\n    sendToConsumer(event, consumer) {\r\n        var _a;\r\n        if (event.error && !isNullRedirectEvent(event)) {\r\n            const code = ((_a = event.error.code) === null || _a === void 0 ? void 0 : _a.split('auth/')[1]) ||\r\n                \"internal-error\" /* INTERNAL_ERROR */;\r\n            consumer.onError(_createError(this.auth, code));\r\n        }\r\n        else {\r\n            consumer.onAuthEvent(event);\r\n        }\r\n    }\r\n    isEventForConsumer(event, consumer) {\r\n        const eventIdMatches = consumer.eventId === null ||\r\n            (!!event.eventId && event.eventId === consumer.eventId);\r\n        return consumer.filter.includes(event.type) && eventIdMatches;\r\n    }\r\n    hasEventBeenHandled(event) {\r\n        if (Date.now() - this.lastProcessedEventTime >=\r\n            EVENT_DUPLICATION_CACHE_DURATION_MS) {\r\n            this.cachedEventUids.clear();\r\n        }\r\n        return this.cachedEventUids.has(eventUid(event));\r\n    }\r\n    saveEventToCache(event) {\r\n        this.cachedEventUids.add(eventUid(event));\r\n        this.lastProcessedEventTime = Date.now();\r\n    }\r\n}\r\nfunction eventUid(e) {\r\n    return [e.type, e.eventId, e.sessionId, e.tenantId].filter(v => v).join('-');\r\n}\r\nfunction isNullRedirectEvent({ type, error }) {\r\n    return (type === \"unknown\" /* UNKNOWN */ &&\r\n        (error === null || error === void 0 ? void 0 : error.code) === `auth/${\"no-auth-event\" /* NO_AUTH_EVENT */}`);\r\n}\r\nfunction isRedirectEvent(event) {\r\n    switch (event.type) {\r\n        case \"signInViaRedirect\" /* SIGN_IN_VIA_REDIRECT */:\r\n        case \"linkViaRedirect\" /* LINK_VIA_REDIRECT */:\r\n        case \"reauthViaRedirect\" /* REAUTH_VIA_REDIRECT */:\r\n            return true;\r\n        case \"unknown\" /* UNKNOWN */:\r\n            return isNullRedirectEvent(event);\r\n        default:\r\n            return false;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _generateEventId(prefix) {\r\n    return `${prefix ? prefix : ''}${Math.floor(Math.random() * 1000000000)}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _getProjectConfig(auth) {\r\n    return _performApiRequest(auth, \"GET\" /* GET */, \"/v1/projects\" /* GET_PROJECT_CONFIG */, {});\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\r\nconst HTTP_REGEX = /^https?/;\r\nasync function _validateOrigin(auth) {\r\n    // Skip origin validation if we are in an emulated environment\r\n    if (auth.config.emulator) {\r\n        return;\r\n    }\r\n    const { authorizedDomains } = await _getProjectConfig(auth);\r\n    for (const domain of authorizedDomains) {\r\n        try {\r\n            if (matchDomain(domain)) {\r\n                return;\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // Do nothing if there's a URL error; just continue searching\r\n        }\r\n    }\r\n    // In the old SDK, this error also provides helpful messages.\r\n    _fail(auth, \"unauthorized-domain\" /* INVALID_ORIGIN */);\r\n}\r\nfunction matchDomain(expected) {\r\n    const currentUrl = _getCurrentUrl();\r\n    const { protocol, hostname } = new URL(currentUrl);\r\n    if (expected.startsWith('chrome-extension://')) {\r\n        const ceUrl = new URL(expected);\r\n        if (ceUrl.hostname === '' && hostname === '') {\r\n            // For some reason we're not parsing chrome URLs properly\r\n            return (protocol === 'chrome-extension:' &&\r\n                expected.replace('chrome-extension://', '') ===\r\n                    currentUrl.replace('chrome-extension://', ''));\r\n        }\r\n        return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\r\n    }\r\n    if (!HTTP_REGEX.test(protocol)) {\r\n        return false;\r\n    }\r\n    if (IP_ADDRESS_REGEX.test(expected)) {\r\n        // The domain has to be exactly equal to the pattern, as an IP domain will\r\n        // only contain the IP, no extra character.\r\n        return hostname === expected;\r\n    }\r\n    // Dots in pattern should be escaped.\r\n    const escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\r\n    // Non ip address domains.\r\n    // domain.com = *.domain.com OR domain.com\r\n    const re = new RegExp('^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$', 'i');\r\n    return re.test(hostname);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getScriptParentElement() {\r\n    var _a, _b;\r\n    return (_b = (_a = document.getElementsByTagName('head')) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : document;\r\n}\r\nfunction _loadJS(url) {\r\n    // TODO: consider adding timeout support & cancellation\r\n    return new Promise((resolve, reject) => {\r\n        const el = document.createElement('script');\r\n        el.setAttribute('src', url);\r\n        el.onload = resolve;\r\n        el.onerror = reject;\r\n        el.type = 'text/javascript';\r\n        el.charset = 'UTF-8';\r\n        getScriptParentElement().appendChild(el);\r\n    });\r\n}\r\nfunction _generateCallbackName(prefix) {\r\n    return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst NETWORK_TIMEOUT = new Delay(30000, 60000);\r\n/**\r\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\r\n * it will stop working after a retrial. This is a hack to fix this issue.\r\n */\r\nfunction resetUnloadedGapiModules() {\r\n    // Clear last failed gapi.load state to force next gapi.load to first\r\n    // load the failed gapi.iframes module.\r\n    // Get gapix.beacon context.\r\n    const beacon = _window().___jsl;\r\n    // Get current hint.\r\n    if (beacon === null || beacon === void 0 ? void 0 : beacon.H) {\r\n        // Get gapi hint.\r\n        for (const hint of Object.keys(beacon.H)) {\r\n            // Requested modules.\r\n            beacon.H[hint].r = beacon.H[hint].r || [];\r\n            // Loaded modules.\r\n            beacon.H[hint].L = beacon.H[hint].L || [];\r\n            // Set requested modules to a copy of the loaded modules.\r\n            beacon.H[hint].r = [...beacon.H[hint].L];\r\n            // Clear pending callbacks.\r\n            if (beacon.CP) {\r\n                for (let i = 0; i < beacon.CP.length; i++) {\r\n                    // Remove all failed pending callbacks.\r\n                    beacon.CP[i] = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction loadGapi(auth) {\r\n    return new Promise((resolve, reject) => {\r\n        var _a, _b, _c;\r\n        // Function to run when gapi.load is ready.\r\n        function loadGapiIframe() {\r\n            // The developer may have tried to previously run gapi.load and failed.\r\n            // Run this to fix that.\r\n            resetUnloadedGapiModules();\r\n            gapi.load('gapi.iframes', {\r\n                callback: () => {\r\n                    resolve(gapi.iframes.getContext());\r\n                },\r\n                ontimeout: () => {\r\n                    // The above reset may be sufficient, but having this reset after\r\n                    // failure ensures that if the developer calls gapi.load after the\r\n                    // connection is re-established and before another attempt to embed\r\n                    // the iframe, it would work and would not be broken because of our\r\n                    // failed attempt.\r\n                    // Timeout when gapi.iframes.Iframe not loaded.\r\n                    resetUnloadedGapiModules();\r\n                    reject(_createError(auth, \"network-request-failed\" /* NETWORK_REQUEST_FAILED */));\r\n                },\r\n                timeout: NETWORK_TIMEOUT.get()\r\n            });\r\n        }\r\n        if ((_b = (_a = _window().gapi) === null || _a === void 0 ? void 0 : _a.iframes) === null || _b === void 0 ? void 0 : _b.Iframe) {\r\n            // If gapi.iframes.Iframe available, resolve.\r\n            resolve(gapi.iframes.getContext());\r\n        }\r\n        else if (!!((_c = _window().gapi) === null || _c === void 0 ? void 0 : _c.load)) {\r\n            // Gapi loader ready, load gapi.iframes.\r\n            loadGapiIframe();\r\n        }\r\n        else {\r\n            // Create a new iframe callback when this is called so as not to overwrite\r\n            // any previous defined callback. This happens if this method is called\r\n            // multiple times in parallel and could result in the later callback\r\n            // overwriting the previous one. This would end up with a iframe\r\n            // timeout.\r\n            const cbName = _generateCallbackName('iframefcb');\r\n            // GApi loader not available, dynamically load platform.js.\r\n            _window()[cbName] = () => {\r\n                // GApi loader should be ready.\r\n                if (!!gapi.load) {\r\n                    loadGapiIframe();\r\n                }\r\n                else {\r\n                    // Gapi loader failed, throw error.\r\n                    reject(_createError(auth, \"network-request-failed\" /* NETWORK_REQUEST_FAILED */));\r\n                }\r\n            };\r\n            // Load GApi loader.\r\n            return _loadJS(`https://apis.google.com/js/api.js?onload=${cbName}`);\r\n        }\r\n    }).catch(error => {\r\n        // Reset cached promise to allow for retrial.\r\n        cachedGApiLoader = null;\r\n        throw error;\r\n    });\r\n}\r\nlet cachedGApiLoader = null;\r\nfunction _loadGapi(auth) {\r\n    cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\r\n    return cachedGApiLoader;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PING_TIMEOUT = new Delay(5000, 15000);\r\nconst IFRAME_PATH = '__/auth/iframe';\r\nconst EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\r\nconst IFRAME_ATTRIBUTES = {\r\n    style: {\r\n        position: 'absolute',\r\n        top: '-100px',\r\n        width: '1px',\r\n        height: '1px'\r\n    }\r\n};\r\n// Map from apiHost to endpoint ID for passing into iframe. In current SDK, apiHost can be set to\r\n// anything (not from a list of endpoints with IDs as in legacy), so this is the closest we can get.\r\nconst EID_FROM_APIHOST = new Map([\r\n    [\"identitytoolkit.googleapis.com\" /* API_HOST */, 'p'],\r\n    ['staging-identitytoolkit.sandbox.googleapis.com', 's'],\r\n    ['test-identitytoolkit.sandbox.googleapis.com', 't'] // test\r\n]);\r\nfunction getIframeUrl(auth) {\r\n    const config = auth.config;\r\n    _assert(config.authDomain, auth, \"auth-domain-config-required\" /* MISSING_AUTH_DOMAIN */);\r\n    const url = config.emulator\r\n        ? _emulatorUrl(config, EMULATED_IFRAME_PATH)\r\n        : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\r\n    const params = {\r\n        apiKey: config.apiKey,\r\n        appName: auth.name,\r\n        v: SDK_VERSION\r\n    };\r\n    const eid = EID_FROM_APIHOST.get(auth.config.apiHost);\r\n    if (eid) {\r\n        params.eid = eid;\r\n    }\r\n    const frameworks = auth._getFrameworks();\r\n    if (frameworks.length) {\r\n        params.fw = frameworks.join(',');\r\n    }\r\n    return `${url}?${querystring(params).slice(1)}`;\r\n}\r\nasync function _openIframe(auth) {\r\n    const context = await _loadGapi(auth);\r\n    const gapi = _window().gapi;\r\n    _assert(gapi, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    return context.open({\r\n        where: document.body,\r\n        url: getIframeUrl(auth),\r\n        messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\r\n        attributes: IFRAME_ATTRIBUTES,\r\n        dontclear: true\r\n    }, (iframe) => new Promise(async (resolve, reject) => {\r\n        await iframe.restyle({\r\n            // Prevent iframe from closing on mouse out.\r\n            setHideOnLeave: false\r\n        });\r\n        const networkError = _createError(auth, \"network-request-failed\" /* NETWORK_REQUEST_FAILED */);\r\n        // Confirm iframe is correctly loaded.\r\n        // To fallback on failure, set a timeout.\r\n        const networkErrorTimer = _window().setTimeout(() => {\r\n            reject(networkError);\r\n        }, PING_TIMEOUT.get());\r\n        // Clear timer and resolve pending iframe ready promise.\r\n        function clearTimerAndResolve() {\r\n            _window().clearTimeout(networkErrorTimer);\r\n            resolve(iframe);\r\n        }\r\n        // This returns an IThenable. However the reject part does not call\r\n        // when the iframe is not loaded.\r\n        iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, () => {\r\n            reject(networkError);\r\n        });\r\n    }));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass BrowserSessionPersistence extends BrowserPersistenceClass {\r\n    constructor() {\r\n        super(window.sessionStorage, \"SESSION\" /* SESSION */);\r\n    }\r\n    _addListener(_key, _listener) {\r\n        // Listeners are not supported for session storage since it cannot be shared across windows\r\n        return;\r\n    }\r\n    _removeListener(_key, _listener) {\r\n        // Listeners are not supported for session storage since it cannot be shared across windows\r\n        return;\r\n    }\r\n}\r\nBrowserSessionPersistence.type = 'SESSION';\r\n/**\r\n * An implementation of {@link Persistence} of 'SESSION' using `sessionStorage`\r\n * for the underlying storage.\r\n *\r\n * @public\r\n */\r\nconst browserSessionPersistence = BrowserSessionPersistence;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst BASE_POPUP_OPTIONS = {\r\n    location: 'yes',\r\n    resizable: 'yes',\r\n    statusbar: 'yes',\r\n    toolbar: 'no'\r\n};\r\nconst DEFAULT_WIDTH = 500;\r\nconst DEFAULT_HEIGHT = 600;\r\nconst TARGET_BLANK = '_blank';\r\nconst FIREFOX_EMPTY_URL = 'http://localhost';\r\nclass AuthPopup {\r\n    constructor(window) {\r\n        this.window = window;\r\n        this.associatedEvent = null;\r\n    }\r\n    close() {\r\n        if (this.window) {\r\n            try {\r\n                this.window.close();\r\n            }\r\n            catch (e) { }\r\n        }\r\n    }\r\n}\r\nfunction _open(auth, url, name, width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\r\n    const top = Math.min((window.screen.availHeight - height) / 2, 0).toString();\r\n    const left = Math.min((window.screen.availWidth - width) / 2, 0).toString();\r\n    let target = '';\r\n    const options = Object.assign(Object.assign({}, BASE_POPUP_OPTIONS), { width: width.toString(), height: height.toString(), top,\r\n        left });\r\n    // Chrome iOS 7 and 8 is returning an undefined popup win when target is\r\n    // specified, even though the popup is not necessarily blocked.\r\n    const ua = getUA().toLowerCase();\r\n    if (name) {\r\n        target = _isChromeIOS(ua) ? TARGET_BLANK : name;\r\n    }\r\n    if (_isFirefox(ua)) {\r\n        // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\r\n        url = url || FIREFOX_EMPTY_URL;\r\n        // Firefox disables by default scrolling on popup windows, which can create\r\n        // issues when the user has many Google accounts, for instance.\r\n        options.scrollbars = 'yes';\r\n    }\r\n    const optionsString = Object.entries(options).reduce((accum, [key, value]) => `${accum}${key}=${value},`, '');\r\n    if (_isIOSStandalone(ua) && target !== '_self') {\r\n        openAsNewWindowIOS(url || '', target);\r\n        return new AuthPopup(null);\r\n    }\r\n    // about:blank getting sanitized causing browsers like IE/Edge to display\r\n    // brief error message before redirecting to handler.\r\n    const newWin = window.open(url || '', target, optionsString);\r\n    _assert(newWin, auth, \"popup-blocked\" /* POPUP_BLOCKED */);\r\n    // Flaky on IE edge, encapsulate with a try and catch.\r\n    try {\r\n        newWin.focus();\r\n    }\r\n    catch (e) { }\r\n    return new AuthPopup(newWin);\r\n}\r\nfunction openAsNewWindowIOS(url, target) {\r\n    const el = document.createElement('a');\r\n    el.href = url;\r\n    el.target = target;\r\n    const click = document.createEvent('MouseEvent');\r\n    click.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 1, null);\r\n    el.dispatchEvent(click);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Chooses a popup/redirect resolver to use. This prefers the override (which\r\n * is directly passed in), and falls back to the property set on the auth\r\n * object. If neither are available, this function errors w/ an argument error.\r\n */\r\nfunction _withDefaultResolver(auth, resolverOverride) {\r\n    if (resolverOverride) {\r\n        return _getInstance(resolverOverride);\r\n    }\r\n    _assert(auth._popupRedirectResolver, auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    return auth._popupRedirectResolver;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass IdpCredential extends AuthCredential {\r\n    constructor(params) {\r\n        super(\"custom\" /* CUSTOM */, \"custom\" /* CUSTOM */);\r\n        this.params = params;\r\n    }\r\n    _getIdTokenResponse(auth) {\r\n        return signInWithIdp(auth, this._buildIdpRequest());\r\n    }\r\n    _linkToIdToken(auth, idToken) {\r\n        return signInWithIdp(auth, this._buildIdpRequest(idToken));\r\n    }\r\n    _getReauthenticationResolver(auth) {\r\n        return signInWithIdp(auth, this._buildIdpRequest());\r\n    }\r\n    _buildIdpRequest(idToken) {\r\n        const request = {\r\n            requestUri: this.params.requestUri,\r\n            sessionId: this.params.sessionId,\r\n            postBody: this.params.postBody,\r\n            tenantId: this.params.tenantId,\r\n            pendingToken: this.params.pendingToken,\r\n            returnSecureToken: true,\r\n            returnIdpCredential: true\r\n        };\r\n        if (idToken) {\r\n            request.idToken = idToken;\r\n        }\r\n        return request;\r\n    }\r\n}\r\nfunction _signIn(params) {\r\n    return _signInWithCredential(params.auth, new IdpCredential(params), params.bypassAuthState);\r\n}\r\nfunction _reauth(params) {\r\n    const { auth, user } = params;\r\n    _assert(user, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    return _reauthenticate(user, new IdpCredential(params), params.bypassAuthState);\r\n}\r\nasync function _link$1(params) {\r\n    const { auth, user } = params;\r\n    _assert(user, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    return _link(user, new IdpCredential(params), params.bypassAuthState);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\r\n * events\r\n */\r\nclass AbstractPopupRedirectOperation {\r\n    constructor(auth, filter, resolver, user, bypassAuthState = false) {\r\n        this.auth = auth;\r\n        this.resolver = resolver;\r\n        this.user = user;\r\n        this.bypassAuthState = bypassAuthState;\r\n        this.pendingPromise = null;\r\n        this.eventManager = null;\r\n        this.filter = Array.isArray(filter) ? filter : [filter];\r\n    }\r\n    execute() {\r\n        return new Promise(async (resolve, reject) => {\r\n            this.pendingPromise = { resolve, reject };\r\n            try {\r\n                this.eventManager = await this.resolver._initialize(this.auth);\r\n                await this.onExecution();\r\n                this.eventManager.registerConsumer(this);\r\n            }\r\n            catch (e) {\r\n                this.reject(e);\r\n            }\r\n        });\r\n    }\r\n    async onAuthEvent(event) {\r\n        const { urlResponse, sessionId, postBody, tenantId, error, type } = event;\r\n        if (error) {\r\n            this.reject(error);\r\n            return;\r\n        }\r\n        const params = {\r\n            auth: this.auth,\r\n            requestUri: urlResponse,\r\n            sessionId: sessionId,\r\n            tenantId: tenantId || undefined,\r\n            postBody: postBody || undefined,\r\n            user: this.user,\r\n            bypassAuthState: this.bypassAuthState\r\n        };\r\n        try {\r\n            this.resolve(await this.getIdpTask(type)(params));\r\n        }\r\n        catch (e) {\r\n            this.reject(e);\r\n        }\r\n    }\r\n    onError(error) {\r\n        this.reject(error);\r\n    }\r\n    getIdpTask(type) {\r\n        switch (type) {\r\n            case \"signInViaPopup\" /* SIGN_IN_VIA_POPUP */:\r\n            case \"signInViaRedirect\" /* SIGN_IN_VIA_REDIRECT */:\r\n                return _signIn;\r\n            case \"linkViaPopup\" /* LINK_VIA_POPUP */:\r\n            case \"linkViaRedirect\" /* LINK_VIA_REDIRECT */:\r\n                return _link$1;\r\n            case \"reauthViaPopup\" /* REAUTH_VIA_POPUP */:\r\n            case \"reauthViaRedirect\" /* REAUTH_VIA_REDIRECT */:\r\n                return _reauth;\r\n            default:\r\n                _fail(this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        }\r\n    }\r\n    resolve(cred) {\r\n        debugAssert(this.pendingPromise, 'Pending promise was never set');\r\n        this.pendingPromise.resolve(cred);\r\n        this.unregisterAndCleanUp();\r\n    }\r\n    reject(error) {\r\n        debugAssert(this.pendingPromise, 'Pending promise was never set');\r\n        this.pendingPromise.reject(error);\r\n        this.unregisterAndCleanUp();\r\n    }\r\n    unregisterAndCleanUp() {\r\n        if (this.eventManager) {\r\n            this.eventManager.unregisterConsumer(this);\r\n        }\r\n        this.pendingPromise = null;\r\n        this.cleanUp();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PENDING_REDIRECT_KEY = 'pendingRedirect';\r\n// We only get one redirect outcome for any one auth, so just store it\r\n// in here.\r\nconst redirectOutcomeMap = new Map();\r\nclass RedirectAction extends AbstractPopupRedirectOperation {\r\n    constructor(auth, resolver, bypassAuthState = false) {\r\n        super(auth, [\r\n            \"signInViaRedirect\" /* SIGN_IN_VIA_REDIRECT */,\r\n            \"linkViaRedirect\" /* LINK_VIA_REDIRECT */,\r\n            \"reauthViaRedirect\" /* REAUTH_VIA_REDIRECT */,\r\n            \"unknown\" /* UNKNOWN */\r\n        ], resolver, undefined, bypassAuthState);\r\n        this.eventId = null;\r\n    }\r\n    /**\r\n     * Override the execute function; if we already have a redirect result, then\r\n     * just return it.\r\n     */\r\n    async execute() {\r\n        let readyOutcome = redirectOutcomeMap.get(this.auth._key());\r\n        if (!readyOutcome) {\r\n            try {\r\n                const hasPendingRedirect = await _getAndClearPendingRedirectStatus(this.resolver, this.auth);\r\n                const result = hasPendingRedirect ? await super.execute() : null;\r\n                readyOutcome = () => Promise.resolve(result);\r\n            }\r\n            catch (e) {\r\n                readyOutcome = () => Promise.reject(e);\r\n            }\r\n            redirectOutcomeMap.set(this.auth._key(), readyOutcome);\r\n        }\r\n        return readyOutcome();\r\n    }\r\n    async onAuthEvent(event) {\r\n        if (event.type === \"signInViaRedirect\" /* SIGN_IN_VIA_REDIRECT */) {\r\n            return super.onAuthEvent(event);\r\n        }\r\n        else if (event.type === \"unknown\" /* UNKNOWN */) {\r\n            // This is a sentinel value indicating there's no pending redirect\r\n            this.resolve(null);\r\n            return;\r\n        }\r\n        if (event.eventId) {\r\n            const user = await this.auth._redirectUserForId(event.eventId);\r\n            if (user) {\r\n                this.user = user;\r\n                return super.onAuthEvent(event);\r\n            }\r\n            else {\r\n                this.resolve(null);\r\n            }\r\n        }\r\n    }\r\n    async onExecution() { }\r\n    cleanUp() { }\r\n}\r\nasync function _getAndClearPendingRedirectStatus(resolver, auth) {\r\n    const key = pendingRedirectKey(auth);\r\n    const hasPendingRedirect = (await resolverPersistence(resolver)._get(key)) === 'true';\r\n    await resolverPersistence(resolver)._remove(key);\r\n    return hasPendingRedirect;\r\n}\r\nasync function _setPendingRedirectStatus(resolver, auth) {\r\n    return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\r\n}\r\nfunction resolverPersistence(resolver) {\r\n    return _getInstance(resolver._redirectPersistence);\r\n}\r\nfunction pendingRedirectKey(auth) {\r\n    return _persistenceKeyName(PENDING_REDIRECT_KEY, auth.config.apiKey, auth.name);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Authenticates a Firebase client using a full-page redirect flow.\r\n *\r\n * @remarks\r\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * // You can add additional scopes to the provider:\r\n * provider.addScope('user_birthday');\r\n * // Start a sign in process for an unauthenticated user.\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Facebook Access Token.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * // As this API can be used for sign-in, linking and reauthentication,\r\n * // check the operationType to determine what triggered this redirect\r\n * // operation.\r\n * const operationType = result.operationType;\r\n * ```\r\n *\r\n * @param auth - The Auth instance.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nfunction signInWithRedirect(auth, provider, resolver) {\r\n    return _signInWithRedirect(auth, provider, resolver);\r\n}\r\nasync function _signInWithRedirect(auth, provider, resolver) {\r\n    const authInternal = _castAuth(auth);\r\n    _assert(provider instanceof FederatedAuthProvider, auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    const resolverInternal = _withDefaultResolver(authInternal, resolver);\r\n    await _setPendingRedirectStatus(resolverInternal, authInternal);\r\n    return resolverInternal._openRedirect(authInternal, provider, \"signInViaRedirect\" /* SIGN_IN_VIA_REDIRECT */);\r\n}\r\n/**\r\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a full-page redirect flow.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * // Link using a redirect.\r\n * await linkWithRedirect(result.user, provider);\r\n * // This will again trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nfunction reauthenticateWithRedirect(user, provider, resolver) {\r\n    return _reauthenticateWithRedirect(user, provider, resolver);\r\n}\r\nasync function _reauthenticateWithRedirect(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assert(provider instanceof FederatedAuthProvider, userInternal.auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    // Allow the resolver to error before persisting the redirect user\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\r\n    const eventId = await prepareUserForRedirect(userInternal);\r\n    return resolverInternal._openRedirect(userInternal.auth, provider, \"reauthViaRedirect\" /* REAUTH_VIA_REDIRECT */, eventId);\r\n}\r\n/**\r\n * Links the {@link OAuthProvider} to the user account using a full-page redirect flow.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using some other provider.\r\n * const result = await signInWithEmailAndPassword(auth, email, password);\r\n * // Link using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * await linkWithRedirect(result.user, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n *\r\n * @public\r\n */\r\nfunction linkWithRedirect(user, provider, resolver) {\r\n    return _linkWithRedirect(user, provider, resolver);\r\n}\r\nasync function _linkWithRedirect(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assert(provider instanceof FederatedAuthProvider, userInternal.auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    // Allow the resolver to error before persisting the redirect user\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    await _assertLinkedStatus(false, userInternal, provider.providerId);\r\n    await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\r\n    const eventId = await prepareUserForRedirect(userInternal);\r\n    return resolverInternal._openRedirect(userInternal.auth, provider, \"linkViaRedirect\" /* LINK_VIA_REDIRECT */, eventId);\r\n}\r\n/**\r\n * Returns a {@link UserCredential} from the redirect-based sign-in flow.\r\n *\r\n * @remarks\r\n * If sign-in succeeded, returns the signed in user. If sign-in was unsuccessful, fails with an\r\n * error. If no redirect operation was called, returns a {@link UserCredential}\r\n * with a null `user`.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * // You can add additional scopes to the provider:\r\n * provider.addScope('user_birthday');\r\n * // Start a sign in process for an unauthenticated user.\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Facebook Access Token.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * // As this API can be used for sign-in, linking and reauthentication,\r\n * // check the operationType to determine what triggered this redirect\r\n * // operation.\r\n * const operationType = result.operationType;\r\n * ```\r\n *\r\n * @param auth - The Auth instance.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nasync function getRedirectResult(auth, resolver) {\r\n    await _castAuth(auth)._initializationPromise;\r\n    return _getRedirectResult(auth, resolver, false);\r\n}\r\nasync function _getRedirectResult(auth, resolverExtern, bypassAuthState = false) {\r\n    const authInternal = _castAuth(auth);\r\n    const resolver = _withDefaultResolver(authInternal, resolverExtern);\r\n    const action = new RedirectAction(authInternal, resolver, bypassAuthState);\r\n    const result = await action.execute();\r\n    if (result && !bypassAuthState) {\r\n        delete result.user._redirectEventId;\r\n        await authInternal._persistUserIfCurrent(result.user);\r\n        await authInternal._setRedirectUser(null, resolverExtern);\r\n    }\r\n    return result;\r\n}\r\nasync function prepareUserForRedirect(user) {\r\n    const eventId = _generateEventId(`${user.uid}:::`);\r\n    user._redirectEventId = eventId;\r\n    await user.auth._setRedirectUser(user);\r\n    await user.auth._persistUserIfCurrent(user);\r\n    return eventId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * URL for Authentication widget which will initiate the OAuth handshake\r\n *\r\n * @internal\r\n */\r\nconst WIDGET_PATH = '__/auth/handler';\r\n/**\r\n * URL for emulated environment\r\n *\r\n * @internal\r\n */\r\nconst EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\r\nfunction _getRedirectUrl(auth, provider, authType, redirectUrl, eventId, additionalParams) {\r\n    _assert(auth.config.authDomain, auth, \"auth-domain-config-required\" /* MISSING_AUTH_DOMAIN */);\r\n    _assert(auth.config.apiKey, auth, \"invalid-api-key\" /* INVALID_API_KEY */);\r\n    const params = {\r\n        apiKey: auth.config.apiKey,\r\n        appName: auth.name,\r\n        authType,\r\n        redirectUrl,\r\n        v: SDK_VERSION,\r\n        eventId\r\n    };\r\n    if (provider instanceof FederatedAuthProvider) {\r\n        provider.setDefaultLanguage(auth.languageCode);\r\n        params.providerId = provider.providerId || '';\r\n        if (!isEmpty(provider.getCustomParameters())) {\r\n            params.customParameters = JSON.stringify(provider.getCustomParameters());\r\n        }\r\n        // TODO set additionalParams from the provider as well?\r\n        for (const [key, value] of Object.entries(additionalParams || {})) {\r\n            params[key] = value;\r\n        }\r\n    }\r\n    if (provider instanceof BaseOAuthProvider) {\r\n        const scopes = provider.getScopes().filter(scope => scope !== '');\r\n        if (scopes.length > 0) {\r\n            params.scopes = scopes.join(',');\r\n        }\r\n    }\r\n    if (auth.tenantId) {\r\n        params.tid = auth.tenantId;\r\n    }\r\n    // TODO: maybe set eid as endipointId\r\n    // TODO: maybe set fw as Frameworks.join(\",\")\r\n    const paramsDict = params;\r\n    for (const key of Object.keys(paramsDict)) {\r\n        if (paramsDict[key] === undefined) {\r\n            delete paramsDict[key];\r\n        }\r\n    }\r\n    return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(1)}`;\r\n}\r\nfunction getHandlerBase({ config }) {\r\n    if (!config.emulator) {\r\n        return `https://${config.authDomain}/${WIDGET_PATH}`;\r\n    }\r\n    return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The special web storage event\r\n *\r\n */\r\nconst WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\r\nclass BrowserPopupRedirectResolver {\r\n    constructor() {\r\n        this.eventManagers = {};\r\n        this.iframes = {};\r\n        this.originValidationPromises = {};\r\n        this._redirectPersistence = browserSessionPersistence;\r\n        this._completeRedirectFn = _getRedirectResult;\r\n    }\r\n    // Wrapping in async even though we don't await anywhere in order\r\n    // to make sure errors are raised as promise rejections\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        var _a;\r\n        debugAssert((_a = this.eventManagers[auth._key()]) === null || _a === void 0 ? void 0 : _a.manager, '_initialize() not called before _openPopup()');\r\n        const url = _getRedirectUrl(auth, provider, authType, _getCurrentUrl(), eventId);\r\n        return _open(auth, url, _generateEventId());\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this._originValidation(auth);\r\n        _setWindowLocation(_getRedirectUrl(auth, provider, authType, _getCurrentUrl(), eventId));\r\n        return new Promise(() => { });\r\n    }\r\n    _initialize(auth) {\r\n        const key = auth._key();\r\n        if (this.eventManagers[key]) {\r\n            const { manager, promise } = this.eventManagers[key];\r\n            if (manager) {\r\n                return Promise.resolve(manager);\r\n            }\r\n            else {\r\n                debugAssert(promise, 'If manager is not set, promise should be');\r\n                return promise;\r\n            }\r\n        }\r\n        const promise = this.initAndGetManager(auth);\r\n        this.eventManagers[key] = { promise };\r\n        return promise;\r\n    }\r\n    async initAndGetManager(auth) {\r\n        const iframe = await _openIframe(auth);\r\n        const manager = new AuthEventManager(auth);\r\n        iframe.register('authEvent', (iframeEvent) => {\r\n            _assert(iframeEvent === null || iframeEvent === void 0 ? void 0 : iframeEvent.authEvent, auth, \"invalid-auth-event\" /* INVALID_AUTH_EVENT */);\r\n            // TODO: Consider splitting redirect and popup events earlier on\r\n            const handled = manager.onEvent(iframeEvent.authEvent);\r\n            return { status: handled ? \"ACK\" /* ACK */ : \"ERROR\" /* ERROR */ };\r\n        }, gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER);\r\n        this.eventManagers[auth._key()] = { manager };\r\n        this.iframes[auth._key()] = iframe;\r\n        return manager;\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        const iframe = this.iframes[auth._key()];\r\n        iframe.send(WEB_STORAGE_SUPPORT_KEY, { type: WEB_STORAGE_SUPPORT_KEY }, result => {\r\n            var _a;\r\n            const isSupported = (_a = result === null || result === void 0 ? void 0 : result[0]) === null || _a === void 0 ? void 0 : _a[WEB_STORAGE_SUPPORT_KEY];\r\n            if (isSupported !== undefined) {\r\n                cb(!!isSupported);\r\n            }\r\n            _fail(auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        }, gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER);\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    get _shouldInitProactively() {\r\n        // Mobile browsers and Safari need to optimistically initialize\r\n        return _isMobileBrowser() || _isSafari() || _isIOS();\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for browser\r\n * based applications.\r\n *\r\n * @public\r\n */\r\nconst browserPopupRedirectResolver = BrowserPopupRedirectResolver;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction startSignInPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v2/accounts/mfaSignIn:start\" /* START_PHONE_MFA_SIGN_IN */, Object.assign({ tenantId: auth.tenantId }, request));\r\n}\r\nfunction finalizeSignInPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v2/accounts/mfaSignIn:finalize\" /* FINALIZE_PHONE_MFA_SIGN_IN */, Object.assign({ tenantId: auth.tenantId }, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function getRecaptchaParams(auth) {\r\n    return ((await _performApiRequest(auth, \"GET\" /* GET */, \"/v1/recaptchaParams\" /* GET_RECAPTCHA_PARAM */)).recaptchaSiteKey || '');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _SOLVE_TIME_MS = 500;\r\nconst _EXPIRATION_TIME_MS = 60000;\r\nconst _WIDGET_ID_START = 1000000000000;\r\nclass MockReCaptcha {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.counter = _WIDGET_ID_START;\r\n        this._widgets = new Map();\r\n    }\r\n    render(container, parameters) {\r\n        const id = this.counter;\r\n        this._widgets.set(id, new MockWidget(container, this.auth.name, parameters || {}));\r\n        this.counter++;\r\n        return id;\r\n    }\r\n    reset(optWidgetId) {\r\n        var _a;\r\n        const id = optWidgetId || _WIDGET_ID_START;\r\n        void ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.delete());\r\n        this._widgets.delete(id);\r\n    }\r\n    getResponse(optWidgetId) {\r\n        var _a;\r\n        const id = optWidgetId || _WIDGET_ID_START;\r\n        return ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.getResponse()) || '';\r\n    }\r\n    async execute(optWidgetId) {\r\n        var _a;\r\n        const id = optWidgetId || _WIDGET_ID_START;\r\n        void ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.execute());\r\n        return '';\r\n    }\r\n}\r\nclass MockWidget {\r\n    constructor(containerOrId, appName, params) {\r\n        this.params = params;\r\n        this.timerId = null;\r\n        this.deleted = false;\r\n        this.responseToken = null;\r\n        this.clickHandler = () => {\r\n            this.execute();\r\n        };\r\n        const container = typeof containerOrId === 'string'\r\n            ? document.getElementById(containerOrId)\r\n            : containerOrId;\r\n        _assert(container, \"argument-error\" /* ARGUMENT_ERROR */, { appName });\r\n        this.container = container;\r\n        this.isVisible = this.params.size !== 'invisible';\r\n        if (this.isVisible) {\r\n            this.execute();\r\n        }\r\n        else {\r\n            this.container.addEventListener('click', this.clickHandler);\r\n        }\r\n    }\r\n    getResponse() {\r\n        this.checkIfDeleted();\r\n        return this.responseToken;\r\n    }\r\n    delete() {\r\n        this.checkIfDeleted();\r\n        this.deleted = true;\r\n        if (this.timerId) {\r\n            clearTimeout(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n        this.container.removeEventListener('click', this.clickHandler);\r\n    }\r\n    execute() {\r\n        this.checkIfDeleted();\r\n        if (this.timerId) {\r\n            return;\r\n        }\r\n        this.timerId = window.setTimeout(() => {\r\n            this.responseToken = generateRandomAlphaNumericString(50);\r\n            const { callback, 'expired-callback': expiredCallback } = this.params;\r\n            if (callback) {\r\n                try {\r\n                    callback(this.responseToken);\r\n                }\r\n                catch (e) { }\r\n            }\r\n            this.timerId = window.setTimeout(() => {\r\n                this.timerId = null;\r\n                this.responseToken = null;\r\n                if (expiredCallback) {\r\n                    try {\r\n                        expiredCallback();\r\n                    }\r\n                    catch (e) { }\r\n                }\r\n                if (this.isVisible) {\r\n                    this.execute();\r\n                }\r\n            }, _EXPIRATION_TIME_MS);\r\n        }, _SOLVE_TIME_MS);\r\n    }\r\n    checkIfDeleted() {\r\n        if (this.deleted) {\r\n            throw new Error('reCAPTCHA mock was already deleted!');\r\n        }\r\n    }\r\n}\r\nfunction generateRandomAlphaNumericString(len) {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < len; i++) {\r\n        chars.push(allowedChars.charAt(Math.floor(Math.random() * allowedChars.length)));\r\n    }\r\n    return chars.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// ReCaptcha will load using the same callback, so the callback function needs\r\n// to be kept around\r\nconst _JSLOAD_CALLBACK = _generateCallbackName('rcb');\r\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\r\nconst RECAPTCHA_BASE = 'https://www.google.com/recaptcha/api.js?';\r\n/**\r\n * Loader for the GReCaptcha library. There should only ever be one of this.\r\n */\r\nclass ReCaptchaLoaderImpl {\r\n    constructor() {\r\n        this.hostLanguage = '';\r\n        this.counter = 0;\r\n        this.librarySeparatelyLoaded = !!_window().grecaptcha;\r\n    }\r\n    load(auth, hl = '') {\r\n        _assert(isHostLanguageValid(hl), auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        if (this.shouldResolveImmediately(hl)) {\r\n            return Promise.resolve(_window().grecaptcha);\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const networkTimeout = _window().setTimeout(() => {\r\n                reject(_createError(auth, \"network-request-failed\" /* NETWORK_REQUEST_FAILED */));\r\n            }, NETWORK_TIMEOUT_DELAY.get());\r\n            _window()[_JSLOAD_CALLBACK] = () => {\r\n                _window().clearTimeout(networkTimeout);\r\n                delete _window()[_JSLOAD_CALLBACK];\r\n                const recaptcha = _window().grecaptcha;\r\n                if (!recaptcha) {\r\n                    reject(_createError(auth, \"internal-error\" /* INTERNAL_ERROR */));\r\n                    return;\r\n                }\r\n                // Wrap the greptcha render function so that we know if the developer has\r\n                // called it separately\r\n                const render = recaptcha.render;\r\n                recaptcha.render = (container, params) => {\r\n                    const widgetId = render(container, params);\r\n                    this.counter++;\r\n                    return widgetId;\r\n                };\r\n                this.hostLanguage = hl;\r\n                resolve(recaptcha);\r\n            };\r\n            const url = `${RECAPTCHA_BASE}?${querystring({\r\n                onload: _JSLOAD_CALLBACK,\r\n                render: 'explicit',\r\n                hl\r\n            })}`;\r\n            _loadJS(url).catch(() => {\r\n                clearTimeout(networkTimeout);\r\n                reject(_createError(auth, \"internal-error\" /* INTERNAL_ERROR */));\r\n            });\r\n        });\r\n    }\r\n    clearedOneInstance() {\r\n        this.counter--;\r\n    }\r\n    shouldResolveImmediately(hl) {\r\n        // We can resolve immediately if:\r\n        //   • grecaptcha is already defined AND (\r\n        //     1. the requested language codes are the same OR\r\n        //     2. there exists already a ReCaptcha on the page\r\n        //     3. the library was already loaded by the app\r\n        // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\r\n        // that are already in the page\r\n        return (!!_window().grecaptcha &&\r\n            (hl === this.hostLanguage ||\r\n                this.counter > 0 ||\r\n                this.librarySeparatelyLoaded));\r\n    }\r\n}\r\nfunction isHostLanguageValid(hl) {\r\n    return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\r\n}\r\nclass MockReCaptchaLoaderImpl {\r\n    async load(auth) {\r\n        return new MockReCaptcha(auth);\r\n    }\r\n    clearedOneInstance() { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\r\nconst DEFAULT_PARAMS = {\r\n    theme: 'light',\r\n    type: 'image'\r\n};\r\n/**\r\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\r\n *\r\n * @public\r\n */\r\nclass RecaptchaVerifier {\r\n    /**\r\n     *\r\n     * @param containerOrId - The reCAPTCHA container parameter.\r\n     *\r\n     * @remarks\r\n     * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\r\n     * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\r\n     * an element ID. The corresponding element must also must be in the DOM at the time of\r\n     * initialization.\r\n     *\r\n     * @param parameters - The optional reCAPTCHA parameters.\r\n     *\r\n     * @remarks\r\n     * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\r\n     * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\r\n     * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\r\n     * 'invisible'.\r\n     *\r\n     * @param authExtern - The corresponding Firebase Auth instance.\r\n     *\r\n     * @remarks\r\n     * If none is provided, the default Firebase Auth instance is used. A Firebase Auth instance\r\n     * must be initialized with an API key, otherwise an error will be thrown.\r\n     */\r\n    constructor(containerOrId, parameters = Object.assign({}, DEFAULT_PARAMS), authExtern) {\r\n        this.parameters = parameters;\r\n        /**\r\n         * The application verifier type.\r\n         *\r\n         * @remarks\r\n         * For a reCAPTCHA verifier, this is 'recaptcha'.\r\n         */\r\n        this.type = RECAPTCHA_VERIFIER_TYPE;\r\n        this.destroyed = false;\r\n        this.widgetId = null;\r\n        this.tokenChangeListeners = new Set();\r\n        this.renderPromise = null;\r\n        this.recaptcha = null;\r\n        this.auth = _castAuth(authExtern);\r\n        this.isInvisible = this.parameters.size === 'invisible';\r\n        _assert(typeof document !== 'undefined', this.auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n        const container = typeof containerOrId === 'string'\r\n            ? document.getElementById(containerOrId)\r\n            : containerOrId;\r\n        _assert(container, this.auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        this.container = container;\r\n        this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\r\n        this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\r\n            ? new MockReCaptchaLoaderImpl()\r\n            : new ReCaptchaLoaderImpl();\r\n        this.validateStartingState();\r\n        // TODO: Figure out if sdk version is needed\r\n    }\r\n    /**\r\n     * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\r\n     *\r\n     * @returns A Promise for the reCAPTCHA token.\r\n     */\r\n    async verify() {\r\n        this.assertNotDestroyed();\r\n        const id = await this.render();\r\n        const recaptcha = this.getAssertedRecaptcha();\r\n        const response = recaptcha.getResponse(id);\r\n        if (response) {\r\n            return response;\r\n        }\r\n        return new Promise(resolve => {\r\n            const tokenChange = (token) => {\r\n                if (!token) {\r\n                    return; // Ignore token expirations.\r\n                }\r\n                this.tokenChangeListeners.delete(tokenChange);\r\n                resolve(token);\r\n            };\r\n            this.tokenChangeListeners.add(tokenChange);\r\n            if (this.isInvisible) {\r\n                recaptcha.execute(id);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Renders the reCAPTCHA widget on the page.\r\n     *\r\n     * @returns A Promise that resolves with the reCAPTCHA widget ID.\r\n     */\r\n    render() {\r\n        try {\r\n            this.assertNotDestroyed();\r\n        }\r\n        catch (e) {\r\n            // This method returns a promise. Since it's not async (we want to return the\r\n            // _same_ promise if rendering is still occurring), the API surface should\r\n            // reject with the error rather than just throw\r\n            return Promise.reject(e);\r\n        }\r\n        if (this.renderPromise) {\r\n            return this.renderPromise;\r\n        }\r\n        this.renderPromise = this.makeRenderPromise().catch(e => {\r\n            this.renderPromise = null;\r\n            throw e;\r\n        });\r\n        return this.renderPromise;\r\n    }\r\n    /** @internal */\r\n    _reset() {\r\n        this.assertNotDestroyed();\r\n        if (this.widgetId !== null) {\r\n            this.getAssertedRecaptcha().reset(this.widgetId);\r\n        }\r\n    }\r\n    /**\r\n     * Clears the reCAPTCHA widget from the page and destroys the instance.\r\n     */\r\n    clear() {\r\n        this.assertNotDestroyed();\r\n        this.destroyed = true;\r\n        this._recaptchaLoader.clearedOneInstance();\r\n        if (!this.isInvisible) {\r\n            this.container.childNodes.forEach(node => {\r\n                this.container.removeChild(node);\r\n            });\r\n        }\r\n    }\r\n    validateStartingState() {\r\n        _assert(!this.parameters.sitekey, this.auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        _assert(this.isInvisible || !this.container.hasChildNodes(), this.auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        _assert(typeof document !== 'undefined', this.auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    makeTokenCallback(existing) {\r\n        return token => {\r\n            this.tokenChangeListeners.forEach(listener => listener(token));\r\n            if (typeof existing === 'function') {\r\n                existing(token);\r\n            }\r\n            else if (typeof existing === 'string') {\r\n                const globalFunc = _window()[existing];\r\n                if (typeof globalFunc === 'function') {\r\n                    globalFunc(token);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    assertNotDestroyed() {\r\n        _assert(!this.destroyed, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    }\r\n    async makeRenderPromise() {\r\n        await this.init();\r\n        if (!this.widgetId) {\r\n            let container = this.container;\r\n            if (!this.isInvisible) {\r\n                const guaranteedEmpty = document.createElement('div');\r\n                container.appendChild(guaranteedEmpty);\r\n                container = guaranteedEmpty;\r\n            }\r\n            this.widgetId = this.getAssertedRecaptcha().render(container, this.parameters);\r\n        }\r\n        return this.widgetId;\r\n    }\r\n    async init() {\r\n        _assert(_isHttpOrHttps() && !_isWorker(), this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        await domReady();\r\n        this.recaptcha = await this._recaptchaLoader.load(this.auth, this.auth.languageCode || undefined);\r\n        const siteKey = await getRecaptchaParams(this.auth);\r\n        _assert(siteKey, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        this.parameters.sitekey = siteKey;\r\n    }\r\n    getAssertedRecaptcha() {\r\n        _assert(this.recaptcha, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        return this.recaptcha;\r\n    }\r\n}\r\nfunction domReady() {\r\n    let resolver = null;\r\n    return new Promise(resolve => {\r\n        if (document.readyState === 'complete') {\r\n            resolve();\r\n            return;\r\n        }\r\n        // Document not ready, wait for load before resolving.\r\n        // Save resolver, so we can remove listener in case it was externally\r\n        // cancelled.\r\n        resolver = () => resolve();\r\n        window.addEventListener('load', resolver);\r\n    }).catch(e => {\r\n        if (resolver) {\r\n            window.removeEventListener('load', resolver);\r\n        }\r\n        throw e;\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ConfirmationResultImpl {\r\n    constructor(verificationId, onConfirmation) {\r\n        this.verificationId = verificationId;\r\n        this.onConfirmation = onConfirmation;\r\n    }\r\n    confirm(verificationCode) {\r\n        const authCredential = PhoneAuthCredential._fromVerification(this.verificationId, verificationCode);\r\n        return this.onConfirmation(authCredential);\r\n    }\r\n}\r\n/**\r\n * Asynchronously signs in using a phone number.\r\n *\r\n * @remarks\r\n * This method sends a code via SMS to the given\r\n * phone number, and returns a {@link ConfirmationResult}. After the user\r\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\r\n * with the code to sign the user in.\r\n *\r\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\r\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // 'recaptcha-container' is the ID of an element in the DOM.\r\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\r\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n * // Obtain a verificationCode from the user.\r\n * const credential = await confirmationResult.confirm(verificationCode);\r\n * ```\r\n *\r\n * @param auth - The Auth instance.\r\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n * @param appVerifier - The {@link ApplicationVerifier}.\r\n *\r\n * @public\r\n */\r\nasync function signInWithPhoneNumber$1(auth, phoneNumber, appVerifier) {\r\n    const authInternal = _castAuth(auth);\r\n    const verificationId = await _verifyPhoneNumber(authInternal, phoneNumber, getModularInstance(appVerifier));\r\n    return new ConfirmationResultImpl(verificationId, cred => signInWithCredential(authInternal, cred));\r\n}\r\n/**\r\n * Links the user account with the given phone number.\r\n *\r\n * @param user - The user.\r\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n * @param appVerifier - The {@link ApplicationVerifier}.\r\n *\r\n * @public\r\n */\r\nasync function linkWithPhoneNumber$1(user, phoneNumber, appVerifier) {\r\n    const userInternal = getModularInstance(user);\r\n    await _assertLinkedStatus(false, userInternal, \"phone\" /* PHONE */);\r\n    const verificationId = await _verifyPhoneNumber(userInternal.auth, phoneNumber, getModularInstance(appVerifier));\r\n    return new ConfirmationResultImpl(verificationId, cred => linkWithCredential(userInternal, cred));\r\n}\r\n/**\r\n * Re-authenticates a user using a fresh phne credential.\r\n *\r\n * @remarks Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\r\n *\r\n * @param user - The user.\r\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n * @param appVerifier - The {@link ApplicationVerifier}.\r\n *\r\n * @public\r\n */\r\nasync function reauthenticateWithPhoneNumber(user, phoneNumber, appVerifier) {\r\n    const userInternal = getModularInstance(user);\r\n    const verificationId = await _verifyPhoneNumber(userInternal.auth, phoneNumber, getModularInstance(appVerifier));\r\n    return new ConfirmationResultImpl(verificationId, cred => reauthenticateWithCredential(userInternal, cred));\r\n}\r\n/**\r\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\r\n *\r\n */\r\nasync function _verifyPhoneNumber(auth, options, verifier) {\r\n    var _a;\r\n    const recaptchaToken = await verifier.verify();\r\n    try {\r\n        _assert(typeof recaptchaToken === 'string', auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        _assert(verifier.type === RECAPTCHA_VERIFIER_TYPE, auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        let phoneInfoOptions;\r\n        if (typeof options === 'string') {\r\n            phoneInfoOptions = {\r\n                phoneNumber: options\r\n            };\r\n        }\r\n        else {\r\n            phoneInfoOptions = options;\r\n        }\r\n        if ('session' in phoneInfoOptions) {\r\n            const session = phoneInfoOptions.session;\r\n            if ('phoneNumber' in phoneInfoOptions) {\r\n                _assert(session.type === \"enroll\" /* ENROLL */, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n                const response = await startEnrollPhoneMfa(auth, {\r\n                    idToken: session.credential,\r\n                    phoneEnrollmentInfo: {\r\n                        phoneNumber: phoneInfoOptions.phoneNumber,\r\n                        recaptchaToken\r\n                    }\r\n                });\r\n                return response.phoneSessionInfo.sessionInfo;\r\n            }\r\n            else {\r\n                _assert(session.type === \"signin\" /* SIGN_IN */, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n                const mfaEnrollmentId = ((_a = phoneInfoOptions.multiFactorHint) === null || _a === void 0 ? void 0 : _a.uid) ||\r\n                    phoneInfoOptions.multiFactorUid;\r\n                _assert(mfaEnrollmentId, auth, \"missing-multi-factor-info\" /* MISSING_MFA_INFO */);\r\n                const response = await startSignInPhoneMfa(auth, {\r\n                    mfaPendingCredential: session.credential,\r\n                    mfaEnrollmentId,\r\n                    phoneSignInInfo: {\r\n                        recaptchaToken\r\n                    }\r\n                });\r\n                return response.phoneResponseInfo.sessionInfo;\r\n            }\r\n        }\r\n        else {\r\n            const { sessionInfo } = await sendPhoneVerificationCode(auth, {\r\n                phoneNumber: phoneInfoOptions.phoneNumber,\r\n                recaptchaToken\r\n            });\r\n            return sessionInfo;\r\n        }\r\n    }\r\n    finally {\r\n        verifier._reset();\r\n    }\r\n}\r\n/**\r\n * Updates the user's phone number.\r\n *\r\n * @example\r\n * ```\r\n * // 'recaptcha-container' is the ID of an element in the DOM.\r\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\r\n * const provider = new PhoneAuthProvider(auth);\r\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\r\n * // Obtain the verificationCode from the user.\r\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n * await updatePhoneNumber(user, phoneCredential);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param credential - A credential authenticating the new phone number.\r\n *\r\n * @public\r\n */\r\nasync function updatePhoneNumber(user, credential) {\r\n    await _link(getModularInstance(user), credential);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link PhoneAuthCredential}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // 'recaptcha-container' is the ID of an element in the DOM.\r\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\r\n * const provider = new PhoneAuthProvider(auth);\r\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\r\n * // Obtain the verificationCode from the user.\r\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n * const userCredential = await signInWithCredential(auth, phoneCredential);\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass PhoneAuthProvider {\r\n    /**\r\n     * @param auth - The Firebase Auth instance in which sign-ins should occur.\r\n     *\r\n     */\r\n    constructor(auth) {\r\n        /** Always set to {@link ProviderId.PHONE}. */\r\n        this.providerId = PhoneAuthProvider.PROVIDER_ID;\r\n        this.auth = _castAuth(auth);\r\n    }\r\n    /**\r\n     *\r\n     * Starts a phone number authentication flow by sending a verification code to the given phone\r\n     * number.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * An alternative flow is provided using the `signInWithPhoneNumber` method.\r\n     * ```javascript\r\n     * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const userCredential = confirmationResult.confirm(verificationCode);\r\n     * ```\r\n     *\r\n     * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\r\n     * E.164 format (e.g. +16505550101).\r\n     * @param applicationVerifier - For abuse prevention, this method also requires a\r\n     * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\r\n     * {@link RecaptchaVerifier}.\r\n     *\r\n     * @returns A Promise for a verification ID that can be passed to\r\n     * {@link PhoneAuthProvider.credential} to identify this flow..\r\n     */\r\n    verifyPhoneNumber(phoneOptions, applicationVerifier) {\r\n        return _verifyPhoneNumber(this.auth, phoneOptions, getModularInstance(applicationVerifier));\r\n    }\r\n    /**\r\n     * Creates a phone auth credential, given the verification ID from\r\n     * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\r\n     * mobile device.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n     * const userCredential = signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * An alternative flow is provided using the `signInWithPhoneNumber` method.\r\n     * ```javascript\r\n     * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const userCredential = await confirmationResult.confirm(verificationCode);\r\n     * ```\r\n     *\r\n     * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\r\n     * @param verificationCode - The verification code sent to the user's mobile device.\r\n     *\r\n     * @returns The auth provider credential.\r\n     */\r\n    static credential(verificationId, verificationCode) {\r\n        return PhoneAuthCredential._fromVerification(verificationId, verificationCode);\r\n    }\r\n    /**\r\n     * Generates an {@link AuthCredential} from a {@link UserCredential}.\r\n     * @param userCredential\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        const credential = userCredential;\r\n        return PhoneAuthProvider.credentialFromTaggedObject(credential);\r\n    }\r\n    /**\r\n     * Returns an {@link AuthCredential} when passed an error.\r\n     *\r\n     * @remarks\r\n     *\r\n     * This method works for errors like\r\n     * `auth/account-exists-with-different-credentials`. This is useful for\r\n     * recovering when attempting to set a user's phone number but the number\r\n     * in question is already tied to another account. For example, the following\r\n     * code tries to update the current user's phone number, and if that\r\n     * fails, links the user with the account associated with that number:\r\n     *\r\n     * ```js\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = await provider.verifyPhoneNumber(number, verifier);\r\n     * try {\r\n     *   const code = ''; // Prompt the user for the verification code\r\n     *   await updatePhoneNumber(\r\n     *       auth.currentUser,\r\n     *       PhoneAuthProvider.credential(verificationId, code));\r\n     * } catch (e) {\r\n     *   if (e.code === 'auth/account-exists-with-different-credential') {\r\n     *     const cred = PhoneAuthProvider.credentialFromError(e);\r\n     *     await linkWithCredential(auth.currentUser, cred);\r\n     *   }\r\n     * }\r\n     *\r\n     * // At this point, auth.currentUser.phoneNumber === number.\r\n     * ```\r\n     *\r\n     * @param error\r\n     */\r\n    static credentialFromError(error) {\r\n        return PhoneAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { phoneNumber, temporaryProof } = tokenResponse;\r\n        if (phoneNumber && temporaryProof) {\r\n            return PhoneAuthCredential._fromTokenResponse(phoneNumber, temporaryProof);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n/** Always set to {@link ProviderId.PHONE}. */\r\nPhoneAuthProvider.PROVIDER_ID = \"phone\" /* PHONE */;\r\n/** Always set to {@link SignInMethod.PHONE}. */\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = \"phone\" /* PHONE */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\r\n/**\r\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\r\n *\r\n * @remarks\r\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\r\n * unsuccessful, returns an error object containing additional information about the error.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Facebook Access Token.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * ```\r\n *\r\n * @param auth - The Auth instance.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n *\r\n * @public\r\n */\r\nasync function signInWithPopup(auth, provider, resolver) {\r\n    const authInternal = _castAuth(auth);\r\n    _assert(provider instanceof FederatedAuthProvider, auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    const resolverInternal = _withDefaultResolver(authInternal, resolver);\r\n    const action = new PopupOperation(authInternal, \"signInViaPopup\" /* SIGN_IN_VIA_POPUP */, provider, resolverInternal);\r\n    return action.executeNotNull();\r\n}\r\n/**\r\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\r\n * OAuth flow.\r\n *\r\n * @remarks\r\n * If the reauthentication is successful, the returned result will contain the user and the\r\n * provider's credential.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n * // Reauthenticate using a popup.\r\n * await reauthenticateWithPopup(result.user, provider);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nasync function reauthenticateWithPopup(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assert(provider instanceof FederatedAuthProvider, userInternal.auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    const action = new PopupOperation(userInternal.auth, \"reauthViaPopup\" /* REAUTH_VIA_POPUP */, provider, resolverInternal, userInternal);\r\n    return action.executeNotNull();\r\n}\r\n/**\r\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\r\n *\r\n * @remarks\r\n * If the linking is successful, the returned result will contain the user and the provider's credential.\r\n *\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using some other provider.\r\n * const result = await signInWithEmailAndPassword(auth, email, password);\r\n * // Link using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * await linkWithPopup(result.user, provider);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nasync function linkWithPopup(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assert(provider instanceof FederatedAuthProvider, userInternal.auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    const action = new PopupOperation(userInternal.auth, \"linkViaPopup\" /* LINK_VIA_POPUP */, provider, resolverInternal, userInternal);\r\n    return action.executeNotNull();\r\n}\r\n/**\r\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\r\n * events\r\n *\r\n */\r\nclass PopupOperation extends AbstractPopupRedirectOperation {\r\n    constructor(auth, filter, provider, resolver, user) {\r\n        super(auth, filter, resolver, user);\r\n        this.provider = provider;\r\n        this.authWindow = null;\r\n        this.pollId = null;\r\n        if (PopupOperation.currentPopupAction) {\r\n            PopupOperation.currentPopupAction.cancel();\r\n        }\r\n        PopupOperation.currentPopupAction = this;\r\n    }\r\n    async executeNotNull() {\r\n        const result = await this.execute();\r\n        _assert(result, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        return result;\r\n    }\r\n    async onExecution() {\r\n        debugAssert(this.filter.length === 1, 'Popup operations only handle one event');\r\n        const eventId = _generateEventId();\r\n        this.authWindow = await this.resolver._openPopup(this.auth, this.provider, this.filter[0], // There's always one, see constructor\r\n        eventId);\r\n        this.authWindow.associatedEvent = eventId;\r\n        // Check for web storage support and origin validation _after_ the popup is\r\n        // loaded. These operations are slow (~1 second or so) Rather than\r\n        // waiting on them before opening the window, optimistically open the popup\r\n        // and check for storage support at the same time. If storage support is\r\n        // not available, this will cause the whole thing to reject properly. It\r\n        // will also close the popup, but since the promise has already rejected,\r\n        // the popup closed by user poll will reject into the void.\r\n        this.resolver._originValidation(this.auth).catch(e => {\r\n            this.reject(e);\r\n        });\r\n        this.resolver._isIframeWebStorageSupported(this.auth, isSupported => {\r\n            if (!isSupported) {\r\n                this.reject(_createError(this.auth, \"web-storage-unsupported\" /* WEB_STORAGE_UNSUPPORTED */));\r\n            }\r\n        });\r\n        // Handle user closure. Notice this does *not* use await\r\n        this.pollUserCancellation();\r\n    }\r\n    get eventId() {\r\n        var _a;\r\n        return ((_a = this.authWindow) === null || _a === void 0 ? void 0 : _a.associatedEvent) || null;\r\n    }\r\n    cancel() {\r\n        this.reject(_createError(this.auth, \"cancelled-popup-request\" /* EXPIRED_POPUP_REQUEST */));\r\n    }\r\n    cleanUp() {\r\n        if (this.authWindow) {\r\n            this.authWindow.close();\r\n        }\r\n        if (this.pollId) {\r\n            window.clearTimeout(this.pollId);\r\n        }\r\n        this.authWindow = null;\r\n        this.pollId = null;\r\n        PopupOperation.currentPopupAction = null;\r\n    }\r\n    pollUserCancellation() {\r\n        const poll = () => {\r\n            var _a, _b;\r\n            if ((_b = (_a = this.authWindow) === null || _a === void 0 ? void 0 : _a.window) === null || _b === void 0 ? void 0 : _b.closed) {\r\n                // Make sure that there is sufficient time for whatever action to\r\n                // complete. The window could have closed but the sign in network\r\n                // call could still be in flight.\r\n                this.pollId = window.setTimeout(() => {\r\n                    this.pollId = null;\r\n                    this.reject(_createError(this.auth, \"popup-closed-by-user\" /* POPUP_CLOSED_BY_USER */));\r\n                }, 2000 /* AUTH_EVENT */);\r\n                return;\r\n            }\r\n            this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\r\n        };\r\n        poll();\r\n    }\r\n}\r\n// Only one popup is ever shown at once. The lifecycle of the current popup\r\n// can be managed / cancelled by the constructor.\r\nPopupOperation.currentPopupAction = null;\n\nclass MultiFactorAssertionImpl {\r\n    constructor(factorId) {\r\n        this.factorId = factorId;\r\n    }\r\n    _process(auth, session, displayName) {\r\n        switch (session.type) {\r\n            case \"enroll\" /* ENROLL */:\r\n                return this._finalizeEnroll(auth, session.credential, displayName);\r\n            case \"signin\" /* SIGN_IN */:\r\n                return this._finalizeSignIn(auth, session.credential);\r\n            default:\r\n                return debugFail('unexpected MultiFactorSessionType');\r\n        }\r\n    }\r\n}\n\n/**\r\n * {@inheritdoc PhoneMultiFactorAssertion}\r\n *\r\n * @public\r\n */\r\nclass PhoneMultiFactorAssertionImpl extends MultiFactorAssertionImpl {\r\n    constructor(credential) {\r\n        super(\"phone\" /* PHONE */);\r\n        this.credential = credential;\r\n    }\r\n    /** @internal */\r\n    static _fromCredential(credential) {\r\n        return new PhoneMultiFactorAssertionImpl(credential);\r\n    }\r\n    /** @internal */\r\n    _finalizeEnroll(auth, idToken, displayName) {\r\n        return finalizeEnrollPhoneMfa(auth, {\r\n            idToken,\r\n            displayName,\r\n            phoneVerificationInfo: this.credential._makeVerificationRequest()\r\n        });\r\n    }\r\n    /** @internal */\r\n    _finalizeSignIn(auth, mfaPendingCredential) {\r\n        return finalizeSignInPhoneMfa(auth, {\r\n            mfaPendingCredential,\r\n            phoneVerificationInfo: this.credential._makeVerificationRequest()\r\n        });\r\n    }\r\n}\r\n/**\r\n * Provider for generating a {@link PhoneMultiFactorAssertion}.\r\n *\r\n * @public\r\n */\r\nclass PhoneMultiFactorGenerator {\r\n    constructor() { }\r\n    /**\r\n     * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\r\n     *\r\n     * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\r\n     * @returns A {@link PhoneMultiFactorAssertion} which can be used with\r\n     * {@link MultiFactorResolver.resolveSignIn}\r\n     */\r\n    static assertion(credential) {\r\n        return PhoneMultiFactorAssertionImpl._fromCredential(credential);\r\n    }\r\n}\n\n/**\r\n * Firebase Authentication\r\n *\r\n * @packageDocumentation\r\n */\r\n/**\r\n * Initializes an Auth instance with platform specific default dependencies.\r\n *\r\n * @param app - The Firebase App.\r\n *\r\n * @public\r\n */\r\nfunction getAuth(app = getApp()) {\r\n    const provider = _getProvider(app, 'auth-exp');\r\n    if (provider.isInitialized()) {\r\n        return provider.getImmediate();\r\n    }\r\n    return initializeAuth(app, {\r\n        popupRedirectResolver: browserPopupRedirectResolver,\r\n        persistence: [indexedDBLocalPersistence, browserLocalPersistence]\r\n    });\r\n}\r\nregisterAuth(\"Browser\" /* BROWSER */);\n\nexport { ActionCodeURL, AuthCredential, EmailAuthCredential, EmailAuthProvider, FacebookAuthProvider, GithubAuthProvider, GoogleAuthProvider, OAuthCredential, OAuthProvider, PhoneAuthCredential, PhoneAuthProvider, PhoneMultiFactorGenerator, RecaptchaVerifier, SAMLAuthProvider, TwitterAuthProvider, applyActionCode$1 as applyActionCode, browserLocalPersistence, browserPopupRedirectResolver, browserSessionPersistence, checkActionCode, confirmPasswordReset, createUserWithEmailAndPassword, debugErrorMap, deleteUser, fetchSignInMethodsForEmail, getAdditionalUserInfo, getAuth, getIdToken, getIdTokenResult, getMultiFactorResolver, getRedirectResult, inMemoryPersistence, indexedDBLocalPersistence, initializeAuth, isSignInWithEmailLink, linkWithCredential, linkWithPhoneNumber$1 as linkWithPhoneNumber, linkWithPopup, linkWithRedirect, multiFactor, onAuthStateChanged, onIdTokenChanged, parseActionCodeURL, prodErrorMap, reauthenticateWithCredential, reauthenticateWithPhoneNumber, reauthenticateWithPopup, reauthenticateWithRedirect, reload, sendEmailVerification$1 as sendEmailVerification, sendPasswordResetEmail$1 as sendPasswordResetEmail, sendSignInLinkToEmail$1 as sendSignInLinkToEmail, setPersistence, signInAnonymously, signInWithCredential, signInWithCustomToken$1 as signInWithCustomToken, signInWithEmailAndPassword, signInWithEmailLink$1 as signInWithEmailLink, signInWithPhoneNumber$1 as signInWithPhoneNumber, signInWithPopup, signInWithRedirect, signOut, unlink, updateCurrentUser, updateEmail, updatePassword, updatePhoneNumber, updateProfile$1 as updateProfile, useAuthEmulator, useDeviceLanguage, verifyBeforeUpdateEmail, verifyPasswordResetCode };\n", "import { r as registerVersion, _ as _registerComponent, C as Component, a as _getProvider, E as ErrorFactory, F as FirebaseError, g as getApp, b as getModularInstance, i as isBrowserExtension, c as areCookiesEnabled, d as isIndexedDBAvailable, v as validateIndexedDBOpenable, L as Logger, e as calculateBackoffMillis } from '../common/index.esm2017-19c3e5a1.js';\n\nfunction toArray(arr) {\n  return Array.prototype.slice.call(arr);\n}\nfunction promisifyRequest(request) {\n  return new Promise(function(resolve, reject) {\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\nfunction promisifyRequestCall(obj, method, args) {\n  var request;\n  var p = new Promise(function(resolve, reject) {\n    request = obj[method].apply(obj, args);\n    promisifyRequest(request).then(resolve, reject);\n  });\n  p.request = request;\n  return p;\n}\nfunction promisifyCursorRequestCall(obj, method, args) {\n  var p = promisifyRequestCall(obj, method, args);\n  return p.then(function(value) {\n    if (!value)\n      return;\n    return new Cursor(value, p.request);\n  });\n}\nfunction proxyProperties(ProxyClass, targetProp, properties) {\n  properties.forEach(function(prop) {\n    Object.defineProperty(ProxyClass.prototype, prop, {\n      get: function() {\n        return this[targetProp][prop];\n      },\n      set: function(val) {\n        this[targetProp][prop] = val;\n      }\n    });\n  });\n}\nfunction proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype))\n      return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\nfunction proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype))\n      return;\n    ProxyClass.prototype[prop] = function() {\n      return this[targetProp][prop].apply(this[targetProp], arguments);\n    };\n  });\n}\nfunction proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype))\n      return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\nfunction Index(index) {\n  this._index = index;\n}\nproxyProperties(Index, \"_index\", [\n  \"name\",\n  \"keyPath\",\n  \"multiEntry\",\n  \"unique\"\n]);\nproxyRequestMethods(Index, \"_index\", IDBIndex, [\n  \"get\",\n  \"getKey\",\n  \"getAll\",\n  \"getAllKeys\",\n  \"count\"\n]);\nproxyCursorRequestMethods(Index, \"_index\", IDBIndex, [\n  \"openCursor\",\n  \"openKeyCursor\"\n]);\nfunction Cursor(cursor, request) {\n  this._cursor = cursor;\n  this._request = request;\n}\nproxyProperties(Cursor, \"_cursor\", [\n  \"direction\",\n  \"key\",\n  \"primaryKey\",\n  \"value\"\n]);\nproxyRequestMethods(Cursor, \"_cursor\", IDBCursor, [\n  \"update\",\n  \"delete\"\n]);\n[\"advance\", \"continue\", \"continuePrimaryKey\"].forEach(function(methodName) {\n  if (!(methodName in IDBCursor.prototype))\n    return;\n  Cursor.prototype[methodName] = function() {\n    var cursor = this;\n    var args = arguments;\n    return Promise.resolve().then(function() {\n      cursor._cursor[methodName].apply(cursor._cursor, args);\n      return promisifyRequest(cursor._request).then(function(value) {\n        if (!value)\n          return;\n        return new Cursor(value, cursor._request);\n      });\n    });\n  };\n});\nfunction ObjectStore(store) {\n  this._store = store;\n}\nObjectStore.prototype.createIndex = function() {\n  return new Index(this._store.createIndex.apply(this._store, arguments));\n};\nObjectStore.prototype.index = function() {\n  return new Index(this._store.index.apply(this._store, arguments));\n};\nproxyProperties(ObjectStore, \"_store\", [\n  \"name\",\n  \"keyPath\",\n  \"indexNames\",\n  \"autoIncrement\"\n]);\nproxyRequestMethods(ObjectStore, \"_store\", IDBObjectStore, [\n  \"put\",\n  \"add\",\n  \"delete\",\n  \"clear\",\n  \"get\",\n  \"getAll\",\n  \"getKey\",\n  \"getAllKeys\",\n  \"count\"\n]);\nproxyCursorRequestMethods(ObjectStore, \"_store\", IDBObjectStore, [\n  \"openCursor\",\n  \"openKeyCursor\"\n]);\nproxyMethods(ObjectStore, \"_store\", IDBObjectStore, [\n  \"deleteIndex\"\n]);\nfunction Transaction(idbTransaction) {\n  this._tx = idbTransaction;\n  this.complete = new Promise(function(resolve, reject) {\n    idbTransaction.oncomplete = function() {\n      resolve();\n    };\n    idbTransaction.onerror = function() {\n      reject(idbTransaction.error);\n    };\n    idbTransaction.onabort = function() {\n      reject(idbTransaction.error);\n    };\n  });\n}\nTransaction.prototype.objectStore = function() {\n  return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n};\nproxyProperties(Transaction, \"_tx\", [\n  \"objectStoreNames\",\n  \"mode\"\n]);\nproxyMethods(Transaction, \"_tx\", IDBTransaction, [\n  \"abort\"\n]);\nfunction UpgradeDB(db, oldVersion, transaction) {\n  this._db = db;\n  this.oldVersion = oldVersion;\n  this.transaction = new Transaction(transaction);\n}\nUpgradeDB.prototype.createObjectStore = function() {\n  return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n};\nproxyProperties(UpgradeDB, \"_db\", [\n  \"name\",\n  \"version\",\n  \"objectStoreNames\"\n]);\nproxyMethods(UpgradeDB, \"_db\", IDBDatabase, [\n  \"deleteObjectStore\",\n  \"close\"\n]);\nfunction DB(db) {\n  this._db = db;\n}\nDB.prototype.transaction = function() {\n  return new Transaction(this._db.transaction.apply(this._db, arguments));\n};\nproxyProperties(DB, \"_db\", [\n  \"name\",\n  \"version\",\n  \"objectStoreNames\"\n]);\nproxyMethods(DB, \"_db\", IDBDatabase, [\n  \"close\"\n]);\n[\"openCursor\", \"openKeyCursor\"].forEach(function(funcName) {\n  [ObjectStore, Index].forEach(function(Constructor) {\n    if (!(funcName in Constructor.prototype))\n      return;\n    Constructor.prototype[funcName.replace(\"open\", \"iterate\")] = function() {\n      var args = toArray(arguments);\n      var callback = args[args.length - 1];\n      var nativeObject = this._store || this._index;\n      var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n      request.onsuccess = function() {\n        callback(request.result);\n      };\n    };\n  });\n});\n[Index, ObjectStore].forEach(function(Constructor) {\n  if (Constructor.prototype.getAll)\n    return;\n  Constructor.prototype.getAll = function(query, count) {\n    var instance = this;\n    var items = [];\n    return new Promise(function(resolve) {\n      instance.iterateCursor(query, function(cursor) {\n        if (!cursor) {\n          resolve(items);\n          return;\n        }\n        items.push(cursor.value);\n        if (count !== void 0 && items.length == count) {\n          resolve(items);\n          return;\n        }\n        cursor.continue();\n      });\n    });\n  };\n});\nfunction openDb(name, version, upgradeCallback) {\n  var p = promisifyRequestCall(indexedDB, \"open\", [name, version]);\n  var request = p.request;\n  if (request) {\n    request.onupgradeneeded = function(event) {\n      if (upgradeCallback) {\n        upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n      }\n    };\n  }\n  return p.then(function(db) {\n    return new DB(db);\n  });\n}\n\nconst name = \"@firebase/installations-exp\";\nconst version = \"0.0.900-exp.d92a36260\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PENDING_TIMEOUT_MS = 10000;\r\nconst PACKAGE_VERSION = `w:${version}`;\r\nconst INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nconst INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nconst TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nconst SERVICE = 'installations';\r\nconst SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERROR_DESCRIPTION_MAP = {\r\n    [\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\r\n    [\"not-registered\" /* NOT_REGISTERED */]: 'Firebase Installation is not registered.',\r\n    [\"installation-not-found\" /* INSTALLATION_NOT_FOUND */]: 'Firebase Installation not found.',\r\n    [\"request-failed\" /* REQUEST_FAILED */]: '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    [\"app-offline\" /* APP_OFFLINE */]: 'Could not process request. Application offline.',\r\n    [\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */]: \"Can't delete installation while there is a pending registration request.\"\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint({ projectId }) {\r\n    return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nasync function getErrorFromResponse(requestName, response) {\r\n    const responseJson = await response.json();\r\n    const errorData = responseJson.error;\r\n    return ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\r\n        requestName,\r\n        serverCode: errorData.code,\r\n        serverMessage: errorData.message,\r\n        serverStatus: errorData.status\r\n    });\r\n}\r\nfunction getHeaders({ apiKey }) {\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, { refreshToken }) {\r\n    const headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nasync function retryIfServerError(fn) {\r\n    const result = await fn();\r\n    if (result.status >= 500 && result.status < 600) {\r\n        // Internal Server Error. Retry request.\r\n        return fn();\r\n    }\r\n    return result;\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function createInstallationRequest(appConfig, { fid }) {\r\n    const endpoint = getInstallationsEndpoint(appConfig);\r\n    const headers = getHeaders(appConfig);\r\n    const body = {\r\n        fid,\r\n        authVersion: INTERNAL_AUTH_VERSION,\r\n        appId: appConfig.appId,\r\n        sdkVersion: PACKAGE_VERSION\r\n    };\r\n    const request = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (response.ok) {\r\n        const responseValue = await response.json();\r\n        const registeredInstallationEntry = {\r\n            fid: responseValue.fid || fid,\r\n            registrationStatus: 2 /* COMPLETED */,\r\n            refreshToken: responseValue.refreshToken,\r\n            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n        };\r\n        return registeredInstallationEntry;\r\n    }\r\n    else {\r\n        throw await getErrorFromResponse('Create Installation', response);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    const b64 = btoa(String.fromCharCode(...array));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nconst INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        const fidByteArray = new Uint8Array(17);\r\n        const crypto = self.crypto || self.msCrypto;\r\n        crypto.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\r\n        const fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    const b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a string key that can be used to identify the app. */\r\nfunction getKey(appConfig) {\r\n    return `${appConfig.appName}!${appConfig.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst fidChangeCallbacks = new Map();\r\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\r\nfunction fidChanged(appConfig, fid) {\r\n    const key = getKey(appConfig);\r\n    callFidChangeCallbacks(key, fid);\r\n    broadcastFidChange(key, fid);\r\n}\r\nfunction callFidChangeCallbacks(key, fid) {\r\n    const callbacks = fidChangeCallbacks.get(key);\r\n    if (!callbacks) {\r\n        return;\r\n    }\r\n    for (const callback of callbacks) {\r\n        callback(fid);\r\n    }\r\n}\r\nfunction broadcastFidChange(key, fid) {\r\n    const channel = getBroadcastChannel();\r\n    if (channel) {\r\n        channel.postMessage({ key, fid });\r\n    }\r\n    closeBroadcastChannel();\r\n}\r\nlet broadcastChannel = null;\r\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\r\nfunction getBroadcastChannel() {\r\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\r\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\r\n        broadcastChannel.onmessage = e => {\r\n            callFidChangeCallbacks(e.data.key, e.data.fid);\r\n        };\r\n    }\r\n    return broadcastChannel;\r\n}\r\nfunction closeBroadcastChannel() {\r\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\r\n        broadcastChannel.close();\r\n        broadcastChannel = null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DATABASE_NAME = 'firebase-installations-database';\r\nconst DATABASE_VERSION = 1;\r\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDB.oldVersion) {\r\n                case 0:\r\n                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nasync function set(appConfig, value) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    const objectStore = tx.objectStore(OBJECT_STORE_NAME);\r\n    const oldValue = await objectStore.get(key);\r\n    await objectStore.put(value, key);\r\n    await tx.complete;\r\n    if (!oldValue || oldValue.fid !== value.fid) {\r\n        fidChanged(appConfig, value.fid);\r\n    }\r\n    return value;\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nasync function remove(appConfig) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\r\n    await tx.complete;\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nasync function update(appConfig, updateFn) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    const store = tx.objectStore(OBJECT_STORE_NAME);\r\n    const oldValue = await store.get(key);\r\n    const newValue = updateFn(oldValue);\r\n    if (newValue === undefined) {\r\n        await store.delete(key);\r\n    }\r\n    else {\r\n        await store.put(newValue, key);\r\n    }\r\n    await tx.complete;\r\n    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\r\n        fidChanged(appConfig, newValue.fid);\r\n    }\r\n    return newValue;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nasync function getInstallationEntry(appConfig) {\r\n    let registrationPromise;\r\n    const installationEntry = await update(appConfig, oldEntry => {\r\n        const installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n        const entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\r\n        registrationPromise = entryWithPromise.registrationPromise;\r\n        return entryWithPromise.installationEntry;\r\n    });\r\n    if (installationEntry.fid === INVALID_FID) {\r\n        // FID generation failed. Waiting for the FID from the server.\r\n        return { installationEntry: await registrationPromise };\r\n    }\r\n    return {\r\n        installationEntry,\r\n        registrationPromise\r\n    };\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    const entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            const registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\r\n            return {\r\n                installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        const inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        const registrationPromise = registerInstallation(appConfig, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        return {\r\n            installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(appConfig)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nasync function registerInstallation(appConfig, installationEntry) {\r\n    try {\r\n        const registeredInstallationEntry = await createInstallationRequest(appConfig, installationEntry);\r\n        return set(appConfig, registeredInstallationEntry);\r\n    }\r\n    catch (e) {\r\n        if (isServerError(e) && e.customData.serverCode === 409) {\r\n            // Server returned a \"FID can not be used\" error.\r\n            // Generate a new ID next time.\r\n            await remove(appConfig);\r\n        }\r\n        else {\r\n            // Registration failed. Set FID as not registered.\r\n            await set(appConfig, {\r\n                fid: installationEntry.fid,\r\n                registrationStatus: 0 /* NOT_STARTED */\r\n            });\r\n        }\r\n        throw e;\r\n    }\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nasync function waitUntilFidRegistration(appConfig) {\r\n    // Unfortunately, there is no way of reliably observing when a value in\r\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\r\n    // so we need to poll.\r\n    let entry = await updateInstallationRequest(appConfig);\r\n    while (entry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        // createInstallation request still in progress.\r\n        await sleep(100);\r\n        entry = await updateInstallationRequest(appConfig);\r\n    }\r\n    if (entry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        // The request timed out or failed in a different call. Try again.\r\n        const { installationEntry, registrationPromise } = await getInstallationEntry(appConfig);\r\n        if (registrationPromise) {\r\n            return registrationPromise;\r\n        }\r\n        else {\r\n            // if there is no registrationPromise, entry is registered.\r\n            return installationEntry;\r\n        }\r\n    }\r\n    return entry;\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, oldEntry => {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function generateAuthTokenRequest({ appConfig, platformLoggerProvider }, installationEntry) {\r\n    const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\r\n    // If platform logger exists, add the platform info string to the header.\r\n    const platformLogger = platformLoggerProvider.getImmediate({\r\n        optional: true\r\n    });\r\n    if (platformLogger) {\r\n        headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\r\n    }\r\n    const body = {\r\n        installation: {\r\n            sdkVersion: PACKAGE_VERSION\r\n        }\r\n    };\r\n    const request = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (response.ok) {\r\n        const responseValue = await response.json();\r\n        const completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n        return completedAuthToken;\r\n    }\r\n    else {\r\n        throw await getErrorFromResponse('Generate Auth Token', response);\r\n    }\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, { fid }) {\r\n    return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nasync function refreshAuthToken(installations, forceRefresh = false) {\r\n    let tokenPromise;\r\n    const entry = await update(installations.appConfig, oldEntry => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n            // There is a valid token in the DB.\r\n            return oldEntry;\r\n        }\r\n        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n            // There already is a token request in progress.\r\n            tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\r\n            return oldEntry;\r\n        }\r\n        else {\r\n            // No token or token expired.\r\n            if (!navigator.onLine) {\r\n                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n            }\r\n            const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n            tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\r\n            return inProgressEntry;\r\n        }\r\n    });\r\n    const authToken = tokenPromise\r\n        ? await tokenPromise\r\n        : entry.authToken;\r\n    return authToken;\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\r\nasync function waitUntilAuthTokenRequest(installations, forceRefresh) {\r\n    // Unfortunately, there is no way of reliably observing when a value in\r\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\r\n    // so we need to poll.\r\n    let entry = await updateAuthTokenRequest(installations.appConfig);\r\n    while (entry.authToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n        // generateAuthToken still in progress.\r\n        await sleep(100);\r\n        entry = await updateAuthTokenRequest(installations.appConfig);\r\n    }\r\n    const authToken = entry.authToken;\r\n    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n        // The request timed out or failed in a different call. Try again.\r\n        return refreshAuthToken(installations, forceRefresh);\r\n    }\r\n    else {\r\n        return authToken;\r\n    }\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, oldEntry => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return Object.assign(Object.assign({}, oldEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nasync function fetchAuthTokenFromServer(installations, installationEntry) {\r\n    try {\r\n        const authToken = await generateAuthTokenRequest(installations, installationEntry);\r\n        const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken });\r\n        await set(installations.appConfig, updatedInstallationEntry);\r\n        return authToken;\r\n    }\r\n    catch (e) {\r\n        if (isServerError(e) &&\r\n            (e.customData.serverCode === 401 || e.customData.serverCode === 404)) {\r\n            // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n            // Generate a new ID next time.\r\n            await remove(installations.appConfig);\r\n        }\r\n        else {\r\n            const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n            await set(installations.appConfig, updatedInstallationEntry);\r\n        }\r\n        throw e;\r\n    }\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    const now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    const inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return Object.assign(Object.assign({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Creates a Firebase Installation if there isn't one for the app and\r\n * returns the Installation ID.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\r\nasync function getId(installations) {\r\n    const installationsImpl = installations;\r\n    const { installationEntry, registrationPromise } = await getInstallationEntry(installationsImpl.appConfig);\r\n    if (registrationPromise) {\r\n        registrationPromise.catch(console.error);\r\n    }\r\n    else {\r\n        // If the installation is already registered, update the authentication\r\n        // token if needed.\r\n        refreshAuthToken(installationsImpl).catch(console.error);\r\n    }\r\n    return installationEntry.fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns an Installation auth token, identifying the current Firebase Installation.\r\n * @param installations - The `Installations` instance.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\r\nasync function getToken(installations, forceRefresh = false) {\r\n    const installationsImpl = installations;\r\n    await completeInstallationRegistration(installationsImpl.appConfig);\r\n    // At this point we either have a Registered Installation in the DB, or we've\r\n    // already thrown an error.\r\n    const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\r\n    return authToken.token;\r\n}\r\nasync function completeInstallationRegistration(appConfig) {\r\n    const { registrationPromise } = await getInstallationEntry(appConfig);\r\n    if (registrationPromise) {\r\n        // A createInstallation request is in progress. Wait until it finishes.\r\n        await registrationPromise;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    const configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    for (const keyName of configKeys) {\r\n        if (!app.options[keyName]) {\r\n            throw getMissingValueError(keyName);\r\n        }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst INSTALLATIONS_NAME = 'installations-exp';\r\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-exp-internal';\r\nconst publicFactory = (container) => {\r\n    const app = container.getProvider('app-exp').getImmediate();\r\n    // Throws if app isn't configured properly.\r\n    const appConfig = extractAppConfig(app);\r\n    const platformLoggerProvider = _getProvider(app, 'platform-logger');\r\n    const installationsImpl = {\r\n        app,\r\n        appConfig,\r\n        platformLoggerProvider,\r\n        _delete: () => Promise.resolve()\r\n    };\r\n    return installationsImpl;\r\n};\r\nconst internalFactory = (container) => {\r\n    const app = container.getProvider('app-exp').getImmediate();\r\n    // Internal FIS instance relies on public FIS instance.\r\n    const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\r\n    const installationsInternal = {\r\n        getId: () => getId(installations),\r\n        getToken: (forceRefresh) => getToken(installations, forceRefresh)\r\n    };\r\n    return installationsInternal;\r\n};\r\nfunction registerInstallations() {\r\n    _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\" /* PUBLIC */));\r\n    _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\" /* PRIVATE */));\r\n}\n\n/**\r\n * Firebase Installations\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterInstallations();\r\nregisterVersion(name, version);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Analytics.\r\n */\r\nconst ANALYTICS_TYPE = 'analytics-exp';\r\n// Key to attach FID to in gtag params.\r\nconst GA_FID_KEY = 'firebase_id';\r\nconst ORIGIN_KEY = 'origin';\r\nconst FETCH_TIMEOUT_MILLIS = 60 * 1000;\r\nconst DYNAMIC_CONFIG_URL = 'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig';\r\nconst GTAG_URL = 'https://www.googletagmanager.com/gtag/js';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/analytics');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Makeshift polyfill for Promise.allSettled(). Resolves when all promises\r\n * have either resolved or rejected.\r\n *\r\n * @param promises Array of promises to wait for.\r\n */\r\nfunction promiseAllSettled(promises) {\r\n    return Promise.all(promises.map(promise => promise.catch(e => e)));\r\n}\r\n/**\r\n * Inserts gtag script tag into the page to asynchronously download gtag.\r\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\r\n */\r\nfunction insertScriptTag(dataLayerName, measurementId) {\r\n    const script = document.createElement('script');\r\n    // We are not providing an analyticsId in the URL because it would trigger a `page_view`\r\n    // without fid. We will initialize ga-id using gtag (config) command together with fid.\r\n    script.src = `${GTAG_URL}?l=${dataLayerName}&id=${measurementId}`;\r\n    script.async = true;\r\n    document.head.appendChild(script);\r\n}\r\n/**\r\n * Get reference to, or create, global datalayer.\r\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\r\n */\r\nfunction getOrCreateDataLayer(dataLayerName) {\r\n    // Check for existing dataLayer and create if needed.\r\n    let dataLayer = [];\r\n    if (Array.isArray(window[dataLayerName])) {\r\n        dataLayer = window[dataLayerName];\r\n    }\r\n    else {\r\n        window[dataLayerName] = dataLayer;\r\n    }\r\n    return dataLayer;\r\n}\r\n/**\r\n * Wrapped gtag logic when gtag is called with 'config' command.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n * @param measurementId GA Measurement ID to set config for.\r\n * @param gtagParams Gtag config params to set.\r\n */\r\nasync function gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, measurementId, gtagParams) {\r\n    // If config is already fetched, we know the appId and can use it to look up what FID promise we\r\n    /// are waiting for, and wait only on that one.\r\n    const correspondingAppId = measurementIdToAppId[measurementId];\r\n    try {\r\n        if (correspondingAppId) {\r\n            await initializationPromisesMap[correspondingAppId];\r\n        }\r\n        else {\r\n            // If config is not fetched yet, wait for all configs (we don't know which one we need) and\r\n            // find the appId (if any) corresponding to this measurementId. If there is one, wait on\r\n            // that appId's initialization promise. If there is none, promise resolves and gtag\r\n            // call goes through.\r\n            const dynamicConfigResults = await promiseAllSettled(dynamicConfigPromisesList);\r\n            const foundConfig = dynamicConfigResults.find(config => config.measurementId === measurementId);\r\n            if (foundConfig) {\r\n                await initializationPromisesMap[foundConfig.appId];\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        logger.error(e);\r\n    }\r\n    gtagCore(\"config\" /* CONFIG */, measurementId, gtagParams);\r\n}\r\n/**\r\n * Wrapped gtag logic when gtag is called with 'event' command.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementId GA Measurement ID to log event to.\r\n * @param gtagParams Params to log with this event.\r\n */\r\nasync function gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementId, gtagParams) {\r\n    try {\r\n        let initializationPromisesToWaitFor = [];\r\n        // If there's a 'send_to' param, check if any ID specified matches\r\n        // an initializeIds() promise we are waiting for.\r\n        if (gtagParams && gtagParams['send_to']) {\r\n            let gaSendToList = gtagParams['send_to'];\r\n            // Make it an array if is isn't, so it can be dealt with the same way.\r\n            if (!Array.isArray(gaSendToList)) {\r\n                gaSendToList = [gaSendToList];\r\n            }\r\n            // Checking 'send_to' fields requires having all measurement ID results back from\r\n            // the dynamic config fetch.\r\n            const dynamicConfigResults = await promiseAllSettled(dynamicConfigPromisesList);\r\n            for (const sendToId of gaSendToList) {\r\n                // Any fetched dynamic measurement ID that matches this 'send_to' ID\r\n                const foundConfig = dynamicConfigResults.find(config => config.measurementId === sendToId);\r\n                const initializationPromise = foundConfig && initializationPromisesMap[foundConfig.appId];\r\n                if (initializationPromise) {\r\n                    initializationPromisesToWaitFor.push(initializationPromise);\r\n                }\r\n                else {\r\n                    // Found an item in 'send_to' that is not associated\r\n                    // directly with an FID, possibly a group.  Empty this array,\r\n                    // exit the loop early, and let it get populated below.\r\n                    initializationPromisesToWaitFor = [];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // This will be unpopulated if there was no 'send_to' field , or\r\n        // if not all entries in the 'send_to' field could be mapped to\r\n        // a FID. In these cases, wait on all pending initialization promises.\r\n        if (initializationPromisesToWaitFor.length === 0) {\r\n            initializationPromisesToWaitFor = Object.values(initializationPromisesMap);\r\n        }\r\n        // Run core gtag function with args after all relevant initialization\r\n        // promises have been resolved.\r\n        await Promise.all(initializationPromisesToWaitFor);\r\n        // Workaround for http://b/141370449 - third argument cannot be undefined.\r\n        gtagCore(\"event\" /* EVENT */, measurementId, gtagParams || {});\r\n    }\r\n    catch (e) {\r\n        logger.error(e);\r\n    }\r\n}\r\n/**\r\n * Wraps a standard gtag function with extra code to wait for completion of\r\n * relevant initialization promises before sending requests.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n */\r\nfunction wrapGtag(gtagCore, \r\n/**\r\n * Allows wrapped gtag calls to wait on whichever intialization promises are required,\r\n * depending on the contents of the gtag params' `send_to` field, if any.\r\n */\r\ninitializationPromisesMap, \r\n/**\r\n * Wrapped gtag calls sometimes require all dynamic config fetches to have returned\r\n * before determining what initialization promises (which include FIDs) to wait for.\r\n */\r\ndynamicConfigPromisesList, \r\n/**\r\n * Wrapped gtag config calls can narrow down which initialization promise (with FID)\r\n * to wait for if the measurementId is already fetched, by getting the corresponding appId,\r\n * which is the key for the initialization promises map.\r\n */\r\nmeasurementIdToAppId) {\r\n    /**\r\n     * Wrapper around gtag that ensures FID is sent with gtag calls.\r\n     * @param command Gtag command type.\r\n     * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.\r\n     * @param gtagParams Params if event is EVENT/CONFIG.\r\n     */\r\n    async function gtagWrapper(command, idOrNameOrParams, gtagParams) {\r\n        try {\r\n            // If event, check that relevant initialization promises have completed.\r\n            if (command === \"event\" /* EVENT */) {\r\n                // If EVENT, second arg must be measurementId.\r\n                await gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, idOrNameOrParams, gtagParams);\r\n            }\r\n            else if (command === \"config\" /* CONFIG */) {\r\n                // If CONFIG, second arg must be measurementId.\r\n                await gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, idOrNameOrParams, gtagParams);\r\n            }\r\n            else {\r\n                // If SET, second arg must be params.\r\n                gtagCore(\"set\" /* SET */, idOrNameOrParams);\r\n            }\r\n        }\r\n        catch (e) {\r\n            logger.error(e);\r\n        }\r\n    }\r\n    return gtagWrapper;\r\n}\r\n/**\r\n * Creates global gtag function or wraps existing one if found.\r\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\r\n * 'event' calls that belong to the GAID associated with this Firebase instance.\r\n *\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n * @param dataLayerName Name of global GA datalayer array.\r\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified).\r\n */\r\nfunction wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagFunctionName) {\r\n    // Create a basic core gtag function\r\n    let gtagCore = function (..._args) {\r\n        // Must push IArguments object, not an array.\r\n        window[dataLayerName].push(arguments);\r\n    };\r\n    // Replace it with existing one if found\r\n    if (window[gtagFunctionName] &&\r\n        typeof window[gtagFunctionName] === 'function') {\r\n        // @ts-ignore\r\n        gtagCore = window[gtagFunctionName];\r\n    }\r\n    window[gtagFunctionName] = wrapGtag(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId);\r\n    return {\r\n        gtagCore,\r\n        wrappedGtag: window[gtagFunctionName]\r\n    };\r\n}\r\n/**\r\n * Returns first script tag in DOM matching our gtag url pattern.\r\n */\r\nfunction findGtagScriptOnPage() {\r\n    const scriptTags = window.document.getElementsByTagName('script');\r\n    for (const tag of Object.values(scriptTags)) {\r\n        if (tag.src && tag.src.includes(GTAG_URL)) {\r\n            return tag;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"already-exists\" /* ALREADY_EXISTS */]: 'A Firebase Analytics instance with the appId {$id} ' +\r\n        ' already exists. ' +\r\n        'Only one Firebase Analytics instance can be created for each appId.',\r\n    [\"already-initialized\" /* ALREADY_INITIALIZED */]: 'Firebase Analytics has already been initialized.' +\r\n        'settings() must be called before initializing any Analytics instance' +\r\n        'or it will have no effect.',\r\n    [\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */]: 'Firebase Analytics Interop Component failed to instantiate: {$reason}',\r\n    [\"invalid-analytics-context\" /* INVALID_ANALYTICS_CONTEXT */]: 'Firebase Analytics is not supported in this environment. ' +\r\n        'Wrap initialization of analytics in analytics.isSupported() ' +\r\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\r\n    [\"indexeddb-unavailable\" /* INDEXEDDB_UNAVAILABLE */]: 'IndexedDB unavailable or restricted in this environment. ' +\r\n        'Wrap initialization of analytics in analytics.isSupported() ' +\r\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\r\n    [\"fetch-throttle\" /* FETCH_THROTTLE */]: 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    [\"config-fetch-failed\" /* CONFIG_FETCH_FAILED */]: 'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',\r\n    [\"no-api-key\" /* NO_API_KEY */]: 'The \"apiKey\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\r\n        'contain a valid API key.',\r\n    [\"no-app-id\" /* NO_APP_ID */]: 'The \"appId\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\r\n        'contain a valid app ID.'\r\n};\r\nconst ERROR_FACTORY$1 = new ErrorFactory('analytics', 'Analytics', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Backoff factor for 503 errors, which we want to be conservative about\r\n * to avoid overloading servers. Each retry interval will be\r\n * BASE_INTERVAL_MILLIS * LONG_RETRY_FACTOR ^ retryCount, so the second one\r\n * will be ~30 seconds (with fuzzing).\r\n */\r\nconst LONG_RETRY_FACTOR = 30;\r\n/**\r\n * Base wait interval to multiplied by backoffFactor^backoffCount.\r\n */\r\nconst BASE_INTERVAL_MILLIS = 1000;\r\n/**\r\n * Stubbable retry data storage class.\r\n */\r\nclass RetryData {\r\n    constructor(throttleMetadata = {}, intervalMillis = BASE_INTERVAL_MILLIS) {\r\n        this.throttleMetadata = throttleMetadata;\r\n        this.intervalMillis = intervalMillis;\r\n    }\r\n    getThrottleMetadata(appId) {\r\n        return this.throttleMetadata[appId];\r\n    }\r\n    setThrottleMetadata(appId, metadata) {\r\n        this.throttleMetadata[appId] = metadata;\r\n    }\r\n    deleteThrottleMetadata(appId) {\r\n        delete this.throttleMetadata[appId];\r\n    }\r\n}\r\nconst defaultRetryData = new RetryData();\r\n/**\r\n * Set GET request headers.\r\n * @param apiKey App API key.\r\n */\r\nfunction getHeaders$1(apiKey) {\r\n    return new Headers({\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\n/**\r\n * Fetches dynamic config from backend.\r\n * @param app Firebase app to fetch config for.\r\n */\r\nasync function fetchDynamicConfig(appFields) {\r\n    var _a;\r\n    const { appId, apiKey } = appFields;\r\n    const request = {\r\n        method: 'GET',\r\n        headers: getHeaders$1(apiKey)\r\n    };\r\n    const appUrl = DYNAMIC_CONFIG_URL.replace('{app-id}', appId);\r\n    const response = await fetch(appUrl, request);\r\n    if (response.status !== 200 && response.status !== 304) {\r\n        let errorMessage = '';\r\n        try {\r\n            // Try to get any error message text from server response.\r\n            const jsonResponse = (await response.json());\r\n            if ((_a = jsonResponse.error) === null || _a === void 0 ? void 0 : _a.message) {\r\n                errorMessage = jsonResponse.error.message;\r\n            }\r\n        }\r\n        catch (_ignored) { }\r\n        throw ERROR_FACTORY$1.create(\"config-fetch-failed\" /* CONFIG_FETCH_FAILED */, {\r\n            httpStatus: response.status,\r\n            responseMessage: errorMessage\r\n        });\r\n    }\r\n    return response.json();\r\n}\r\n/**\r\n * Fetches dynamic config from backend, retrying if failed.\r\n * @param app Firebase app to fetch config for.\r\n */\r\nasync function fetchDynamicConfigWithRetry(app, \r\n// retryData and timeoutMillis are parameterized to allow passing a different value for testing.\r\nretryData = defaultRetryData, timeoutMillis) {\r\n    const { appId, apiKey, measurementId } = app.options;\r\n    if (!appId) {\r\n        throw ERROR_FACTORY$1.create(\"no-app-id\" /* NO_APP_ID */);\r\n    }\r\n    if (!apiKey) {\r\n        if (measurementId) {\r\n            return {\r\n                measurementId,\r\n                appId\r\n            };\r\n        }\r\n        throw ERROR_FACTORY$1.create(\"no-api-key\" /* NO_API_KEY */);\r\n    }\r\n    const throttleMetadata = retryData.getThrottleMetadata(appId) || {\r\n        backoffCount: 0,\r\n        throttleEndTimeMillis: Date.now()\r\n    };\r\n    const signal = new AnalyticsAbortSignal();\r\n    setTimeout(async () => {\r\n        // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n        signal.abort();\r\n    }, timeoutMillis !== undefined ? timeoutMillis : FETCH_TIMEOUT_MILLIS);\r\n    return attemptFetchDynamicConfigWithRetry({ appId, apiKey, measurementId }, throttleMetadata, signal, retryData);\r\n}\r\n/**\r\n * Runs one retry attempt.\r\n * @param appFields Necessary app config fields.\r\n * @param throttleMetadata Ongoing metadata to determine throttling times.\r\n * @param signal Abort signal.\r\n */\r\nasync function attemptFetchDynamicConfigWithRetry(appFields, { throttleEndTimeMillis, backoffCount }, signal, retryData = defaultRetryData // for testing\r\n) {\r\n    const { appId, measurementId } = appFields;\r\n    // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n    // Ensures the throttle end time is honored if the last attempt timed out.\r\n    // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n    try {\r\n        await setAbortableTimeout(signal, throttleEndTimeMillis);\r\n    }\r\n    catch (e) {\r\n        if (measurementId) {\r\n            logger.warn(`Timed out fetching this Firebase app's measurement ID from the server.` +\r\n                ` Falling back to the measurement ID ${measurementId}` +\r\n                ` provided in the \"measurementId\" field in the local Firebase config. [${e.message}]`);\r\n            return { appId, measurementId };\r\n        }\r\n        throw e;\r\n    }\r\n    try {\r\n        const response = await fetchDynamicConfig(appFields);\r\n        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n        retryData.deleteThrottleMetadata(appId);\r\n        return response;\r\n    }\r\n    catch (e) {\r\n        if (!isRetriableError(e)) {\r\n            retryData.deleteThrottleMetadata(appId);\r\n            if (measurementId) {\r\n                logger.warn(`Failed to fetch this Firebase app's measurement ID from the server.` +\r\n                    ` Falling back to the measurement ID ${measurementId}` +\r\n                    ` provided in the \"measurementId\" field in the local Firebase config. [${e.message}]`);\r\n                return { appId, measurementId };\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        const backoffMillis = Number(e.customData.httpStatus) === 503\r\n            ? calculateBackoffMillis(backoffCount, retryData.intervalMillis, LONG_RETRY_FACTOR)\r\n            : calculateBackoffMillis(backoffCount, retryData.intervalMillis);\r\n        // Increments backoff state.\r\n        const throttleMetadata = {\r\n            throttleEndTimeMillis: Date.now() + backoffMillis,\r\n            backoffCount: backoffCount + 1\r\n        };\r\n        // Persists state.\r\n        retryData.setThrottleMetadata(appId, throttleMetadata);\r\n        logger.debug(`Calling attemptFetch again in ${backoffMillis} millis`);\r\n        return attemptFetchDynamicConfigWithRetry(appFields, throttleMetadata, signal, retryData);\r\n    }\r\n}\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise((resolve, reject) => {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        const timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(() => {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY$1.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof FirebaseError) || !e.customData) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    const httpStatus = Number(e.customData['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Shims a minimal AbortSignal (copied from Remote Config).\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nclass AnalyticsAbortSignal {\r\n    constructor() {\r\n        this.listeners = [];\r\n    }\r\n    addEventListener(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n    abort() {\r\n        this.listeners.forEach(listener => listener());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function validateIndexedDB() {\r\n    if (!isIndexedDBAvailable()) {\r\n        logger.warn(ERROR_FACTORY$1.create(\"indexeddb-unavailable\" /* INDEXEDDB_UNAVAILABLE */, {\r\n            errorInfo: 'IndexedDB is not available in this environment.'\r\n        }).message);\r\n        return false;\r\n    }\r\n    else {\r\n        try {\r\n            await validateIndexedDBOpenable();\r\n        }\r\n        catch (e) {\r\n            logger.warn(ERROR_FACTORY$1.create(\"indexeddb-unavailable\" /* INDEXEDDB_UNAVAILABLE */, {\r\n                errorInfo: e\r\n            }).message);\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Initialize the analytics instance in gtag.js by calling config command with fid.\r\n *\r\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\r\n * part of the `page_view` event that's sent during the initialization\r\n * @param app Firebase app\r\n * @param gtagCore The gtag function that's not wrapped.\r\n * @param dynamicConfigPromisesList Array of all dynamic config promises.\r\n * @param measurementIdToAppId Maps measurementID to appID.\r\n * @param installations _FirebaseInstallationsInternal instance.\r\n *\r\n * @returns Measurement ID.\r\n */\r\nasync function initializeAnalytics(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCore, dataLayerName) {\r\n    const dynamicConfigPromise = fetchDynamicConfigWithRetry(app);\r\n    // Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.\r\n    dynamicConfigPromise\r\n        .then(config => {\r\n        measurementIdToAppId[config.measurementId] = config.appId;\r\n        if (app.options.measurementId &&\r\n            config.measurementId !== app.options.measurementId) {\r\n            logger.warn(`The measurement ID in the local Firebase config (${app.options.measurementId})` +\r\n                ` does not match the measurement ID fetched from the server (${config.measurementId}).` +\r\n                ` To ensure analytics events are always sent to the correct Analytics property,` +\r\n                ` update the` +\r\n                ` measurement ID field in the local config or remove it from the local config.`);\r\n        }\r\n    })\r\n        .catch(e => logger.error(e));\r\n    // Add to list to track state of all dynamic config promises.\r\n    dynamicConfigPromisesList.push(dynamicConfigPromise);\r\n    const fidPromise = validateIndexedDB().then(envIsValid => {\r\n        if (envIsValid) {\r\n            return installations.getId();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n    const [dynamicConfig, fid] = await Promise.all([\r\n        dynamicConfigPromise,\r\n        fidPromise\r\n    ]);\r\n    // Detect if user has already put the gtag <script> tag on this page.\r\n    if (!findGtagScriptOnPage()) {\r\n        insertScriptTag(dataLayerName, dynamicConfig.measurementId);\r\n    }\r\n    // This command initializes gtag.js and only needs to be called once for the entire web app,\r\n    // but since it is idempotent, we can call it multiple times.\r\n    // We keep it together with other initialization logic for better code structure.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    gtagCore('js', new Date());\r\n    const configProperties = {\r\n        // guard against developers accidentally setting properties with prefix `firebase_`\r\n        [ORIGIN_KEY]: 'firebase',\r\n        update: true\r\n    };\r\n    if (fid != null) {\r\n        configProperties[GA_FID_KEY] = fid;\r\n    }\r\n    // It should be the first config command called on this GA-ID\r\n    // Initialize this GA-ID and set FID on it using the gtag config API.\r\n    // Note: This will trigger a page_view event unless 'send_page_view' is set to false in\r\n    // `configProperties`.\r\n    gtagCore(\"config\" /* CONFIG */, dynamicConfig.measurementId, configProperties);\r\n    return dynamicConfig.measurementId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Analytics Service class.\r\n */\r\nclass AnalyticsService {\r\n    constructor(app) {\r\n        this.app = app;\r\n    }\r\n    _delete() {\r\n        delete initializationPromisesMap[this.app.options.appId];\r\n        return Promise.resolve();\r\n    }\r\n}\r\n/**\r\n * Maps appId to full initialization promise. Wrapped gtag calls must wait on\r\n * all or some of these, depending on the call's `send_to` param and the status\r\n * of the dynamic config fetches (see below).\r\n */\r\nlet initializationPromisesMap = {};\r\n/**\r\n * List of dynamic config fetch promises. In certain cases, wrapped gtag calls\r\n * wait on all these to be complete in order to determine if it can selectively\r\n * wait for only certain initialization (FID) promises or if it must wait for all.\r\n */\r\nlet dynamicConfigPromisesList = [];\r\n/**\r\n * Maps fetched measurementIds to appId. Populated when the app's dynamic config\r\n * fetch completes. If already populated, gtag config calls can use this to\r\n * selectively wait for only this app's initialization promise (FID) instead of all\r\n * initialization promises.\r\n */\r\nconst measurementIdToAppId = {};\r\n/**\r\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\r\n */\r\nlet dataLayerName = 'dataLayer';\r\n/**\r\n * Name for window global gtag function used by GA: defaults to 'gtag'.\r\n */\r\nlet gtagName = 'gtag';\r\n/**\r\n * Reproduction of standard gtag function or reference to existing\r\n * gtag function on window object.\r\n */\r\nlet gtagCoreFunction;\r\n/**\r\n * Wrapper around gtag function that ensures FID is sent with all\r\n * relevant event and config calls.\r\n */\r\nlet wrappedGtagFunction;\r\n/**\r\n * Flag to ensure page initialization steps (creation or wrapping of\r\n * dataLayer and gtag script) are only run once per page load.\r\n */\r\nlet globalInitDone = false;\r\n/**\r\n * Configures Firebase Analytics to use custom `gtag` or `dataLayer` names.\r\n * Intended to be used if `gtag.js` script has been installed on\r\n * this page independently of Firebase Analytics, and is using non-default\r\n * names for either the `gtag` function or for `dataLayer`.\r\n * Must be called before calling `getAnalytics()` or it won't\r\n * have any effect.\r\n *\r\n * @public\r\n *\r\n * @param options - Custom gtag and dataLayer names.\r\n */\r\nfunction settings(options) {\r\n    if (globalInitDone) {\r\n        throw ERROR_FACTORY$1.create(\"already-initialized\" /* ALREADY_INITIALIZED */);\r\n    }\r\n    if (options.dataLayerName) {\r\n        dataLayerName = options.dataLayerName;\r\n    }\r\n    if (options.gtagName) {\r\n        gtagName = options.gtagName;\r\n    }\r\n}\r\n/**\r\n * Returns true if no environment mismatch is found.\r\n * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT\r\n * error that also lists details for each mismatch found.\r\n */\r\nfunction warnOnBrowserContextMismatch() {\r\n    const mismatchedEnvMessages = [];\r\n    if (isBrowserExtension()) {\r\n        mismatchedEnvMessages.push('This is a browser extension environment.');\r\n    }\r\n    if (!areCookiesEnabled()) {\r\n        mismatchedEnvMessages.push('Cookies are not available.');\r\n    }\r\n    if (mismatchedEnvMessages.length > 0) {\r\n        const details = mismatchedEnvMessages\r\n            .map((message, index) => `(${index + 1}) ${message}`)\r\n            .join(' ');\r\n        const err = ERROR_FACTORY$1.create(\"invalid-analytics-context\" /* INVALID_ANALYTICS_CONTEXT */, {\r\n            errorInfo: details\r\n        });\r\n        logger.warn(err.message);\r\n    }\r\n}\r\n/**\r\n * Analytics instance factory.\r\n * @internal\r\n */\r\nfunction factory(app, installations) {\r\n    warnOnBrowserContextMismatch();\r\n    const appId = app.options.appId;\r\n    if (!appId) {\r\n        throw ERROR_FACTORY$1.create(\"no-app-id\" /* NO_APP_ID */);\r\n    }\r\n    if (!app.options.apiKey) {\r\n        if (app.options.measurementId) {\r\n            logger.warn(`The \"apiKey\" field is empty in the local Firebase config. This is needed to fetch the latest` +\r\n                ` measurement ID for this Firebase app. Falling back to the measurement ID ${app.options.measurementId}` +\r\n                ` provided in the \"measurementId\" field in the local Firebase config.`);\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY$1.create(\"no-api-key\" /* NO_API_KEY */);\r\n        }\r\n    }\r\n    if (initializationPromisesMap[appId] != null) {\r\n        throw ERROR_FACTORY$1.create(\"already-exists\" /* ALREADY_EXISTS */, {\r\n            id: appId\r\n        });\r\n    }\r\n    if (!globalInitDone) {\r\n        // Steps here should only be done once per page: creation or wrapping\r\n        // of dataLayer and global gtag function.\r\n        getOrCreateDataLayer(dataLayerName);\r\n        const { wrappedGtag, gtagCore } = wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagName);\r\n        wrappedGtagFunction = wrappedGtag;\r\n        gtagCoreFunction = gtagCore;\r\n        globalInitDone = true;\r\n    }\r\n    // Async but non-blocking.\r\n    // This map reflects the completion state of all promises for each appId.\r\n    initializationPromisesMap[appId] = initializeAnalytics(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCoreFunction, dataLayerName);\r\n    const analyticsInstance = new AnalyticsService(app);\r\n    return analyticsInstance;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Logs an analytics event through the Firebase SDK.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\r\n * @param eventParams Analytics event parameters.\r\n */\r\nasync function logEvent(gtagFunction, initializationPromise, eventName, eventParams, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(\"event\" /* EVENT */, eventName, eventParams);\r\n        return;\r\n    }\r\n    else {\r\n        const measurementId = await initializationPromise;\r\n        const params = Object.assign(Object.assign({}, eventParams), { 'send_to': measurementId });\r\n        gtagFunction(\"event\" /* EVENT */, eventName, params);\r\n    }\r\n}\r\n/**\r\n * Set screen_name parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param screenName Screen name string to set.\r\n */\r\nasync function setCurrentScreen(gtagFunction, initializationPromise, screenName, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(\"set\" /* SET */, { 'screen_name': screenName });\r\n        return Promise.resolve();\r\n    }\r\n    else {\r\n        const measurementId = await initializationPromise;\r\n        gtagFunction(\"config\" /* CONFIG */, measurementId, {\r\n            update: true,\r\n            'screen_name': screenName\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set user_id parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param id User ID string to set\r\n */\r\nasync function setUserId(gtagFunction, initializationPromise, id, options) {\r\n    if (options && options.global) {\r\n        gtagFunction(\"set\" /* SET */, { 'user_id': id });\r\n        return Promise.resolve();\r\n    }\r\n    else {\r\n        const measurementId = await initializationPromise;\r\n        gtagFunction(\"config\" /* CONFIG */, measurementId, {\r\n            update: true,\r\n            'user_id': id\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set all other user properties other than user_id and screen_name.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param properties Map of user properties to set\r\n */\r\nasync function setUserProperties(gtagFunction, initializationPromise, properties, options) {\r\n    if (options && options.global) {\r\n        const flatProperties = {};\r\n        for (const key of Object.keys(properties)) {\r\n            // use dot notation for merge behavior in gtag.js\r\n            flatProperties[`user_properties.${key}`] = properties[key];\r\n        }\r\n        gtagFunction(\"set\" /* SET */, flatProperties);\r\n        return Promise.resolve();\r\n    }\r\n    else {\r\n        const measurementId = await initializationPromise;\r\n        gtagFunction(\"config\" /* CONFIG */, measurementId, {\r\n            update: true,\r\n            'user_properties': properties\r\n        });\r\n    }\r\n}\r\n/**\r\n * Set whether collection is enabled for this ID.\r\n *\r\n * @param enabled If true, collection is enabled for this ID.\r\n */\r\nasync function setAnalyticsCollectionEnabled(initializationPromise, enabled) {\r\n    const measurementId = await initializationPromise;\r\n    window[`ga-disable-${measurementId}`] = !enabled;\r\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Returns a Firebase Analytics instance for the given app.\r\n *\r\n * @public\r\n *\r\n * @param app - The FirebaseApp to use.\r\n */\r\nfunction getAnalytics(app = getApp()) {\r\n    app = getModularInstance(app);\r\n    // Dependencies\r\n    const analyticsProvider = _getProvider(app, ANALYTICS_TYPE);\r\n    const analyticsInstance = analyticsProvider.getImmediate();\r\n    return analyticsInstance;\r\n}\r\n/**\r\n * This is a public static method provided to users that wraps four different checks:\r\n *\r\n * 1. Check if it's not a browser extension environment.\r\n * 2. Check if cookies are enabled in current browser.\r\n * 3. Check if IndexedDB is supported by the browser environment.\r\n * 4. Check if the current browser context is valid for using IndexedDB.open().\r\n *\r\n * @public\r\n *\r\n */\r\nasync function isSupported() {\r\n    if (isBrowserExtension()) {\r\n        return false;\r\n    }\r\n    if (!areCookiesEnabled()) {\r\n        return false;\r\n    }\r\n    if (!isIndexedDBAvailable()) {\r\n        return false;\r\n    }\r\n    try {\r\n        const isDBOpenable = await validateIndexedDBOpenable();\r\n        return isDBOpenable;\r\n    }\r\n    catch (error) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Use gtag 'config' command to set 'screen_name'.\r\n *\r\n * @public\r\n *\r\n * @param analyticsInstance - Firebase Analytics instance.\r\n * @param screenName - Screen name to set.\r\n */\r\nfunction setCurrentScreen$1(analyticsInstance, screenName, options) {\r\n    analyticsInstance = getModularInstance(analyticsInstance);\r\n    setCurrentScreen(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], screenName, options).catch(e => logger.error(e));\r\n}\r\n/**\r\n * Use gtag 'config' command to set 'user_id'.\r\n *\r\n * @public\r\n *\r\n * @param analyticsInstance - Firebase Analytics instance.\r\n * @param id - User ID to set.\r\n */\r\nfunction setUserId$1(analyticsInstance, id, options) {\r\n    analyticsInstance = getModularInstance(analyticsInstance);\r\n    setUserId(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], id, options).catch(e => logger.error(e));\r\n}\r\n/**\r\n * Use gtag 'config' command to set all params specified.\r\n *\r\n * @public\r\n */\r\nfunction setUserProperties$1(analyticsInstance, properties, options) {\r\n    analyticsInstance = getModularInstance(analyticsInstance);\r\n    setUserProperties(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], properties, options).catch(e => logger.error(e));\r\n}\r\n/**\r\n * Sets whether analytics collection is enabled for this app on this device.\r\n * window['ga-disable-analyticsId'] = true;\r\n *\r\n * @public\r\n *\r\n * @param analyticsInstance - Firebase Analytics instance.\r\n * @param enabled - If true, enables collection, if false, disables it.\r\n */\r\nfunction setAnalyticsCollectionEnabled$1(analyticsInstance, enabled) {\r\n    analyticsInstance = getModularInstance(analyticsInstance);\r\n    setAnalyticsCollectionEnabled(initializationPromisesMap[analyticsInstance.app.options.appId], enabled).catch(e => logger.error(e));\r\n}\r\n/**\r\n * Sends analytics event with given `eventParams`. This method\r\n * automatically associates this logged event with this Firebase web\r\n * app instance on this device.\r\n * List of official event parameters can be found in the gtag.js\r\n * reference documentation:\r\n * {@link https://developers.google.com/gtagjs/reference/event\r\n * | the gtag.js reference documentation}.\r\n *\r\n * @public\r\n */\r\nfunction logEvent$1(analyticsInstance, eventName, eventParams, options) {\r\n    analyticsInstance = getModularInstance(analyticsInstance);\r\n    logEvent(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], eventName, eventParams, options).catch(e => logger.error(e));\r\n}\n\nconst name$1 = \"@firebase/analytics-exp\";\nconst version$1 = \"0.0.900-exp.d92a36260\";\n\n/**\r\n * Firebase Analytics\r\n *\r\n * @packageDocumentation\r\n */\r\nfunction registerAnalytics() {\r\n    _registerComponent(new Component(ANALYTICS_TYPE, container => {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-exp').getImmediate();\r\n        const installations = container\r\n            .getProvider('installations-exp-internal')\r\n            .getImmediate();\r\n        return factory(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    _registerComponent(new Component('analytics-internal', internalFactory, \"PRIVATE\" /* PRIVATE */));\r\n    registerVersion(name$1, version$1);\r\n    function internalFactory(container) {\r\n        try {\r\n            const analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();\r\n            return {\r\n                logEvent: (eventName, eventParams, options) => logEvent$1(analytics, eventName, eventParams, options)\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ERROR_FACTORY$1.create(\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */, {\r\n                reason: e\r\n            });\r\n        }\r\n    }\r\n}\r\nregisterAnalytics();\n\nexport { getAnalytics, isSupported, logEvent$1 as logEvent, setAnalyticsCollectionEnabled$1 as setAnalyticsCollectionEnabled, setCurrentScreen$1 as setCurrentScreen, setUserId$1 as setUserId, setUserProperties$1 as setUserProperties, settings };\n", "import { initializeApp } from \"../_snowpack/pkg/firebase/app.js\";\nimport { user } from \"./stores/data.js\";\n\nimport {\n\tGoogleAuthProvider,\n\tgetAuth,\n\tsignInWithRedirect,\n\tgetRedirectResult,\n} from \"../_snowpack/pkg/firebase/auth.js\";\n\nimport \"../_snowpack/pkg/firebase/analytics.js\";\nimport \"../_snowpack/pkg/firebase/auth.js\";\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyDWiDgqYUOUq1tsA8C5zY3eJR170KRa3qA\",\n\tauthDomain: \"finanzas-cfeb0.firebaseapp.com\",\n\tprojectId: \"finanzas-cfeb0\",\n\tstorageBucket: \"finanzas-cfeb0.appspot.com\",\n\tmessagingSenderId: \"245107666949\",\n\tappId: \"1:245107666949:web:f8bac696fa6a205541ac6c\",\n\tmeasurementId: \"G-LR1WRTGGG2\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\n\nconst auth = getAuth();\n\nexport const signIn = () => signInWithRedirect(auth, provider);\n\nlet userStore = user;\n\nexport const getToken = () =>\n\tgetRedirectResult(auth)\n\t\t.then((result) => {\n\t\t\t// This gives you a Google Access Token. You can use it to access Google APIs.\n\t\t\tconst credential = GoogleAuthProvider.credentialFromResult(result);\n\t\t\tconst token = credential.accessToken;\n\n\t\t\t// The signed-in user info.\n\t\t\tconst user = result.user;\n\t\t\tconsole.log(user);\n\t\t\tconsole.log(user.displayName);\n\n\t\t\tlet userData = {\n\t\t\t\tname: user.displayName.split(\" \")[0],\n\t\t\t\timg: user.photoURL,\n\t\t\t};\n\t\t\tuserStore.set(userData);\n\t\t})\n\t\t.catch((error) => {\n\t\t\t// Handle Errors here.\n\t\t\tconst errorCode = error.code;\n\t\t\tconst errorMessage = error.message;\n\t\t\t// The email of the user's account used.\n\t\t\tconst email = error.email;\n\t\t\t// The AuthCredential type that was used.\n\t\t\tconst credential = GoogleAuthProvider.credentialFromError(error);\n\t\t\t// ...\n\t\t});\n", "/* src/lib/atoms/Avatar.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tattr,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tnoop,\n\tsafe_not_equal\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nfunction create_fragment(ctx) {\n\tlet img_1;\n\tlet img_1_src_value;\n\n\treturn {\n\t\tc() {\n\t\t\timg_1 = element(\"img\");\n\t\t\tattr(img_1, \"class\", \"w-12 h-12 rounded-full\");\n\t\t\tif (img_1.src !== (img_1_src_value = /*img*/ ctx[0])) attr(img_1, \"src\", img_1_src_value);\n\t\t\tattr(img_1, \"alt\", \"Avatar\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, img_1, anchor);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*img*/ 1 && img_1.src !== (img_1_src_value = /*img*/ ctx[0])) {\n\t\t\t\tattr(img_1, \"src\", img_1_src_value);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(img_1);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { img = \"icons/user.svg\" } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif (\"img\" in $$props) $$invalidate(0, img = $$props.img);\n\t};\n\n\treturn [img];\n}\n\nclass Avatar extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { img: 0 });\n\t}\n}\n\nexport default Avatar;", "/* src/lib/components/Navbar.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tattr,\n\tcomponent_subscribe,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tlisten,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"../../../_snowpack/pkg/svelte/internal.js\";\n\nimport Button from \"../atoms/Button.svelte.js\";\nimport { user } from \"../../stores/data.js\";\nimport { signIn, getToken } from \"../../firebase.js\";\nimport Avatar from \"../atoms/Avatar.svelte.js\";\n\nfunction create_fragment(ctx) {\n\tlet div2;\n\tlet div0;\n\tlet avatar;\n\tlet t;\n\tlet div1;\n\tlet button;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tavatar = new Avatar({ props: { img: /*$user*/ ctx[0].img } });\n\tbutton = new Button({ props: { props: /*buttom*/ ctx[1] } });\n\n\treturn {\n\t\tc() {\n\t\t\tdiv2 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tcreate_component(avatar.$$.fragment);\n\t\t\tt = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tcreate_component(button.$$.fragment);\n\t\t\tattr(div0, \"class\", \"float-right\");\n\t\t\tattr(div1, \"class\", \"float-left\");\n\t\t\tattr(div2, \"class\", \"w-screen p-8\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div2, anchor);\n\t\t\tappend(div2, div0);\n\t\t\tmount_component(avatar, div0, null);\n\t\t\tappend(div2, t);\n\t\t\tappend(div2, div1);\n\t\t\tmount_component(button, div1, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(div0, \"click\", signIn);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst avatar_changes = {};\n\t\t\tif (dirty & /*$user*/ 1) avatar_changes.img = /*$user*/ ctx[0].img;\n\t\t\tavatar.$set(avatar_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(avatar.$$.fragment, local);\n\t\t\ttransition_in(button.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(avatar.$$.fragment, local);\n\t\t\ttransition_out(button.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div2);\n\t\t\tdestroy_component(avatar);\n\t\t\tdestroy_component(button);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet $user;\n\tcomponent_subscribe($$self, user, $$value => $$invalidate(0, $user = $$value));\n\tconst buttom = { icon: \"menu\", style: \"primary\" };\n\tgetToken();\n\treturn [$user, buttom];\n}\n\nclass Navbar extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {});\n\t}\n}\n\nexport default Navbar;", "/* src/App.svelte generated by Svelte v3.38.2 */\nimport {\n\tSvelteComponent,\n\tcheck_outros,\n\tcreate_component,\n\tdestroy_component,\n\tdetach,\n\tgroup_outros,\n\tinit,\n\tinsert,\n\tmount_component,\n\tsafe_not_equal,\n\tspace,\n\ttransition_in,\n\ttransition_out\n} from \"../_snowpack/pkg/svelte/internal.js\";\n\nimport Home from \"./lib/pages/Home.svelte.js\";\nimport User from \"./lib/pages/User.svelte.js\";\nimport Menu from \"./lib/components/Menu.svelte.js\";\nimport Settings from \"./lib/pages/Settings.svelte.js\";\nimport Navbar from \"./lib/components/Navbar.svelte.js\";\n\nfunction create_fragment(ctx) {\n\tlet navbar;\n\tlet t0;\n\tlet switch_instance;\n\tlet t1;\n\tlet menu;\n\tlet current;\n\tnavbar = new Navbar({});\n\tvar switch_value = /*page*/ ctx[1];\n\n\tfunction switch_props(ctx) {\n\t\treturn {};\n\t}\n\n\tif (switch_value) {\n\t\tswitch_instance = new switch_value(switch_props(ctx));\n\t}\n\n\tmenu = new Menu({\n\t\t\tprops: {\n\t\t\t\tcurrent: /*current*/ ctx[0],\n\t\t\t\tselectedBtn: /*selectedBtn*/ ctx[2]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(navbar.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tif (switch_instance) create_component(switch_instance.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(menu.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(navbar, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\n\t\t\tif (switch_instance) {\n\t\t\t\tmount_component(switch_instance, target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, t1, anchor);\n\t\t\tmount_component(menu, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (switch_value !== (switch_value = /*page*/ ctx[1])) {\n\t\t\t\tif (switch_instance) {\n\t\t\t\t\tgroup_outros();\n\t\t\t\t\tconst old_component = switch_instance;\n\n\t\t\t\t\ttransition_out(old_component.$$.fragment, 1, 0, () => {\n\t\t\t\t\t\tdestroy_component(old_component, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (switch_value) {\n\t\t\t\t\tswitch_instance = new switch_value(switch_props(ctx));\n\t\t\t\t\tcreate_component(switch_instance.$$.fragment);\n\t\t\t\t\ttransition_in(switch_instance.$$.fragment, 1);\n\t\t\t\t\tmount_component(switch_instance, t1.parentNode, t1);\n\t\t\t\t} else {\n\t\t\t\t\tswitch_instance = null;\n\t\t\t\t}\n\t\t\t} else if (switch_value) {\n\t\t\t\t\n\t\t\t}\n\n\t\t\tconst menu_changes = {};\n\t\t\tif (dirty & /*current*/ 1) menu_changes.current = /*current*/ ctx[0];\n\t\t\tmenu.$set(menu_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(navbar.$$.fragment, local);\n\t\t\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\n\t\t\ttransition_in(menu.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(navbar.$$.fragment, local);\n\t\t\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\n\t\t\ttransition_out(menu.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(navbar, detaching);\n\t\t\tif (detaching) detach(t0);\n\t\t\tif (switch_instance) destroy_component(switch_instance, detaching);\n\t\t\tif (detaching) detach(t1);\n\t\t\tdestroy_component(menu, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet page;\n\tlet current = \"home\";\n\n\tconst selectedBtn = icon => {\n\t\t$$invalidate(0, current = icon);\n\t};\n\n\tconst pages = {\n\t\thome: Home,\n\t\tprofile: User,\n\t\tlightning: Settings\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*current*/ 1) {\n\t\t\t$: $$invalidate(1, page = pages[current]);\n\t\t}\n\t};\n\n\treturn [current, page, selectedBtn];\n}\n\nclass App extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {});\n\t}\n}\n\nexport default App;", "import * as __SNOWPACK_ENV__ from '../_snowpack/env.js';\nimport.meta.env = __SNOWPACK_ENV__;\n\nimport App from \"./App.svelte.js\";\nimport \"./styles/Tailwind.css\";\nvar app = new App({\n  target: document.body\n});\nexport default app;\nif (import.meta?.hot) {\n  undefined /* [snowpack] import.meta.hot */ .accept();\n  undefined /* [snowpack] import.meta.hot */ .dispose(() => {\n    app.$destroy();\n  });\n}\n"],
  "mappings": "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",
  "names": []
}
